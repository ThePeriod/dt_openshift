apiVersion: v1
items:
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      openshift.io/backup-registry-hostname: docker-registry.default.svc:5000
      openshift.io/backup-server-version: "1.11"
      openshift.io/migration-registry: 172.30.245.25:5000
      openshift.io/restore-registry-hostname: image-registry.openshift-image-registry.svc:5000
      openshift.io/restore-server-version: "1.23"
    creationTimestamp: "2023-06-03T20:16:44Z"
    generation: 5
    labels:
      app: sonarqube
      pod-template-hash: 6659d87655
      release: sonarqube
    name: sonarqube-sonarqube-6659d87655
    namespace: cicd
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: sonarqube-sonarqube
      uid: 396a6726-ed81-4d7b-a7e3-1033df97664d
    resourceVersion: "472847102"
    uid: 260be26b-1a3c-4394-9d03-0b30477c865c
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: sonarqube
        pod-template-hash: 6659d87655
        release: sonarqube
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: sonarqube
          pod-template-hash: 6659d87655
          release: sonarqube
      spec:
        containers:
        - env:
          - name: SONARQUBE_WEB_JVM_OPTS
          - name: SONARQUBE_JDBC_USERNAME
            value: sonarUser
          - name: SONARQUBE_JDBC_PASSWORD
            valueFrom:
              secretKeyRef:
                key: postgresql-password
                name: sonarqube-postgresql
          - name: SONARQUBE_JDBC_URL
            value: jdbc:postgresql://sonarqube-postgresql:5432/sonarDB
          image: sonarqube:7.9.2-community
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /sessions/new
              port: http
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: sonarqube
          ports:
          - containerPort: 9000
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              path: /sessions/new
              port: http
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 800m
              memory: 2Gi
            requests:
              cpu: 100m
              memory: 1Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/sonarqube/conf/
            name: config
          - mountPath: /opt/sonarqube/data
            name: sonarqube
            subPath: data
          - mountPath: /opt/sonarqube/extensions/plugins/tmp
            name: sonarqube
            subPath: tmp
          - mountPath: /opt/sonarqube/extensions/downloads
            name: sonarqube
            subPath: downloads
          - mountPath: /opt/sonarqube/extensions/plugins
            name: sonarqube
            subPath: plugins
          - mountPath: /opt/sonarqube/temp
            name: sonarqube
            subPath: temp
          - mountPath: /opt/sonarqube/logs
            name: sonarqube
            subPath: logs
          - mountPath: /tmp
            name: tmp-dir
          - mountPath: /tmp/scripts
            name: copy-plugins
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - sh
          - -c
          - mkdir -p $(printf "/opt/sonarqube/${1-%s\n}" temp logs data extensions/downloads
            extensions/plugins/tmp extensions/plugins certs) && chown 999:999 -R $(printf
            "/opt/sonarqube/${1-%s\n}" temp logs data extensions/downloads extensions/plugins/tmp
            extensions/plugins certs)
          image: busybox:1.31
          imagePullPolicy: IfNotPresent
          name: chmod-volume-mounts
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/sonarqube/temp
            name: sonarqube
            subPath: temp
          - mountPath: /opt/sonarqube/logs
            name: sonarqube
            subPath: logs
          - mountPath: /opt/sonarqube/data
            name: sonarqube
            subPath: data
          - mountPath: /opt/sonarqube/extensions/plugins/tmp
            name: sonarqube
            subPath: tmp
          - mountPath: /opt/sonarqube/extensions/downloads
            name: sonarqube
            subPath: downloads
          - mountPath: /opt/sonarqube/extensions/plugins
            name: sonarqube
            subPath: plugins
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 5555
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: sonar.properties
              path: sonar.properties
            name: sonarqube-sonarqube-config
          name: config
        - configMap:
            defaultMode: 420
            items:
            - key: install_plugins.sh
              path: install_plugins.sh
            name: sonarqube-sonarqube-install-plugins
          name: install-plugins
        - configMap:
            defaultMode: 493
            items:
            - key: copy_plugins.sh
              path: copy_plugins.sh
            name: sonarqube-sonarqube-copy-plugins
          name: copy-plugins
        - name: sonarqube
          persistentVolumeClaim:
            claimName: sonarqube-sonarqube
        - emptyDir: {}
          name: tmp-dir
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 5
    readyReplicas: 1
    replicas: 1
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
