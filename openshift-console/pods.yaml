apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      console.openshift.io/console-config-version: "26014"
      console.openshift.io/image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:eae9114b14071c50a1996b95eccf6fad8df53c5cc689dce069dec466413430d4
      console.openshift.io/infrastructure-config-version: "598"
      console.openshift.io/oauth-secret-version: "26045"
      console.openshift.io/oauth-serving-cert-config-version: "25885"
      console.openshift.io/proxy-config-version: "619"
      console.openshift.io/service-ca-config-version: "369058411"
      console.openshift.io/trusted-ca-config-version: "26020"
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "openshift-sdn",
            "interface": "eth0",
            "ips": [
                "10.130.1.52"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "openshift-sdn",
            "interface": "eth0",
            "ips": [
                "10.130.1.52"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/scc: restricted
    creationTimestamp: "2024-06-02T21:40:54Z"
    generateName: console-6fbdbf6498-
    labels:
      app: console
      component: ui
      pod-template-hash: 6fbdbf6498
    name: console-6fbdbf6498-ngnf6
    namespace: openshift-console
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: console-6fbdbf6498
      uid: 85b6ac90-344a-49ad-b19e-142a7bbe5613
    resourceVersion: "369059607"
    uid: 2492db8e-36c0-4ce9-92d1-0588d3c6d464
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: component
              operator: In
              values:
              - ui
          topologyKey: kubernetes.io/hostname
    containers:
    - command:
      - /opt/bridge/bin/bridge
      - --public-dir=/opt/bridge/static
      - --config=/var/console-config/console-config.yaml
      - --service-ca-file=/var/service-ca/service-ca.crt
      - --v=2
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:eae9114b14071c50a1996b95eccf6fad8df53c5cc689dce069dec466413430d4
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - sleep
            - "25"
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 8443
          scheme: HTTPS
        initialDelaySeconds: 150
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: console
      ports:
      - containerPort: 8443
        name: https
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 8443
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 10m
          memory: 100Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1000620000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/serving-cert
        name: console-serving-cert
        readOnly: true
      - mountPath: /var/oauth-config
        name: console-oauth-config
        readOnly: true
      - mountPath: /var/console-config
        name: console-config
        readOnly: true
      - mountPath: /var/service-ca
        name: service-ca
        readOnly: true
      - mountPath: /var/oauth-serving-cert
        name: oauth-serving-cert
        readOnly: true
      - mountPath: /etc/pki/ca-trust/extracted/pem
        name: trusted-ca-bundle
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zlmxg
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: console-dockercfg-g4m4n
    nodeName: ocp4azu-sj2sl-master-1
    nodeSelector:
      node-role.kubernetes.io/master: ""
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000620000
      seLinuxOptions:
        level: s0:c25,c10
    serviceAccount: console
    serviceAccountName: console
    terminationGracePeriodSeconds: 40
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 120
    - effect: NoExecute
      key: node.kubernetes.io/not-reachable
      operator: Exists
      tolerationSeconds: 120
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: console-serving-cert
      secret:
        defaultMode: 420
        secretName: console-serving-cert
    - name: console-oauth-config
      secret:
        defaultMode: 420
        secretName: console-oauth-config
    - configMap:
        defaultMode: 420
        name: console-config
      name: console-config
    - configMap:
        defaultMode: 420
        name: service-ca
      name: service-ca
    - configMap:
        defaultMode: 420
        name: oauth-serving-cert
      name: oauth-serving-cert
    - configMap:
        defaultMode: 420
        items:
        - key: ca-bundle.crt
          path: tls-ca-bundle.pem
        name: trusted-ca-bundle
      name: trusted-ca-bundle
    - name: kube-api-access-zlmxg
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-02T21:41:21Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-02T21:41:24Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-02T21:41:24Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-02T21:41:21Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://f36cee778e69bb93e77f7d2e991ac115dad060f1740a9b3494bdadacdc3d4355
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:eae9114b14071c50a1996b95eccf6fad8df53c5cc689dce069dec466413430d4
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:eae9114b14071c50a1996b95eccf6fad8df53c5cc689dce069dec466413430d4
      lastState: {}
      name: console
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-02T21:41:23Z"
    hostIP: 10.80.80.8
    phase: Running
    podIP: 10.130.1.52
    podIPs:
    - ip: 10.130.1.52
    qosClass: Burstable
    startTime: "2024-06-02T21:41:21Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      console.openshift.io/console-config-version: "26014"
      console.openshift.io/image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:eae9114b14071c50a1996b95eccf6fad8df53c5cc689dce069dec466413430d4
      console.openshift.io/infrastructure-config-version: "598"
      console.openshift.io/oauth-secret-version: "26045"
      console.openshift.io/oauth-serving-cert-config-version: "25885"
      console.openshift.io/proxy-config-version: "619"
      console.openshift.io/service-ca-config-version: "369058411"
      console.openshift.io/trusted-ca-config-version: "26020"
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "openshift-sdn",
            "interface": "eth0",
            "ips": [
                "10.129.0.207"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "openshift-sdn",
            "interface": "eth0",
            "ips": [
                "10.129.0.207"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/scc: restricted
    creationTimestamp: "2024-06-02T21:40:54Z"
    generateName: console-6fbdbf6498-
    labels:
      app: console
      component: ui
      pod-template-hash: 6fbdbf6498
    name: console-6fbdbf6498-xcw6l
    namespace: openshift-console
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: console-6fbdbf6498
      uid: 85b6ac90-344a-49ad-b19e-142a7bbe5613
    resourceVersion: "369058634"
    uid: b506e6fb-4595-4d1d-a978-d49b5698e854
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: component
              operator: In
              values:
              - ui
          topologyKey: kubernetes.io/hostname
    containers:
    - command:
      - /opt/bridge/bin/bridge
      - --public-dir=/opt/bridge/static
      - --config=/var/console-config/console-config.yaml
      - --service-ca-file=/var/service-ca/service-ca.crt
      - --v=2
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:eae9114b14071c50a1996b95eccf6fad8df53c5cc689dce069dec466413430d4
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - sleep
            - "25"
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 8443
          scheme: HTTPS
        initialDelaySeconds: 150
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: console
      ports:
      - containerPort: 8443
        name: https
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /health
          port: 8443
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 10m
          memory: 100Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1000620000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/serving-cert
        name: console-serving-cert
        readOnly: true
      - mountPath: /var/oauth-config
        name: console-oauth-config
        readOnly: true
      - mountPath: /var/console-config
        name: console-config
        readOnly: true
      - mountPath: /var/service-ca
        name: service-ca
        readOnly: true
      - mountPath: /var/oauth-serving-cert
        name: oauth-serving-cert
        readOnly: true
      - mountPath: /etc/pki/ca-trust/extracted/pem
        name: trusted-ca-bundle
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bx7v7
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: console-dockercfg-g4m4n
    nodeName: ocp4azu-sj2sl-master-0
    nodeSelector:
      node-role.kubernetes.io/master: ""
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000620000
      seLinuxOptions:
        level: s0:c25,c10
    serviceAccount: console
    serviceAccountName: console
    terminationGracePeriodSeconds: 40
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 120
    - effect: NoExecute
      key: node.kubernetes.io/not-reachable
      operator: Exists
      tolerationSeconds: 120
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: console-serving-cert
      secret:
        defaultMode: 420
        secretName: console-serving-cert
    - name: console-oauth-config
      secret:
        defaultMode: 420
        secretName: console-oauth-config
    - configMap:
        defaultMode: 420
        name: console-config
      name: console-config
    - configMap:
        defaultMode: 420
        name: service-ca
      name: service-ca
    - configMap:
        defaultMode: 420
        name: oauth-serving-cert
      name: oauth-serving-cert
    - configMap:
        defaultMode: 420
        items:
        - key: ca-bundle.crt
          path: tls-ca-bundle.pem
        name: trusted-ca-bundle
      name: trusted-ca-bundle
    - name: kube-api-access-bx7v7
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-02T21:40:54Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-02T21:40:58Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-02T21:40:58Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-02T21:40:54Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://5f179b920b7cf825cb784890b5a4bd86cf8b15cea27daf58a365b928dc18a629
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:eae9114b14071c50a1996b95eccf6fad8df53c5cc689dce069dec466413430d4
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:eae9114b14071c50a1996b95eccf6fad8df53c5cc689dce069dec466413430d4
      lastState: {}
      name: console
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-02T21:40:57Z"
    hostIP: 10.80.80.6
    phase: Running
    podIP: 10.129.0.207
    podIPs:
    - ip: 10.129.0.207
    qosClass: Burstable
    startTime: "2024-06-02T21:40:54Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "openshift-sdn",
            "interface": "eth0",
            "ips": [
                "10.130.1.85"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "openshift-sdn",
            "interface": "eth0",
            "ips": [
                "10.130.1.85"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/scc: restricted
    creationTimestamp: "2024-06-30T06:24:39Z"
    generateName: downloads-7dc8c885d8-
    labels:
      app: console
      component: downloads
      pod-template-hash: 7dc8c885d8
    name: downloads-7dc8c885d8-lfjlc
    namespace: openshift-console
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: downloads-7dc8c885d8
      uid: 9d8b4404-262a-4e86-afbd-06c041088705
    resourceVersion: "425755079"
    uid: b9cb4fbe-d4bc-4d56-8233-8ff7f9f8f829
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: component
              operator: In
              values:
              - downloads
          topologyKey: kubernetes.io/hostname
    containers:
    - args:
      - -c
      - "cat <<EOF >>/tmp/serve.py\nimport errno, http.server, os, re, signal, socket,
        sys, tarfile, tempfile, threading, time, zipfile\n\nsignal.signal(signal.SIGTERM,
        lambda signum, frame: sys.exit(0))\n\ndef write_index(path, message):\n  with
        open(path, 'wb') as f:\n    f.write('\\n'.join([\n      '<!doctype html>',\n
        \     '<html lang=\"en\">',\n      '<head>',\n      '  <meta charset=\"utf-8\">',\n
        \     '</head>',\n      '<body>',\n      '  {}'.format(message),\n      '</body>',\n
        \     '</html>',\n      '',\n    ]).encode('utf-8'))\n\n# Launch multiple
        listeners as threads\nclass Thread(threading.Thread):\n  def __init__(self,
        i, socket):\n    threading.Thread.__init__(self)\n    self.i = i\n    self.socket
        = socket\n    self.daemon = True\n    self.start()\n\n  def run(self):\n    server
        = http.server.SimpleHTTPRequestHandler\n    server.server_version = \"OpenShift
        Downloads Server\"\n    server.sys_version = \"\"\n    httpd = http.server.HTTPServer(addr,
        server, False)\n\n    # Prevent the HTTP server from re-binding every handler.\n
        \   # https://stackoverflow.com/questions/46210672/\n    httpd.socket = self.socket\n
        \   httpd.server_bind = self.server_close = lambda self: None\n\n    httpd.serve_forever()\n\ntemp_dir
        = tempfile.mkdtemp()\nprint('serving from {}'.format(temp_dir))\nos.chdir(temp_dir)\nfor
        arch in ['amd64', 'arm64', 'ppc64le', 's390x']:\n  os.mkdir(arch)\ncontent
        = ['<a href=\"oc-license\">license</a>']\nos.symlink('/usr/share/openshift/LICENSE',
        'oc-license')\n\nfor arch, operating_system, path in [\n    ('amd64', 'linux',
        '/usr/share/openshift/linux_amd64/oc'),\n    ('amd64', 'mac', '/usr/share/openshift/mac/oc'),\n
        \   ('amd64', 'windows', '/usr/share/openshift/windows/oc.exe'),\n    ('arm64',
        'linux', '/usr/share/openshift/linux_arm64/oc'),\n    ('arm64', 'mac', '/usr/share/openshift/mac_arm64/oc'),\n
        \   ('ppc64le', 'linux', '/usr/share/openshift/linux_ppc64le/oc'),\n    ('s390x',
        'linux', '/usr/share/openshift/linux_s390x/oc'),\n    ]:\n  basename = os.path.basename(path)\n
        \ target_path = os.path.join(arch, operating_system, basename)\n  os.mkdir(os.path.join(arch,
        operating_system))\n  os.symlink(path, target_path)\n  base_root, _ = os.path.splitext(basename)\n
        \ archive_path_root = os.path.join(arch, operating_system, base_root)\n  with
        tarfile.open('{}.tar'.format(archive_path_root), 'w') as tar:\n    tar.add(path,
        basename)\n  with zipfile.ZipFile('{}.zip'.format(archive_path_root), 'w')
        as zip:\n    zip.write(path, basename)\n  content.append('<a href=\"{0}\">oc
        ({1} {2})</a> (<a href=\"{0}.tar\">tar</a> <a href=\"{0}.zip\">zip</a>)'.format(target_path,
        arch, operating_system))\n\nfor root, directories, filenames in os.walk(temp_dir):\n
        \ root_link = os.path.relpath(temp_dir, os.path.join(root, 'child')).replace(os.path.sep,
        '/')\n  for directory in directories:\n    write_index(\n      path=os.path.join(root,
        directory, 'index.html'),\n      message='<p>Directory listings are disabled.
        \ See <a href=\"{}\">here</a> for available content.</p>'.format(root_link),\n
        \   )\n\nwrite_index(\n  path=os.path.join(temp_dir, 'index.html'),\n  message='\\n'.join(\n
        \   ['<ul>'] +\n    ['  <li>{}</li>'.format(entry) for entry in content] +\n
        \   ['</ul>']\n  ),\n)\n\n# Create socket\n# IPv6 should handle IPv4 passively
        so long as it is not bound to a\n# specific address or set to IPv6_ONLY\n#
        https://stackoverflow.com/questions/25817848/python-3-does-http-server-support-ipv6\ntry:\n
        \ addr = ('::', 8080)\n  sock = socket.socket(socket.AF_INET6, socket.SOCK_STREAM)\nexcept
        socket.error as err:\n  # errno.EAFNOSUPPORT is \"socket.error: [Errno 97]
        Address family not supported by protocol\"\n  # When IPv6 is disabled, socket
        will bind using IPv4.\n  if err.errno == errno.EAFNOSUPPORT:\n    addr = ('',
        8080)\n    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n  else:\n
        \   raise    \nsock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\nsock.bind(addr)\nsock.listen(5)\n\n[Thread(i,
        socket=sock) for i in range(100)]\ntime.sleep(9e9)\nEOF\nexec python3 /tmp/serve.py\n"
      command:
      - /bin/sh
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ade57a60744eaf9a5f64f9cbb1d0043be90ebffac72e5bb43df7832dfd860b2f
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8080
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: download-server
      ports:
      - containerPort: 8080
        name: http
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8080
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 10m
          memory: 50Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1000620000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wx87h
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: default-dockercfg-zhn8x
    nodeName: ocp4azu-sj2sl-master-1
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000620000
      seLinuxOptions:
        level: s0:c25,c10
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 0
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 120
    - effect: NoExecute
      key: node.kubernetes.io/not-reachable
      operator: Exists
      tolerationSeconds: 120
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: kube-api-access-wx87h
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-06-30T06:24:39Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-06-30T06:25:09Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-06-30T06:25:09Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-06-30T06:24:39Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://6e4819f4cdee521460b14768f33ab5f163fc8ee4c6ce84517d902fef11d464e3
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ade57a60744eaf9a5f64f9cbb1d0043be90ebffac72e5bb43df7832dfd860b2f
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ade57a60744eaf9a5f64f9cbb1d0043be90ebffac72e5bb43df7832dfd860b2f
      lastState: {}
      name: download-server
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-06-30T06:25:02Z"
    hostIP: 10.80.80.8
    phase: Running
    podIP: 10.130.1.85
    podIPs:
    - ip: 10.130.1.85
    qosClass: Burstable
    startTime: "2024-06-30T06:24:39Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "openshift-sdn",
            "interface": "eth0",
            "ips": [
                "10.129.0.3"
            ],
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks-status: |-
        [{
            "name": "openshift-sdn",
            "interface": "eth0",
            "ips": [
                "10.129.0.3"
            ],
            "default": true,
            "dns": {}
        }]
      openshift.io/scc: restricted
    creationTimestamp: "2023-05-04T21:53:32Z"
    generateName: downloads-7dc8c885d8-
    labels:
      app: console
      component: downloads
      pod-template-hash: 7dc8c885d8
    name: downloads-7dc8c885d8-xv7kf
    namespace: openshift-console
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: downloads-7dc8c885d8
      uid: 9d8b4404-262a-4e86-afbd-06c041088705
    resourceVersion: "1607294"
    uid: 3e08cfe0-dbb3-433f-85d6-cfa5d37617dc
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - key: component
              operator: In
              values:
              - downloads
          topologyKey: kubernetes.io/hostname
    containers:
    - args:
      - -c
      - "cat <<EOF >>/tmp/serve.py\nimport errno, http.server, os, re, signal, socket,
        sys, tarfile, tempfile, threading, time, zipfile\n\nsignal.signal(signal.SIGTERM,
        lambda signum, frame: sys.exit(0))\n\ndef write_index(path, message):\n  with
        open(path, 'wb') as f:\n    f.write('\\n'.join([\n      '<!doctype html>',\n
        \     '<html lang=\"en\">',\n      '<head>',\n      '  <meta charset=\"utf-8\">',\n
        \     '</head>',\n      '<body>',\n      '  {}'.format(message),\n      '</body>',\n
        \     '</html>',\n      '',\n    ]).encode('utf-8'))\n\n# Launch multiple
        listeners as threads\nclass Thread(threading.Thread):\n  def __init__(self,
        i, socket):\n    threading.Thread.__init__(self)\n    self.i = i\n    self.socket
        = socket\n    self.daemon = True\n    self.start()\n\n  def run(self):\n    server
        = http.server.SimpleHTTPRequestHandler\n    server.server_version = \"OpenShift
        Downloads Server\"\n    server.sys_version = \"\"\n    httpd = http.server.HTTPServer(addr,
        server, False)\n\n    # Prevent the HTTP server from re-binding every handler.\n
        \   # https://stackoverflow.com/questions/46210672/\n    httpd.socket = self.socket\n
        \   httpd.server_bind = self.server_close = lambda self: None\n\n    httpd.serve_forever()\n\ntemp_dir
        = tempfile.mkdtemp()\nprint('serving from {}'.format(temp_dir))\nos.chdir(temp_dir)\nfor
        arch in ['amd64', 'arm64', 'ppc64le', 's390x']:\n  os.mkdir(arch)\ncontent
        = ['<a href=\"oc-license\">license</a>']\nos.symlink('/usr/share/openshift/LICENSE',
        'oc-license')\n\nfor arch, operating_system, path in [\n    ('amd64', 'linux',
        '/usr/share/openshift/linux_amd64/oc'),\n    ('amd64', 'mac', '/usr/share/openshift/mac/oc'),\n
        \   ('amd64', 'windows', '/usr/share/openshift/windows/oc.exe'),\n    ('arm64',
        'linux', '/usr/share/openshift/linux_arm64/oc'),\n    ('arm64', 'mac', '/usr/share/openshift/mac_arm64/oc'),\n
        \   ('ppc64le', 'linux', '/usr/share/openshift/linux_ppc64le/oc'),\n    ('s390x',
        'linux', '/usr/share/openshift/linux_s390x/oc'),\n    ]:\n  basename = os.path.basename(path)\n
        \ target_path = os.path.join(arch, operating_system, basename)\n  os.mkdir(os.path.join(arch,
        operating_system))\n  os.symlink(path, target_path)\n  base_root, _ = os.path.splitext(basename)\n
        \ archive_path_root = os.path.join(arch, operating_system, base_root)\n  with
        tarfile.open('{}.tar'.format(archive_path_root), 'w') as tar:\n    tar.add(path,
        basename)\n  with zipfile.ZipFile('{}.zip'.format(archive_path_root), 'w')
        as zip:\n    zip.write(path, basename)\n  content.append('<a href=\"{0}\">oc
        ({1} {2})</a> (<a href=\"{0}.tar\">tar</a> <a href=\"{0}.zip\">zip</a>)'.format(target_path,
        arch, operating_system))\n\nfor root, directories, filenames in os.walk(temp_dir):\n
        \ root_link = os.path.relpath(temp_dir, os.path.join(root, 'child')).replace(os.path.sep,
        '/')\n  for directory in directories:\n    write_index(\n      path=os.path.join(root,
        directory, 'index.html'),\n      message='<p>Directory listings are disabled.
        \ See <a href=\"{}\">here</a> for available content.</p>'.format(root_link),\n
        \   )\n\nwrite_index(\n  path=os.path.join(temp_dir, 'index.html'),\n  message='\\n'.join(\n
        \   ['<ul>'] +\n    ['  <li>{}</li>'.format(entry) for entry in content] +\n
        \   ['</ul>']\n  ),\n)\n\n# Create socket\n# IPv6 should handle IPv4 passively
        so long as it is not bound to a\n# specific address or set to IPv6_ONLY\n#
        https://stackoverflow.com/questions/25817848/python-3-does-http-server-support-ipv6\ntry:\n
        \ addr = ('::', 8080)\n  sock = socket.socket(socket.AF_INET6, socket.SOCK_STREAM)\nexcept
        socket.error as err:\n  # errno.EAFNOSUPPORT is \"socket.error: [Errno 97]
        Address family not supported by protocol\"\n  # When IPv6 is disabled, socket
        will bind using IPv4.\n  if err.errno == errno.EAFNOSUPPORT:\n    addr = ('',
        8080)\n    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n  else:\n
        \   raise    \nsock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)\nsock.bind(addr)\nsock.listen(5)\n\n[Thread(i,
        socket=sock) for i in range(100)]\ntime.sleep(9e9)\nEOF\nexec python3 /tmp/serve.py\n"
      command:
      - /bin/sh
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ade57a60744eaf9a5f64f9cbb1d0043be90ebffac72e5bb43df7832dfd860b2f
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8080
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: download-server
      ports:
      - containerPort: 8080
        name: http
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8080
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 10m
          memory: 50Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        runAsUser: 1000620000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-k2qdq
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: default-dockercfg-zhn8x
    nodeName: ocp4azu-sj2sl-master-0
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000620000
      seLinuxOptions:
        level: s0:c25,c10
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 0
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 120
    - effect: NoExecute
      key: node.kubernetes.io/not-reachable
      operator: Exists
      tolerationSeconds: 120
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: kube-api-access-k2qdq
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-05-04T21:53:32Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-05-11T18:26:32Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-05-11T18:26:32Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-05-04T21:53:32Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://b5d29ec19525948926485d9fb31fe6f230c87819cef0b5a53b2ee73dbf27dfa0
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ade57a60744eaf9a5f64f9cbb1d0043be90ebffac72e5bb43df7832dfd860b2f
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ade57a60744eaf9a5f64f9cbb1d0043be90ebffac72e5bb43df7832dfd860b2f
      lastState: {}
      name: download-server
      ready: true
      restartCount: 3
      started: true
      state:
        running:
          startedAt: "2023-05-11T18:26:18Z"
    hostIP: 10.80.80.6
    phase: Running
    podIP: 10.129.0.3
    podIPs:
    - ip: 10.129.0.3
    qosClass: Burstable
    startTime: "2023-05-04T21:53:32Z"
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
