apiVersion: v1
items:
- apiVersion: apps/v1
  data:
    spec:
      template:
        $patch: replace
        metadata:
          annotations:
            target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
          creationTimestamp: null
          labels:
            app: multus
            component: network
            openshift.io/component: network
            type: infra
        spec:
          containers:
          - args:
            - |
              /entrypoint/cnibincopy.sh; exec /entrypoint.sh --multus-conf-file=auto --multus-autoconfig-dir=/host/var/run/multus/cni/net.d --multus-kubeconfig-file-host=/etc/kubernetes/cni/net.d/multus.d/multus.kubeconfig --readiness-indicator-file=/var/run/multus/cni/net.d/80-openshift-network.conf --cleanup-config-on-exit=true --namespace-isolation=true --multus-log-level=verbose --cni-version=0.3.1 --additional-bin-dir=/opt/multus/bin --skip-multus-binary-copy=true - "--global-namespaces=default,openshift-multus,openshift-sriov-network-operator"
            command:
            - /bin/bash
            - -ec
            - --
            env:
            - name: RHEL7_SOURCE_DIRECTORY
              value: /usr/src/multus-cni/rhel7/bin/
            - name: RHEL8_SOURCE_DIRECTORY
              value: /usr/src/multus-cni/rhel8/bin/
            - name: DEFAULT_SOURCE_DIRECTORY
              value: /usr/src/multus-cni/bin/
            - name: KUBERNETES_SERVICE_PORT
              value: "6443"
            - name: KUBERNETES_SERVICE_HOST
              value: api-int.ocp4azu.dirtrab.cl
            image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:686319d43039666afd0558e8c67b7a7602ed39702ad87bd73f08da583b811752
            imagePullPolicy: IfNotPresent
            name: kube-multus
            resources:
              requests:
                cpu: 10m
                memory: 65Mi
            securityContext:
              privileged: true
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /entrypoint
              name: cni-binary-copy
            - mountPath: /host/etc/os-release
              name: os-release
            - mountPath: /host/etc/cni/net.d
              name: system-cni-dir
            - mountPath: /host/var/run/multus/cni/net.d
              name: multus-cni-dir
            - mountPath: /host/opt/cni/bin
              name: cnibin
          dnsPolicy: ClusterFirst
          hostNetwork: true
          nodeSelector:
            kubernetes.io/os: linux
          priorityClassName: system-node-critical
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: multus
          serviceAccountName: multus
          terminationGracePeriodSeconds: 30
          tolerations:
          - operator: Exists
          volumes:
          - hostPath:
              path: /etc/kubernetes/cni/net.d
              type: ""
            name: system-cni-dir
          - hostPath:
              path: /var/run/multus/cni/net.d
              type: ""
            name: multus-cni-dir
          - hostPath:
              path: /var/lib/cni/bin
              type: ""
            name: cnibin
          - hostPath:
              path: /etc/os-release
              type: File
            name: os-release
          - configMap:
              defaultMode: 484
              name: cni-binary-copy-script
            name: cni-binary-copy
  kind: ControllerRevision
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      kubernetes.io/description: |
        This daemon set launches the Multus networking component on each node.
      release.openshift.io/version: 4.10.53
    creationTimestamp: "2023-05-04T21:39:32Z"
    labels:
      app: multus
      component: network
      controller-revision-hash: 67f7897b5b
      openshift.io/component: network
      type: infra
    name: multus-67f7897b5b
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus
      uid: 1db1ca47-2263-493e-b58f-0bb7a8c673e2
    resourceVersion: "2990"
    uid: 6372b38a-7142-49f4-9cf3-90d2e4ab4d0f
  revision: 1
- apiVersion: apps/v1
  data:
    spec:
      template:
        $patch: replace
        metadata:
          annotations:
            target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
          creationTimestamp: null
          labels:
            app: multus-additional-cni-plugins
            component: network
            openshift.io/component: network
            type: infra
        spec:
          containers:
          - args:
            - |
              trap : TERM INT; sleep infinity & wait
            command:
            - /bin/bash
            - -ec
            - --
            image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:686319d43039666afd0558e8c67b7a7602ed39702ad87bd73f08da583b811752
            imagePullPolicy: IfNotPresent
            name: kube-multus-additional-cni-plugins
            resources:
              requests:
                cpu: 10m
                memory: 10Mi
            securityContext:
              privileged: true
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          hostNetwork: true
          initContainers:
          - command:
            - /entrypoint/cnibincopy.sh
            env:
            - name: RHEL7_SOURCE_DIRECTORY
              value: /usr/src/egress-router-cni/rhel7/bin/
            - name: RHEL8_SOURCE_DIRECTORY
              value: /usr/src/egress-router-cni/rhel8/bin/
            - name: DEFAULT_SOURCE_DIRECTORY
              value: /usr/src/egress-router-cni/bin/
            image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:974d6f1a4f0131d695aeb7b3c46ea4f9ce3ecae8da7b02a7045675171ef1d3ff
            imagePullPolicy: IfNotPresent
            name: egress-router-binary-copy
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /entrypoint
              name: cni-binary-copy
            - mountPath: /host/opt/cni/bin
              name: cnibin
            - mountPath: /host/etc/os-release
              name: os-release
              readOnly: true
          - command:
            - /entrypoint/cnibincopy.sh
            env:
            - name: RHEL7_SOURCE_DIRECTORY
              value: /usr/src/plugins/rhel7/bin/
            - name: RHEL8_SOURCE_DIRECTORY
              value: /usr/src/plugins/rhel8/bin/
            - name: DEFAULT_SOURCE_DIRECTORY
              value: /usr/src/plugins/bin/
            image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b34d78f3cf80208541c4ac9cc84d8393fef336537ab9258726a81a684b3a578d
            imagePullPolicy: IfNotPresent
            name: cni-plugins
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /entrypoint
              name: cni-binary-copy
            - mountPath: /host/opt/cni/bin
              name: cnibin
            - mountPath: /host/etc/os-release
              name: os-release
              readOnly: true
          - command:
            - /entrypoint/cnibincopy.sh
            env:
            - name: RHEL7_SOURCE_DIRECTORY
              value: /bondcni/rhel7/
            - name: RHEL8_SOURCE_DIRECTORY
              value: /bondcni/rhel8/
            - name: DEFAULT_SOURCE_DIRECTORY
              value: /bondcni/
            image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:afecfa73c9f829c5fccaca3b2f36c0fe381bbe02f9eef32bc4388be7bb3d7db6
            imagePullPolicy: IfNotPresent
            name: bond-cni-plugin
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /entrypoint
              name: cni-binary-copy
            - mountPath: /host/opt/cni/bin
              name: cnibin
            - mountPath: /host/etc/os-release
              name: os-release
              readOnly: true
          - command:
            - /entrypoint/cnibincopy.sh
            env:
            - name: RHEL7_SOURCE_DIRECTORY
              value: /usr/src/route-override/rhel7/bin/
            - name: RHEL8_SOURCE_DIRECTORY
              value: /usr/src/whereabouts/rhel8/bin/
            - name: DEFAULT_SOURCE_DIRECTORY
              value: /usr/src/route-override/bin/
            image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:16e6426a05c744b04ffc20e810a1c48465037f84b7412c27ccb1e5b7b922fa42
            imagePullPolicy: IfNotPresent
            name: routeoverride-cni
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /entrypoint
              name: cni-binary-copy
            - mountPath: /host/opt/cni/bin
              name: cnibin
            - mountPath: /host/etc/os-release
              name: os-release
              readOnly: true
          - command:
            - /entrypoint/cnibincopy.sh
            env:
            - name: RHEL7_SOURCE_DIRECTORY
              value: /usr/src/whereabouts/rhel7/bin/
            - name: RHEL8_SOURCE_DIRECTORY
              value: /usr/src/whereabouts/rhel8/bin/
            - name: DEFAULT_SOURCE_DIRECTORY
              value: /usr/src/whereabouts/bin/
            image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:c073ed0650bc211b6c1c5c0a77d38a95a822fd877bc671ab505a47999c6c6297
            imagePullPolicy: IfNotPresent
            name: whereabouts-cni-bincopy
            resources:
              requests:
                cpu: 10m
                memory: 10Mi
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /entrypoint
              name: cni-binary-copy
            - mountPath: /host/opt/cni/bin
              name: cnibin
            - mountPath: /host/etc/os-release
              name: os-release
              readOnly: true
          - command:
            - /bin/sh
            - -c
            - |
              #!/bin/sh

              set -u -e

              CNI_BIN_DIR=${CNI_BIN_DIR:-"/host/opt/cni/bin/"}
              WHEREABOUTS_KUBECONFIG_FILE_HOST=${WHEREABOUTS_KUBECONFIG_FILE_HOST:-"/etc/cni/net.d/whereabouts.d/whereabouts.kubeconfig"}
              CNI_CONF_DIR=${CNI_CONF_DIR:-"/host/etc/cni/net.d"}

              # Make a whereabouts.d directory (for our kubeconfig)

              mkdir -p $CNI_CONF_DIR/whereabouts.d
              WHEREABOUTS_KUBECONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.kubeconfig
              WHEREABOUTS_GLOBALCONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.conf

              # ------------------------------- Generate a "kube-config"
              SERVICE_ACCOUNT_PATH=/var/run/secrets/kubernetes.io/serviceaccount
              KUBE_CA_FILE=${KUBE_CA_FILE:-$SERVICE_ACCOUNT_PATH/ca.crt}
              SERVICEACCOUNT_TOKEN=$(cat $SERVICE_ACCOUNT_PATH/token)
              SKIP_TLS_VERIFY=${SKIP_TLS_VERIFY:-false}


              # Check if we're running as a k8s pod.
              if [ -f "$SERVICE_ACCOUNT_PATH/token" ]; then
                # We're running as a k8d pod - expect some variables.
                if [ -z ${KUBERNETES_SERVICE_HOST} ]; then
                  error "KUBERNETES_SERVICE_HOST not set"; exit 1;
                fi
                if [ -z ${KUBERNETES_SERVICE_PORT} ]; then
                  error "KUBERNETES_SERVICE_PORT not set"; exit 1;
                fi

                if [ "$SKIP_TLS_VERIFY" == "true" ]; then
                  TLS_CFG="insecure-skip-tls-verify: true"
                elif [ -f "$KUBE_CA_FILE" ]; then
                  TLS_CFG="certificate-authority-data: $(cat $KUBE_CA_FILE | base64 | tr -d '\n')"
                fi

                # Write a kubeconfig file for the CNI plugin.  Do this
                # to skip TLS verification for now.  We should eventually support
                # writing more complete kubeconfig files. This is only used
                # if the provided CNI network config references it.
                touch $WHEREABOUTS_KUBECONFIG
                chmod ${KUBECONFIG_MODE:-600} $WHEREABOUTS_KUBECONFIG
                cat > $WHEREABOUTS_KUBECONFIG <<EOF
              # Kubeconfig file for Multus CNI plugin.
              apiVersion: v1
              kind: Config
              clusters:
              - name: local
                cluster:
                  server: ${KUBERNETES_SERVICE_PROTOCOL:-https}://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}
                  $TLS_CFG
              users:
              - name: whereabouts
                user:
                  token: "${SERVICEACCOUNT_TOKEN}"
              contexts:
              - name: whereabouts-context
                context:
                  cluster: local
                  user: whereabouts
                  namespace: ${WHEREABOUTS_NAMESPACE}
              current-context: whereabouts-context
              EOF

              # Kubeconfig file for Multus CNI plugin.
              cat > $WHEREABOUTS_GLOBALCONFIG <<EOF
              {
                "datastore": "kubernetes",
                "kubernetes": {
                  "kubeconfig": "/etc/kubernetes/cni/net.d/whereabouts.d/whereabouts.kubeconfig"
                },
                "log_level": "debug"
              }
              EOF

              else
                warn "Doesn't look like we're running in a kubernetes environment (no serviceaccount token)"
              fi

              # copy whereabouts to the cni bin dir
              # SKIPPED DUE TO FIPS COPY.
              # cp -f /whereabouts $CNI_BIN_DIR

              # ---------------------- end Generate a "kube-config".

              # Unless told otherwise, sleep forever.
              # This prevents Kubernetes from restarting the pod repeatedly.
              should_sleep=${SLEEP:-"true"}
              echo "Done configuring CNI.  Sleep=$should_sleep"
              while [ "$should_sleep" == "true"  ]; do
                  sleep 1000000000000
              done
            env:
            - name: KUBERNETES_SERVICE_PORT
              value: "6443"
            - name: KUBERNETES_SERVICE_HOST
              value: api-int.ocp4azu.dirtrab.cl
            - name: CNI_BIN_DIR
              value: /host/opt/cni/bin/
            - name: CNI_CONF_DIR
              value: /host/etc/cni/net.d
            - name: SLEEP
              value: "false"
            - name: WHEREABOUTS_NAMESPACE
              value: openshift-multus
            image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:c073ed0650bc211b6c1c5c0a77d38a95a822fd877bc671ab505a47999c6c6297
            imagePullPolicy: IfNotPresent
            name: whereabouts-cni
            resources:
              requests:
                cpu: 10m
                memory: 10Mi
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /host/opt/cni/bin
              name: cnibin
            - mountPath: /host/etc/cni/net.d
              name: system-cni-dir
          nodeSelector:
            kubernetes.io/os: linux
          priorityClassName: system-node-critical
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: multus
          serviceAccountName: multus
          terminationGracePeriodSeconds: 30
          tolerations:
          - operator: Exists
          volumes:
          - hostPath:
              path: /etc/kubernetes/cni/net.d
              type: ""
            name: system-cni-dir
          - hostPath:
              path: /var/run/multus/cni/net.d
              type: ""
            name: multus-cni-dir
          - hostPath:
              path: /var/lib/cni/bin
              type: ""
            name: cnibin
          - hostPath:
              path: /etc/os-release
              type: File
            name: os-release
          - configMap:
              defaultMode: 484
              name: cni-binary-copy-script
            name: cni-binary-copy
  kind: ControllerRevision
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      kubernetes.io/description: |
        This daemon installs and configures auxiliary CNI plugins on each node.
      release.openshift.io/version: 4.10.53
    creationTimestamp: "2023-05-04T21:39:32Z"
    labels:
      app: multus-additional-cni-plugins
      component: network
      controller-revision-hash: 8467c8cc8c
      openshift.io/component: network
      type: infra
    name: multus-additional-cni-plugins-8467c8cc8c
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus-additional-cni-plugins
      uid: f9bd62f4-5859-408d-85e4-b7b93664b4be
    resourceVersion: "2991"
    uid: a3f0ad53-c3c4-463e-a06d-8cfc0636daaa
  revision: 1
- apiVersion: apps/v1
  data:
    spec:
      template:
        $patch: replace
        metadata:
          annotations:
            target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
          creationTimestamp: null
          labels:
            app: multus-admission-controller
            component: network
            namespace: openshift-multus
            openshift.io/component: network
            type: infra
        spec:
          containers:
          - args:
            - -bind-address=0.0.0.0
            - -port=6443
            - -tls-private-key-file=/etc/webhook/tls.key
            - -tls-cert-file=/etc/webhook/tls.crt
            - -alsologtostderr=true
            - -metrics-listen-address=127.0.0.1:9091
            command:
            - /usr/bin/webhook
            image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:8bb2bc47d82b3b0da459400df8f606ad07ac01941bbd5ffb08119896fd9f5821
            imagePullPolicy: IfNotPresent
            name: multus-admission-controller
            ports:
            - containerPort: 9091
              name: metrics-port
              protocol: TCP
            resources:
              requests:
                cpu: 10m
                memory: 50Mi
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /etc/webhook
              name: webhook-certs
              readOnly: true
          - args:
            - --logtostderr
            - --secure-listen-address=:8443
            - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256
            - --upstream=http://127.0.0.1:9091/
            - --tls-private-key-file=/etc/webhook/tls.key
            - --tls-cert-file=/etc/webhook/tls.crt
            image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d253bc69fdc967c1fc1543b01deddacd4eefe816cc9ed4541ea3673e35321753
            imagePullPolicy: IfNotPresent
            name: kube-rbac-proxy
            ports:
            - containerPort: 8443
              name: https
              protocol: TCP
            resources:
              requests:
                cpu: 10m
                memory: 20Mi
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: FallbackToLogsOnError
            volumeMounts:
            - mountPath: /etc/webhook
              name: webhook-certs
              readOnly: true
          dnsPolicy: ClusterFirst
          nodeSelector:
            node-role.kubernetes.io/master: ""
          priorityClassName: system-cluster-critical
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext:
            runAsNonRoot: true
            runAsUser: 65534
          serviceAccount: multus
          serviceAccountName: multus
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoSchedule
            key: node-role.kubernetes.io/master
            operator: Exists
          volumes:
          - name: webhook-certs
            secret:
              defaultMode: 420
              secretName: multus-admission-controller-secret
  kind: ControllerRevision
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      kubernetes.io/description: |
        This daemon set launches the Multus admisson controller component on each node.
      networkoperator.openshift.io/non-critical: ""
      release.openshift.io/version: 4.10.53
    creationTimestamp: "2023-05-04T21:39:32Z"
    labels:
      app: multus-admission-controller
      component: network
      controller-revision-hash: 744d9d89d
      namespace: openshift-multus
      openshift.io/component: network
      type: infra
    name: multus-admission-controller-744d9d89d
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus-admission-controller
      uid: b7b7493b-40a5-4d18-adcb-26d3aae1ae02
    resourceVersion: "3058"
    uid: 841e7f06-2c5d-45e6-897c-37dc61336aea
  revision: 1
- apiVersion: apps/v1
  data:
    spec:
      template:
        $patch: replace
        metadata:
          annotations:
            target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
          creationTimestamp: null
          labels:
            app: network-metrics-daemon
            component: network
            openshift.io/component: network
            type: infra
        spec:
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: network.operator.openshift.io/dpu-host
                    operator: DoesNotExist
                  - key: network.operator.openshift.io/dpu
                    operator: DoesNotExist
          containers:
          - args:
            - --node-name
            - $(NODE_NAME)
            command:
            - /usr/bin/network-metrics
            env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b70654bb15424f347a985f8e973171e9ff3667d069eaa1535ba02233682c7cc8
            imagePullPolicy: IfNotPresent
            name: network-metrics-daemon
            resources:
              requests:
                cpu: 10m
                memory: 100Mi
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
          - args:
            - --logtostderr
            - --secure-listen-address=:8443
            - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256
            - --upstream=http://127.0.0.1:9091/
            - --tls-private-key-file=/etc/metrics/tls.key
            - --tls-cert-file=/etc/metrics/tls.crt
            image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:d253bc69fdc967c1fc1543b01deddacd4eefe816cc9ed4541ea3673e35321753
            imagePullPolicy: IfNotPresent
            name: kube-rbac-proxy
            ports:
            - containerPort: 8443
              name: https
              protocol: TCP
            resources:
              requests:
                cpu: 10m
                memory: 20Mi
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: FallbackToLogsOnError
            volumeMounts:
            - mountPath: /etc/metrics
              name: metrics-certs
              readOnly: true
          dnsPolicy: ClusterFirst
          nodeSelector:
            kubernetes.io/os: linux
          priorityClassName: system-node-critical
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext:
            runAsNonRoot: true
            runAsUser: 65534
          serviceAccount: metrics-daemon-sa
          serviceAccountName: metrics-daemon-sa
          terminationGracePeriodSeconds: 30
          tolerations:
          - operator: Exists
          volumes:
          - name: metrics-certs
            secret:
              defaultMode: 420
              secretName: metrics-daemon-secret
  kind: ControllerRevision
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      kubernetes.io/description: |
        This daemonset launches the network metrics daemon on each node
      networkoperator.openshift.io/non-critical: ""
      release.openshift.io/version: 4.10.53
    creationTimestamp: "2023-05-04T21:39:32Z"
    labels:
      app: network-metrics-daemon
      component: network
      controller-revision-hash: 64b68bdfd6
      openshift.io/component: network
      type: infra
    name: network-metrics-daemon-64b68bdfd6
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: network-metrics-daemon
      uid: 105f47a0-8fc5-4a76-b14b-f0b91560a5dd
    resourceVersion: "3020"
    uid: 1b5ac0ad-e8a3-4757-81f1-ba79f6499acf
  revision: 1
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
