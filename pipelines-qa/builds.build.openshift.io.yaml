apiVersion: v1
items:
- apiVersion: build.openshift.io/v1
  kind: Build
  metadata:
    annotations:
      openshift.io/jenkins-blueocean-log-url: /http://jenkins-cicd.api-cloud.dirtrab.cl/blue/organizations/jenkins/pipelines-qa%2Fpipelines-qa-csr0001-validacionesfondoextra/detail/pipelines-qa-csr0001-validacionesfondoextra/4/
      openshift.io/jenkins-build-uri: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0001-validacionesfondoextra/4/
      openshift.io/jenkins-console-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0001-validacionesfondoextra/4/console
      openshift.io/jenkins-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0001-validacionesfondoextra/4/consoleText
      openshift.io/jenkins-status-json: '{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0001-validacionesfondoextra/4/wfapi/describe"}},"id":"4","name":"#4","status":"SUCCESS","startTimeMillis":1697486212346,"endTimeMillis":1697486566469,"durationMillis":354123,"queueDurationMillis":5,"pauseDurationMillis":0,"stages":[{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0001-validacionesfondoextra/4/execution/node/6/wfapi/describe"}},"id":"6","name":"Clonando
        repo y Compilando","execNode":"","status":"SUCCESS","startTimeMillis":1697486222651,"durationMillis":234981,"pauseDurationMillis":0},{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0001-validacionesfondoextra/4/execution/node/28/wfapi/describe"}},"id":"28","name":"Construyendo
        imagen","execNode":"","status":"SUCCESS","startTimeMillis":1697486460296,"durationMillis":57403,"pauseDurationMillis":0},{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0001-validacionesfondoextra/4/execution/node/51/wfapi/describe"}},"id":"51","name":"Desplegando
        en QA","execNode":"","status":"SUCCESS","startTimeMillis":1697486518116,"durationMillis":48289,"pauseDurationMillis":0}]}'
    creationTimestamp: "2023-10-16T19:56:51Z"
    generation: 1
    labels:
      app: cicd-pipeline
      buildconfig: csr0001-validacionesfondoextra
      group: cicd
      migration.openshift.io/migrated-by-migmigration: 83812283-da61-428b-8d35-e15d91aa764d
      migration.openshift.io/migrated-by-migplan: 6b6402c2-9258-443b-83f4-8bb51f1d90f8
      name: cicd-pipeline
      openshift.io/build-config.name: csr0001-validacionesfondoextra
      openshift.io/build.start-policy: Serial
      template: cicd
      velero.io/backup-name: migration-8d005-initial-6s92c
      velero.io/restore-name: migration-8d005-final-jj2bc
    name: csr0001-validacionesfondoextra-1
    namespace: pipelines-qa
    ownerReferences:
    - apiVersion: build.openshift.io/v1
      controller: true
      kind: BuildConfig
      name: csr0001-validacionesfondoextra
      uid: 7759b306-fe8a-4eb4-8ad0-7f210a1183be
    resourceVersion: "136550997"
    uid: 8312c141-c63a-4674-919d-bd50e1daa4e8
  spec:
    nodeSelector: {}
    output: {}
    postCommit: {}
    resources: {}
    serviceAccount: builder
    source:
      type: None
    strategy:
      jenkinsPipelineStrategy:
        env:
        - name: DEV_PROJECT
          value: api-fiscalizacion-dev
        - name: QA_PROJECT
          value: api-fiscalizacion-qa
        - name: ENABLE_QUAY
          value: "false"
        jenkinsfile: |
          pipeline {
            agent {
              label 'maven'
            }
            stages {
              stage('Clonando repo y Compilando') {
                  steps {
                      git([url: 'https://dirtrab.visualstudio.com/Libro%20Remuneraciones%20Electronico/_git/CSR0001-ValidacionesFondo-v2',
                      branch: 'develop',
                      credentialsId: 'azure_credenciales_id'])
                  script {
                      def pom = readMavenPom file: 'pom.xml'
                      version = pom.version
                  }
                  sh "mvn -s configuration/settings.xml install -DskipTests=true"
                }
              }
              stage('Creando Image Builder') {
                when {
                  expression {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        return !openshift.selector("bc", "csr0001-validacionesfondoextra").exists();
                      }
                    }
                  }
                }
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.newBuild("--name=csr0001-validacionesfondoextra", "--image-stream=redhat-openjdk18-openshift:1.4", "--binary=true")
                      }
                    }
                  }
                }
              }
              stage('Construyendo imagen') {
                steps {
                  sh "rm -rf oc-build && mkdir -p oc-build/deployments"
                  sh "cp target/CSR0001-ValidacionesFondo-v2-1.0.0.jar oc-build/deployments/CSR0001-ValidacionesFondo-v2.jar"

                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.selector("bc", "csr0001-validacionesfondoextra").startBuild("--from-dir=oc-build", "--wait=true")
                      }
                    }
                  }
                  sh "sleep 10"
                }
              }
              stage('Creando en QA') {
                when {
                  expression {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        return !openshift.selector('dc', 'csr0001-validacionesfondoextra').exists()
                      }
                    }
                  }
                }
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        def app = openshift.newApp("csr0001-validacionesfondoextra:latest")
                        app.narrow("svc").expose();
                        def dc = openshift.selector("dc", "csr0001-validacionesfondoextra")
                        while (dc.object().spec.replicas != dc.object().status.availableReplicas) {
                            sleep 10
                        }
                        openshift.set("triggers", "dc/csr0001-validacionesfondoextra", "--manual")
                      }
                      sh "sleep 40"
                    }
                  }
                }
              }
              stage('Desplegando en QA') {
                steps {
                sh "sleep 30"
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.selector("dc", "csr0001-validacionesfondoextra").rollout().latest();
                      }
                      sh "sleep 15"
                    }
                  }
                }
              }
            }
          }
      type: JenkinsPipeline
    triggeredBy:
    - message: Triggered by Jenkins job at http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0001-validacionesfondoextra/
  status:
    completionTimestamp: "2023-10-16T20:02:46Z"
    conditions:
    - lastTransitionTime: "2023-10-16T19:56:52Z"
      lastUpdateTime: "2023-10-16T19:56:52Z"
      status: "False"
      type: New
    - lastTransitionTime: "2023-10-16T19:56:54Z"
      lastUpdateTime: "2023-10-16T19:56:54Z"
      status: "False"
      type: Pending
    - lastTransitionTime: "2023-10-16T20:02:46Z"
      lastUpdateTime: "2023-10-16T20:02:46Z"
      status: "False"
      type: Running
    - lastTransitionTime: "2023-10-16T20:02:46Z"
      lastUpdateTime: "2023-10-16T20:02:46Z"
      status: "True"
      type: Complete
    config:
      kind: BuildConfig
      name: csr0001-validacionesfondoextra
      namespace: pipelines-qa
    output: {}
    phase: Complete
    startTimestamp: "2023-10-16T19:56:52Z"
- apiVersion: build.openshift.io/v1
  kind: Build
  metadata:
    annotations:
      openshift.io/jenkins-blueocean-log-url: /http://jenkins-cicd.api-cloud.dirtrab.cl/blue/organizations/jenkins/pipelines-qa%2Fpipelines-qa-csr0001-validacionesfondolarge/detail/pipelines-qa-csr0001-validacionesfondolarge/6/
      openshift.io/jenkins-build-uri: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0001-validacionesfondolarge/6/
      openshift.io/jenkins-console-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0001-validacionesfondolarge/6/console
      openshift.io/jenkins-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0001-validacionesfondolarge/6/consoleText
      openshift.io/jenkins-status-json: '{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0001-validacionesfondolarge/6/wfapi/describe"}},"id":"6","name":"#6","status":"SUCCESS","startTimeMillis":1697485729123,"endTimeMillis":1697486089224,"durationMillis":360101,"queueDurationMillis":4,"pauseDurationMillis":0,"stages":[{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0001-validacionesfondolarge/6/execution/node/6/wfapi/describe"}},"id":"6","name":"Clonando
        repo y Compilando","execNode":"","status":"SUCCESS","startTimeMillis":1697485742102,"durationMillis":239214,"pauseDurationMillis":0},{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0001-validacionesfondolarge/6/execution/node/28/wfapi/describe"}},"id":"28","name":"Construyendo
        imagen","execNode":"","status":"SUCCESS","startTimeMillis":1697485983672,"durationMillis":56927,"pauseDurationMillis":0},{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0001-validacionesfondolarge/6/execution/node/51/wfapi/describe"}},"id":"51","name":"Desplegando
        en QA","execNode":"","status":"SUCCESS","startTimeMillis":1697486040949,"durationMillis":48211,"pauseDurationMillis":0}]}'
    creationTimestamp: "2023-10-16T19:48:49Z"
    generation: 1
    labels:
      app: cicd-pipeline
      buildconfig: csr0001-validacionesfondolarge
      group: cicd
      migration.openshift.io/migrated-by-migmigration: 83812283-da61-428b-8d35-e15d91aa764d
      migration.openshift.io/migrated-by-migplan: 6b6402c2-9258-443b-83f4-8bb51f1d90f8
      name: cicd-pipeline
      openshift.io/build-config.name: csr0001-validacionesfondolarge
      openshift.io/build.start-policy: Serial
      template: cicd
      velero.io/backup-name: migration-8d005-initial-6s92c
      velero.io/restore-name: migration-8d005-final-jj2bc
    name: csr0001-validacionesfondolarge-1
    namespace: pipelines-qa
    ownerReferences:
    - apiVersion: build.openshift.io/v1
      controller: true
      kind: BuildConfig
      name: csr0001-validacionesfondolarge
      uid: 68e10271-316b-4f3a-96bc-147401672a6a
    resourceVersion: "136546304"
    uid: 9a565aff-a4a5-4a94-9f37-ad6cd94d2c7e
  spec:
    nodeSelector: {}
    output: {}
    postCommit: {}
    resources: {}
    serviceAccount: builder
    source:
      type: None
    strategy:
      jenkinsPipelineStrategy:
        env:
        - name: DEV_PROJECT
          value: api-fiscalizacion-dev
        - name: QA_PROJECT
          value: api-fiscalizacion-qa
        - name: ENABLE_QUAY
          value: "false"
        jenkinsfile: |
          pipeline {
            agent {
              label 'maven'
            }
            stages {
              stage('Clonando repo y Compilando') {
                  steps {
                      git([url: 'https://dirtrab.visualstudio.com/Libro%20Remuneraciones%20Electronico/_git/CSR0001-ValidacionesFondo-v2',
                      branch: 'develop',
                      credentialsId: 'azure_credenciales_id'])
                  script {
                      def pom = readMavenPom file: 'pom.xml'
                      version = pom.version
                  }
                  sh "mvn -s configuration/settings.xml install -DskipTests=true"
                }
              }
              stage('Creando Image Builder') {
                when {
                  expression {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        return !openshift.selector("bc", "csr0001-validacionesfondolarge").exists();
                      }
                    }
                  }
                }
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.newBuild("--name=csr0001-validacionesfondolarge", "--image-stream=redhat-openjdk18-openshift:1.4", "--binary=true")
                      }
                    }
                  }
                }
              }
              stage('Construyendo imagen') {
                steps {
                  sh "rm -rf oc-build && mkdir -p oc-build/deployments"
                  sh "cp target/CSR0001-ValidacionesFondo-v2-1.0.0.jar oc-build/deployments/CSR0001-ValidacionesFondo-v2.jar"

                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.selector("bc", "csr0001-validacionesfondolarge").startBuild("--from-dir=oc-build", "--wait=true")
                      }
                    }
                  }
                  sh "sleep 10"
                }
              }
              stage('Creando en QA') {
                when {
                  expression {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        return !openshift.selector('dc', 'csr0001-validacionesfondolarge').exists()
                      }
                    }
                  }
                }
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        def app = openshift.newApp("csr0001-validacionesfondolarge:latest")
                        app.narrow("svc").expose();
                        def dc = openshift.selector("dc", "csr0001-validacionesfondolarge")
                        while (dc.object().spec.replicas != dc.object().status.availableReplicas) {
                            sleep 10
                        }
                        openshift.set("triggers", "dc/csr0001-validacionesfondolarge", "--manual")
                      }
                      sh "sleep 40"
                    }
                  }
                }
              }
              stage('Desplegando en QA') {
                steps {
                sh "sleep 30"
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.selector("dc", "csr0001-validacionesfondolarge").rollout().latest();
                      }
                      sh "sleep 15"
                    }
                  }
                }
              }
            }
          }
      type: JenkinsPipeline
    triggeredBy:
    - message: Triggered by Jenkins job at http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0001-validacionesfondolarge/
  status:
    completionTimestamp: "2023-10-16T19:54:49Z"
    conditions:
    - lastTransitionTime: "2023-10-16T19:48:49Z"
      lastUpdateTime: "2023-10-16T19:48:49Z"
      status: "False"
      type: New
    - lastTransitionTime: "2023-10-16T19:49:04Z"
      lastUpdateTime: "2023-10-16T19:49:04Z"
      status: "False"
      type: Pending
    - lastTransitionTime: "2023-10-16T19:54:49Z"
      lastUpdateTime: "2023-10-16T19:54:49Z"
      status: "False"
      type: Running
    - lastTransitionTime: "2023-10-16T19:54:49Z"
      lastUpdateTime: "2023-10-16T19:54:49Z"
      status: "True"
      type: Complete
    config:
      kind: BuildConfig
      name: csr0001-validacionesfondolarge
      namespace: pipelines-qa
    output: {}
    phase: Complete
    startTimestamp: "2023-10-16T19:48:49Z"
- apiVersion: build.openshift.io/v1
  kind: Build
  metadata:
    annotations:
      openshift.io/jenkins-blueocean-log-url: /http://jenkins-cicd.api-cloud.dirtrab.cl/blue/organizations/jenkins/pipelines-qa%2Fpipelines-qa-csr0001-validacionesfondomedium/detail/pipelines-qa-csr0001-validacionesfondomedium/7/
      openshift.io/jenkins-build-uri: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0001-validacionesfondomedium/7/
      openshift.io/jenkins-console-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0001-validacionesfondomedium/7/console
      openshift.io/jenkins-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0001-validacionesfondomedium/7/consoleText
      openshift.io/jenkins-status-json: '{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0001-validacionesfondomedium/7/wfapi/describe"}},"id":"7","name":"#7","status":"SUCCESS","startTimeMillis":1697485330193,"endTimeMillis":1697485683098,"durationMillis":352905,"queueDurationMillis":6,"pauseDurationMillis":0,"stages":[{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0001-validacionesfondomedium/7/execution/node/6/wfapi/describe"}},"id":"6","name":"Clonando
        repo y Compilando","execNode":"","status":"SUCCESS","startTimeMillis":1697485342411,"durationMillis":231460,"pauseDurationMillis":0},{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0001-validacionesfondomedium/7/execution/node/28/wfapi/describe"}},"id":"28","name":"Construyendo
        imagen","execNode":"","status":"SUCCESS","startTimeMillis":1697485576316,"durationMillis":58071,"pauseDurationMillis":0},{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0001-validacionesfondomedium/7/execution/node/51/wfapi/describe"}},"id":"51","name":"Desplegando
        en QA","execNode":"","status":"SUCCESS","startTimeMillis":1697485634773,"durationMillis":48255,"pauseDurationMillis":0}]}'
    creationTimestamp: "2023-10-16T19:42:10Z"
    generation: 1
    labels:
      app: cicd-pipeline
      buildconfig: csr0001-validacionesfondomedium
      group: cicd
      migration.openshift.io/migrated-by-migmigration: 83812283-da61-428b-8d35-e15d91aa764d
      migration.openshift.io/migrated-by-migplan: 6b6402c2-9258-443b-83f4-8bb51f1d90f8
      name: cicd-pipeline
      openshift.io/build-config.name: csr0001-validacionesfondomedium
      openshift.io/build.start-policy: Serial
      template: cicd
      velero.io/backup-name: migration-8d005-initial-6s92c
      velero.io/restore-name: migration-8d005-final-jj2bc
    name: csr0001-validacionesfondomedium-1
    namespace: pipelines-qa
    ownerReferences:
    - apiVersion: build.openshift.io/v1
      controller: true
      kind: BuildConfig
      name: csr0001-validacionesfondomedium
      uid: dce887ee-9511-4a3a-bbdf-1493f647f563
    resourceVersion: "136542352"
    uid: 9236960c-e129-4db3-b857-c36efd228d50
  spec:
    nodeSelector: {}
    output: {}
    postCommit: {}
    resources: {}
    serviceAccount: builder
    source:
      type: None
    strategy:
      jenkinsPipelineStrategy:
        env:
        - name: DEV_PROJECT
          value: api-fiscalizacion-dev
        - name: QA_PROJECT
          value: api-fiscalizacion-qa
        - name: ENABLE_QUAY
          value: "false"
        jenkinsfile: |
          pipeline {
            agent {
              label 'maven'
            }
            stages {
              stage('Clonando repo y Compilando') {
                  steps {
                      git([url: 'https://dirtrab.visualstudio.com/Libro%20Remuneraciones%20Electronico/_git/CSR0001-ValidacionesFondo-v2',
                      branch: 'develop',
                      credentialsId: 'azure_credenciales_id'])
                  script {
                      def pom = readMavenPom file: 'pom.xml'
                      version = pom.version
                  }
                  sh "mvn -s configuration/settings.xml install -DskipTests=true"
                }
              }
              stage('Creando Image Builder') {
                when {
                  expression {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        return !openshift.selector("bc", "csr0001-validacionesfondomedium").exists();
                      }
                    }
                  }
                }
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.newBuild("--name=csr0001-validacionesfondomedium", "--image-stream=redhat-openjdk18-openshift:1.4", "--binary=true")
                      }
                    }
                  }
                }
              }
              stage('Construyendo imagen') {
                steps {
                  sh "rm -rf oc-build && mkdir -p oc-build/deployments"
                  sh "cp target/CSR0001-ValidacionesFondo-v2-1.0.0.jar oc-build/deployments/CSR0001-ValidacionesFondo-v2.jar"

                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.selector("bc", "csr0001-validacionesfondomedium").startBuild("--from-dir=oc-build", "--wait=true")
                      }
                    }
                  }
                  sh "sleep 10"
                }
              }
              stage('Creando en QA') {
                when {
                  expression {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        return !openshift.selector('dc', 'csr0001-validacionesfondomedium').exists()
                      }
                    }
                  }
                }
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        def app = openshift.newApp("csr0001-validacionesfondomedium:latest")
                        app.narrow("svc").expose();
                        def dc = openshift.selector("dc", "csr0001-validacionesfondomedium")
                        while (dc.object().spec.replicas != dc.object().status.availableReplicas) {
                            sleep 10
                        }
                        openshift.set("triggers", "dc/csr0001-validacionesfondomedium", "--manual")
                      }
                      sh "sleep 40"
                    }
                  }
                }
              }
              stage('Desplegando en QA') {
                steps {
                sh "sleep 30"
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.selector("dc", "csr0001-validacionesfondomedium").rollout().latest();
                      }
                      sh "sleep 15"
                    }
                  }
                }
              }
            }
          }
      type: JenkinsPipeline
    triggeredBy:
    - message: Triggered by Jenkins job at http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0001-validacionesfondomedium/
  status:
    completionTimestamp: "2023-10-16T19:48:03Z"
    conditions:
    - lastTransitionTime: "2023-10-16T19:42:10Z"
      lastUpdateTime: "2023-10-16T19:42:10Z"
      status: "False"
      type: New
    - lastTransitionTime: "2023-10-16T19:42:14Z"
      lastUpdateTime: "2023-10-16T19:42:14Z"
      status: "False"
      type: Pending
    - lastTransitionTime: "2023-10-16T19:48:03Z"
      lastUpdateTime: "2023-10-16T19:48:03Z"
      status: "False"
      type: Running
    - lastTransitionTime: "2023-10-16T19:48:03Z"
      lastUpdateTime: "2023-10-16T19:48:03Z"
      status: "True"
      type: Complete
    config:
      kind: BuildConfig
      name: csr0001-validacionesfondomedium
      namespace: pipelines-qa
    output: {}
    phase: Complete
    startTimestamp: "2023-10-16T19:42:10Z"
- apiVersion: build.openshift.io/v1
  kind: Build
  metadata:
    annotations:
      openshift.io/jenkins-blueocean-log-url: /http://jenkins-cicd.api-cloud.dirtrab.cl/blue/organizations/jenkins/pipelines-qa%2Fpipelines-qa-csr0001-validacionesfondosmall/detail/pipelines-qa-csr0001-validacionesfondosmall/38/
      openshift.io/jenkins-build-uri: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0001-validacionesfondosmall/38/
      openshift.io/jenkins-console-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0001-validacionesfondosmall/38/console
      openshift.io/jenkins-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0001-validacionesfondosmall/38/consoleText
      openshift.io/jenkins-status-json: '{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0001-validacionesfondosmall/38/wfapi/describe"}},"id":"38","name":"#38","status":"SUCCESS","startTimeMillis":1697480895444,"endTimeMillis":1697481255343,"durationMillis":359899,"queueDurationMillis":4,"pauseDurationMillis":0,"stages":[{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0001-validacionesfondosmall/38/execution/node/6/wfapi/describe"}},"id":"6","name":"Clonando
        repo y Compilando","execNode":"","status":"SUCCESS","startTimeMillis":1697480911897,"durationMillis":234801,"pauseDurationMillis":0},{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0001-validacionesfondosmall/38/execution/node/28/wfapi/describe"}},"id":"28","name":"Construyendo
        imagen","execNode":"","status":"SUCCESS","startTimeMillis":1697481149258,"durationMillis":57346,"pauseDurationMillis":0},{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0001-validacionesfondosmall/38/execution/node/51/wfapi/describe"}},"id":"51","name":"Desplegando
        en QA","execNode":"","status":"SUCCESS","startTimeMillis":1697481207054,"durationMillis":48189,"pauseDurationMillis":0}]}'
    creationTimestamp: "2023-10-16T18:28:15Z"
    generation: 1
    labels:
      app: cicd-pipeline
      buildconfig: csr0001-validacionesfondosmall
      group: cicd
      migration.openshift.io/migrated-by-migmigration: 83812283-da61-428b-8d35-e15d91aa764d
      migration.openshift.io/migrated-by-migplan: 6b6402c2-9258-443b-83f4-8bb51f1d90f8
      name: cicd-pipeline
      openshift.io/build-config.name: csr0001-validacionesfondosmall
      openshift.io/build.start-policy: Serial
      template: cicd
      velero.io/backup-name: migration-8d005-initial-6s92c
      velero.io/restore-name: migration-8d005-final-jj2bc
    name: csr0001-validacionesfondosmall-1
    namespace: pipelines-qa
    ownerReferences:
    - apiVersion: build.openshift.io/v1
      controller: true
      kind: BuildConfig
      name: csr0001-validacionesfondosmall
      uid: 296b793a-646b-428e-ab9d-4e706c85b5f5
    resourceVersion: "136497353"
    uid: ad57bd80-4a1d-4f9b-9acd-0d27880b26c3
  spec:
    nodeSelector: {}
    output: {}
    postCommit: {}
    resources: {}
    serviceAccount: builder
    source:
      type: None
    strategy:
      jenkinsPipelineStrategy:
        env:
        - name: DEV_PROJECT
          value: api-fiscalizacion-dev
        - name: QA_PROJECT
          value: api-fiscalizacion-qa
        - name: ENABLE_QUAY
          value: "false"
        jenkinsfile: |
          pipeline {
            agent {
              label 'maven'
            }
            stages {
              stage('Clonando repo y Compilando') {
                  steps {
                      git([url: 'https://dirtrab.visualstudio.com/Libro%20Remuneraciones%20Electronico/_git/CSR0001-ValidacionesFondo-v2',
                      branch: 'feature/agrega_campo_observaciones_json',
                      credentialsId: 'vsts'])
                  script {
                      def pom = readMavenPom file: 'pom.xml'
                      version = pom.version
                  }
                  sh "mvn -s configuration/settings.xml install -DskipTests=true"
                }
              }
              stage('Creando Image Builder') {
                when {
                  expression {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        return !openshift.selector("bc", "csr0001-validacionesfondosmall").exists();
                      }
                    }
                  }
                }
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.newBuild("--name=csr0001-validacionesfondosmall", "--image-stream=redhat-openjdk18-openshift:1.4", "--binary=true")
                      }
                    }
                  }
                }
              }
              stage('Construyendo imagen') {
                steps {
                  sh "rm -rf oc-build && mkdir -p oc-build/deployments"
                  sh "cp target/CSR0001-ValidacionesFondo-v2-1.0.0.jar oc-build/deployments/CSR0001-ValidacionesFondo-v2.jar"

                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.selector("bc", "csr0001-validacionesfondosmall").startBuild("--from-dir=oc-build", "--wait=true")
                      }
                    }
                  }
                  sh "sleep 10"
                }
              }
              stage('Creando en QA') {
                when {
                  expression {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        return !openshift.selector('dc', 'csr0001-validacionesfondosmall').exists()
                      }
                    }
                  }
                }
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        def app = openshift.newApp("csr0001-validacionesfondosmall:latest")
                        app.narrow("svc").expose();
                        def dc = openshift.selector("dc", "csr0001-validacionesfondosmall")
                        while (dc.object().spec.replicas != dc.object().status.availableReplicas) {
                            sleep 10
                        }
                        openshift.set("triggers", "dc/csr0001-validacionesfondosmall", "--manual")
                      }
                      sh "sleep 40"
                    }
                  }
                }
              }
              stage('Desplegando en QA') {
                steps {
                sh "sleep 30"
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.selector("dc", "csr0001-validacionesfondosmall").rollout().latest();
                      }
                      sh "sleep 15"
                    }
                  }
                }
              }
            }
          }
      type: JenkinsPipeline
    triggeredBy:
    - message: Triggered by Jenkins job at http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0001-validacionesfondosmall/
  status:
    completionTimestamp: "2023-10-16T18:34:15Z"
    conditions:
    - lastTransitionTime: "2023-10-16T18:28:15Z"
      lastUpdateTime: "2023-10-16T18:28:15Z"
      status: "False"
      type: New
    - lastTransitionTime: "2023-10-16T18:28:19Z"
      lastUpdateTime: "2023-10-16T18:28:19Z"
      status: "False"
      type: Pending
    - lastTransitionTime: "2023-10-16T18:34:15Z"
      lastUpdateTime: "2023-10-16T18:34:15Z"
      status: "False"
      type: Running
    - lastTransitionTime: "2023-10-16T18:34:15Z"
      lastUpdateTime: "2023-10-16T18:34:15Z"
      status: "True"
      type: Complete
    config:
      kind: BuildConfig
      name: csr0001-validacionesfondosmall
      namespace: pipelines-qa
    output: {}
    phase: Complete
    startTimestamp: "2023-10-16T18:28:15Z"
- apiVersion: build.openshift.io/v1
  kind: Build
  metadata:
    annotations:
      openshift.io/jenkins-blueocean-log-url: /http://jenkins-cicd.api-cloud.dirtrab.cl/blue/organizations/jenkins/pipelines-qa%2Fpipelines-qa-csr0002-cargaarchivoextra/detail/pipelines-qa-csr0002-cargaarchivoextra/2/
      openshift.io/jenkins-build-uri: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0002-cargaarchivoextra/2/
      openshift.io/jenkins-console-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0002-cargaarchivoextra/2/console
      openshift.io/jenkins-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0002-cargaarchivoextra/2/consoleText
      openshift.io/jenkins-status-json: '{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0002-cargaarchivoextra/2/wfapi/describe"}},"id":"2","name":"#2","status":"SUCCESS","startTimeMillis":1697487837126,"endTimeMillis":1697488102753,"durationMillis":265627,"queueDurationMillis":5,"pauseDurationMillis":0,"stages":[{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0002-cargaarchivoextra/2/execution/node/6/wfapi/describe"}},"id":"6","name":"Clonando
        repo y Compilando","execNode":"","status":"SUCCESS","startTimeMillis":1697487852486,"durationMillis":158661,"pauseDurationMillis":0},{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0002-cargaarchivoextra/2/execution/node/28/wfapi/describe"}},"id":"28","name":"Construyendo
        imagen","execNode":"","status":"SUCCESS","startTimeMillis":1697488012743,"durationMillis":50996,"pauseDurationMillis":0},{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0002-cargaarchivoextra/2/execution/node/51/wfapi/describe"}},"id":"51","name":"Desplegando
        en QA","execNode":"","status":"SUCCESS","startTimeMillis":1697488064328,"durationMillis":38307,"pauseDurationMillis":0}]}'
    creationTimestamp: "2023-10-16T20:23:57Z"
    generation: 1
    labels:
      app: cicd-pipeline
      buildconfig: csr0002-cargaarchivoextra
      group: cicd
      migration.openshift.io/migrated-by-migmigration: 83812283-da61-428b-8d35-e15d91aa764d
      migration.openshift.io/migrated-by-migplan: 6b6402c2-9258-443b-83f4-8bb51f1d90f8
      name: cicd-pipeline
      openshift.io/build-config.name: csr0002-cargaarchivoextra
      openshift.io/build.start-policy: Serial
      template: cicd
      velero.io/backup-name: migration-8d005-initial-6s92c
      velero.io/restore-name: migration-8d005-final-jj2bc
    name: csr0002-cargaarchivoextra-1
    namespace: pipelines-qa
    ownerReferences:
    - apiVersion: build.openshift.io/v1
      controller: true
      kind: BuildConfig
      name: csr0002-cargaarchivoextra
      uid: 43a2bf69-efb9-471b-9e23-f8617538d550
    resourceVersion: "136566334"
    uid: 9dcc25cd-4631-4284-866e-0a2ee422204c
  spec:
    nodeSelector: {}
    output: {}
    postCommit: {}
    resources: {}
    serviceAccount: builder
    source:
      type: None
    strategy:
      jenkinsPipelineStrategy:
        env:
        - name: DEV_PROJECT
          value: api-fiscalizacion-dev
        - name: QA_PROJECT
          value: api-fiscalizacion-qa
        - name: ENABLE_QUAY
          value: "false"
        jenkinsfile: |
          pipeline {
            agent {
              label 'maven'
            }
            stages {
              stage('Clonando repo y Compilando') {
                  steps {
                      git([url: 'https://dirtrab.visualstudio.com/Libro%20Remuneraciones%20Electronico/_git/CSR0002-CargaArchivoDeclaracion',
                      branch: 'develop',
                      credentialsId: 'azure_credenciales_id'])
                  script {
                      def pom = readMavenPom file: 'pom.xml'
                      version = pom.version
                  }
                  sh "mvn -s configuration/settings.xml install -DskipTests=true"
                }
              }
              stage('Creando Image Builder') {
                when {
                  expression {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        return !openshift.selector("bc", "csr0002-cargaarchivoextra").exists();
                      }
                    }
                  }
                }
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.newBuild("--name=csr0002-cargaarchivoextra", "--image-stream=redhat-openjdk18-openshift:1.4", "--binary=true")
                      }
                    }
                  }
                }
              }
              stage('Construyendo imagen') {
                steps {
                  sh "rm -rf oc-build && mkdir -p oc-build/deployments"
                  sh "cp target/CSR0002-CargaArchivoDeclaracion-1.0.jar oc-build/deployments/CSR0002-CargaArchivoDeclaracion.jar"

                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.selector("bc", "csr0002-cargaarchivoextra").startBuild("--from-dir=oc-build", "--wait=true")
                      }
                    }
                  }
                  sh "sleep 10"
                }
              }
              stage('Creando en QA') {
                when {
                  expression {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        return !openshift.selector('dc', 'csr0002-cargaarchivoextra').exists()
                      }
                    }
                  }
                }
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        def app = openshift.newApp("csr0002-cargaarchivoextra:latest")
                        app.narrow("svc").expose();
                        def dc = openshift.selector("dc", "csr0002-cargaarchivoextra")
                        while (dc.object().spec.replicas != dc.object().status.availableReplicas) {
                            sleep 10
                        }
                        openshift.set("triggers", "dc/csr0002-cargaarchivolarge", "--manual")
                      }
                      sh "sleep 40"
                    }
                  }
                }
              }
              stage('Desplegando en QA') {
                steps {
                sh "sleep 20"
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.selector("dc", "csr0002-cargaarchivoextra").rollout().latest();
                      }
                      sh "sleep 15"
                    }
                  }
                }
              }
            }
          }
      type: JenkinsPipeline
    triggeredBy:
    - message: Triggered by Jenkins job at http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0002-cargaarchivoextra/
  status:
    completionTimestamp: "2023-10-16T20:28:22Z"
    conditions:
    - lastTransitionTime: "2023-10-16T20:23:57Z"
      lastUpdateTime: "2023-10-16T20:23:57Z"
      status: "False"
      type: New
    - lastTransitionTime: "2023-10-16T20:23:59Z"
      lastUpdateTime: "2023-10-16T20:23:59Z"
      status: "False"
      type: Pending
    - lastTransitionTime: "2023-10-16T20:28:22Z"
      lastUpdateTime: "2023-10-16T20:28:22Z"
      status: "False"
      type: Running
    - lastTransitionTime: "2023-10-16T20:28:22Z"
      lastUpdateTime: "2023-10-16T20:28:22Z"
      status: "True"
      type: Complete
    config:
      kind: BuildConfig
      name: csr0002-cargaarchivoextra
      namespace: pipelines-qa
    output: {}
    phase: Complete
    startTimestamp: "2023-10-16T20:23:57Z"
- apiVersion: build.openshift.io/v1
  kind: Build
  metadata:
    annotations:
      openshift.io/jenkins-blueocean-log-url: /http://jenkins-cicd.api-cloud.dirtrab.cl/blue/organizations/jenkins/pipelines-qa%2Fpipelines-qa-csr0002-cargaarchivolarge/detail/pipelines-qa-csr0002-cargaarchivolarge/8/
      openshift.io/jenkins-build-uri: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0002-cargaarchivolarge/8/
      openshift.io/jenkins-console-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0002-cargaarchivolarge/8/console
      openshift.io/jenkins-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0002-cargaarchivolarge/8/consoleText
      openshift.io/jenkins-status-json: '{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0002-cargaarchivolarge/8/wfapi/describe"}},"id":"8","name":"#8","status":"SUCCESS","startTimeMillis":1697487548292,"endTimeMillis":1697487816239,"durationMillis":267947,"queueDurationMillis":4,"pauseDurationMillis":0,"stages":[{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0002-cargaarchivolarge/8/execution/node/6/wfapi/describe"}},"id":"6","name":"Clonando
        repo y Compilando","execNode":"","status":"SUCCESS","startTimeMillis":1697487563107,"durationMillis":160611,"pauseDurationMillis":0},{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0002-cargaarchivolarge/8/execution/node/28/wfapi/describe"}},"id":"28","name":"Construyendo
        imagen","execNode":"","status":"SUCCESS","startTimeMillis":1697487725599,"durationMillis":52200,"pauseDurationMillis":0},{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0002-cargaarchivolarge/8/execution/node/51/wfapi/describe"}},"id":"51","name":"Desplegando
        en QA","execNode":"","status":"SUCCESS","startTimeMillis":1697487778157,"durationMillis":38010,"pauseDurationMillis":0}]}'
    creationTimestamp: "2023-10-16T20:19:08Z"
    generation: 1
    labels:
      app: cicd-pipeline
      buildconfig: csr0002-cargaarchivolarge
      group: cicd
      migration.openshift.io/migrated-by-migmigration: 83812283-da61-428b-8d35-e15d91aa764d
      migration.openshift.io/migrated-by-migplan: 6b6402c2-9258-443b-83f4-8bb51f1d90f8
      name: cicd-pipeline
      openshift.io/build-config.name: csr0002-cargaarchivolarge
      openshift.io/build.start-policy: Serial
      template: cicd
      velero.io/backup-name: migration-8d005-initial-6s92c
      velero.io/restore-name: migration-8d005-final-jj2bc
    name: csr0002-cargaarchivolarge-1
    namespace: pipelines-qa
    ownerReferences:
    - apiVersion: build.openshift.io/v1
      controller: true
      kind: BuildConfig
      name: csr0002-cargaarchivolarge
      uid: 8e9fa2cc-7b07-4ac8-a94d-c45588ee395d
    resourceVersion: "136563386"
    uid: ccd3fc34-fe69-4e2e-a2da-b56dc527449e
  spec:
    nodeSelector: {}
    output: {}
    postCommit: {}
    resources: {}
    serviceAccount: builder
    source:
      type: None
    strategy:
      jenkinsPipelineStrategy:
        env:
        - name: DEV_PROJECT
          value: api-fiscalizacion-dev
        - name: QA_PROJECT
          value: api-fiscalizacion-qa
        - name: ENABLE_QUAY
          value: "false"
        jenkinsfile: |
          pipeline {
            agent {
              label 'maven'
            }
            stages {
              stage('Clonando repo y Compilando') {
                  steps {
                      git([url: 'https://dirtrab.visualstudio.com/Libro%20Remuneraciones%20Electronico/_git/CSR0002-CargaArchivoDeclaracion',
                      branch: 'develop',
                      credentialsId: 'azure_credenciales_id'])
                  script {
                      def pom = readMavenPom file: 'pom.xml'
                      version = pom.version
                  }
                  sh "mvn -s configuration/settings.xml install -DskipTests=true"
                }
              }
              stage('Creando Image Builder') {
                when {
                  expression {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        return !openshift.selector("bc", "csr0002-cargaarchivolarge").exists();
                      }
                    }
                  }
                }
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.newBuild("--name=csr0002-cargaarchivolarge", "--image-stream=redhat-openjdk18-openshift:1.4", "--binary=true")
                      }
                    }
                  }
                }
              }
              stage('Construyendo imagen') {
                steps {
                  sh "rm -rf oc-build && mkdir -p oc-build/deployments"
                  sh "cp target/CSR0002-CargaArchivoDeclaracion-1.0.jar oc-build/deployments/CSR0002-CargaArchivoDeclaracion.jar"

                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.selector("bc", "csr0002-cargaarchivolarge").startBuild("--from-dir=oc-build", "--wait=true")
                      }
                    }
                  }
                  sh "sleep 10"
                }
              }
              stage('Creando en QA') {
                when {
                  expression {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        return !openshift.selector('dc', 'csr0002-cargaarchivolarge').exists()
                      }
                    }
                  }
                }
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        def app = openshift.newApp("csr0002-cargaarchivolarge:latest")
                        app.narrow("svc").expose();
                        def dc = openshift.selector("dc", "csr0002-cargaarchivolarge")
                        while (dc.object().spec.replicas != dc.object().status.availableReplicas) {
                            sleep 10
                        }
                        openshift.set("triggers", "dc/csr0002-cargaarchivolarge", "--manual")
                      }
                      sh "sleep 40"
                    }
                  }
                }
              }
              stage('Desplegando en QA') {
                steps {
                sh "sleep 20"
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.selector("dc", "csr0002-cargaarchivolarge").rollout().latest();
                      }
                      sh "sleep 15"
                    }
                  }
                }
              }
            }
          }
      type: JenkinsPipeline
    triggeredBy:
    - message: Triggered by Jenkins job at http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0002-cargaarchivolarge/
  status:
    completionTimestamp: "2023-10-16T20:23:36Z"
    conditions:
    - lastTransitionTime: "2023-10-16T20:19:08Z"
      lastUpdateTime: "2023-10-16T20:19:08Z"
      status: "False"
      type: New
    - lastTransitionTime: "2023-10-16T20:19:09Z"
      lastUpdateTime: "2023-10-16T20:19:09Z"
      status: "False"
      type: Pending
    - lastTransitionTime: "2023-10-16T20:23:36Z"
      lastUpdateTime: "2023-10-16T20:23:36Z"
      status: "False"
      type: Running
    - lastTransitionTime: "2023-10-16T20:23:36Z"
      lastUpdateTime: "2023-10-16T20:23:36Z"
      status: "True"
      type: Complete
    config:
      kind: BuildConfig
      name: csr0002-cargaarchivolarge
      namespace: pipelines-qa
    output: {}
    phase: Complete
    startTimestamp: "2023-10-16T20:19:08Z"
- apiVersion: build.openshift.io/v1
  kind: Build
  metadata:
    annotations:
      openshift.io/jenkins-blueocean-log-url: /http://jenkins-cicd.api-cloud.dirtrab.cl/blue/organizations/jenkins/pipelines-qa%2Fpipelines-qa-csr0002-cargaarchivomedium/detail/pipelines-qa-csr0002-cargaarchivomedium/9/
      openshift.io/jenkins-build-uri: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0002-cargaarchivomedium/9/
      openshift.io/jenkins-console-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0002-cargaarchivomedium/9/console
      openshift.io/jenkins-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0002-cargaarchivomedium/9/consoleText
      openshift.io/jenkins-status-json: '{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0002-cargaarchivomedium/9/wfapi/describe"}},"id":"9","name":"#9","status":"SUCCESS","startTimeMillis":1697486893805,"endTimeMillis":1697487146561,"durationMillis":252756,"queueDurationMillis":5,"pauseDurationMillis":0,"stages":[{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0002-cargaarchivomedium/9/execution/node/6/wfapi/describe"}},"id":"6","name":"Clonando
        repo y Compilando","execNode":"","status":"SUCCESS","startTimeMillis":1697486900879,"durationMillis":153459,"pauseDurationMillis":0},{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0002-cargaarchivomedium/9/execution/node/28/wfapi/describe"}},"id":"28","name":"Construyendo
        imagen","execNode":"","status":"SUCCESS","startTimeMillis":1697487055972,"durationMillis":51592,"pauseDurationMillis":0},{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0002-cargaarchivomedium/9/execution/node/51/wfapi/describe"}},"id":"51","name":"Desplegando
        en QA","execNode":"","status":"SUCCESS","startTimeMillis":1697487108433,"durationMillis":38060,"pauseDurationMillis":0}]}'
    creationTimestamp: "2023-10-16T20:08:13Z"
    generation: 1
    labels:
      app: cicd-pipeline
      buildconfig: csr0002-cargaarchivomedium
      group: cicd
      migration.openshift.io/migrated-by-migmigration: 83812283-da61-428b-8d35-e15d91aa764d
      migration.openshift.io/migrated-by-migplan: 6b6402c2-9258-443b-83f4-8bb51f1d90f8
      name: cicd-pipeline
      openshift.io/build-config.name: csr0002-cargaarchivomedium
      openshift.io/build.start-policy: Serial
      template: cicd
      velero.io/backup-name: migration-8d005-initial-6s92c
      velero.io/restore-name: migration-8d005-final-jj2bc
    name: csr0002-cargaarchivomedium-1
    namespace: pipelines-qa
    ownerReferences:
    - apiVersion: build.openshift.io/v1
      controller: true
      kind: BuildConfig
      name: csr0002-cargaarchivomedium
      uid: 7cdc9f3a-3d01-4a19-9443-f5011dea5bb5
    resourceVersion: "136556908"
    uid: fa444733-88e5-40e4-8291-5a9c49ba0683
  spec:
    nodeSelector: {}
    output: {}
    postCommit: {}
    resources: {}
    serviceAccount: builder
    source:
      type: None
    strategy:
      jenkinsPipelineStrategy:
        env:
        - name: DEV_PROJECT
          value: api-fiscalizacion-dev
        - name: QA_PROJECT
          value: api-fiscalizacion-qa
        - name: ENABLE_QUAY
          value: "false"
        jenkinsfile: |
          pipeline {
            agent {
              label 'maven'
            }
            stages {
              stage('Clonando repo y Compilando') {
                  steps {
                      git([url: 'https://dirtrab.visualstudio.com/Libro%20Remuneraciones%20Electronico/_git/CSR0002-CargaArchivoDeclaracion',
                      branch: 'bugfix/salto_linea',
                      credentialsId: 'azure_credenciales_id'])
                  script {
                      def pom = readMavenPom file: 'pom.xml'
                      version = pom.version
                  }
                  sh "mvn -s configuration/settings.xml install -DskipTests=true"
                }
              }
              stage('Creando Image Builder') {
                when {
                  expression {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        return !openshift.selector("bc", "csr0002-cargaarchivomedium").exists();
                      }
                    }
                  }
                }
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.newBuild("--name=csr0002-cargaarchivomedium", "--image-stream=redhat-openjdk18-openshift:1.4", "--binary=true")
                      }
                    }
                  }
                }
              }
              stage('Construyendo imagen') {
                steps {
                  sh "rm -rf oc-build && mkdir -p oc-build/deployments"
                  sh "cp target/CSR0002-CargaArchivoDeclaracion-1.0.jar oc-build/deployments/CSR0002-CargaArchivoDeclaracion.jar"

                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.selector("bc", "csr0002-cargaarchivomedium").startBuild("--from-dir=oc-build", "--wait=true")
                      }
                    }
                  }
                  sh "sleep 10"
                }
              }
              stage('Creando en QA') {
                when {
                  expression {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        return !openshift.selector('dc', 'csr0002-cargaarchivomedium').exists()
                      }
                    }
                  }
                }
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        def app = openshift.newApp("csr0002-cargaarchivomedium:latest")
                        app.narrow("svc").expose();
                        def dc = openshift.selector("dc", "csr0002-cargaarchivomedium")
                        while (dc.object().spec.replicas != dc.object().status.availableReplicas) {
                            sleep 10
                        }
                        openshift.set("triggers", "dc/csr0002-cargaarchivomedium", "--manual")
                      }
                      sh "sleep 40"
                    }
                  }
                }
              }
              stage('Desplegando en QA') {
                steps {
                sh "sleep 20"
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.selector("dc", "csr0002-cargaarchivomedium").rollout().latest();
                      }
                      sh "sleep 15"
                    }
                  }
                }
              }
            }
          }
      type: JenkinsPipeline
    triggeredBy:
    - message: Triggered by Jenkins job at http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0002-cargaarchivomedium/
  status:
    completionTimestamp: "2023-10-16T20:12:26Z"
    conditions:
    - lastTransitionTime: "2023-10-16T20:08:13Z"
      lastUpdateTime: "2023-10-16T20:08:13Z"
      status: "False"
      type: New
    - lastTransitionTime: "2023-10-16T20:08:14Z"
      lastUpdateTime: "2023-10-16T20:08:14Z"
      status: "False"
      type: Pending
    - lastTransitionTime: "2023-10-16T20:12:26Z"
      lastUpdateTime: "2023-10-16T20:12:26Z"
      status: "False"
      type: Running
    - lastTransitionTime: "2023-10-16T20:12:26Z"
      lastUpdateTime: "2023-10-16T20:12:26Z"
      status: "True"
      type: Complete
    config:
      kind: BuildConfig
      name: csr0002-cargaarchivomedium
      namespace: pipelines-qa
    output: {}
    phase: Complete
    startTimestamp: "2023-10-16T20:08:13Z"
- apiVersion: build.openshift.io/v1
  kind: Build
  metadata:
    annotations:
      openshift.io/jenkins-blueocean-log-url: /http://jenkins-cicd.api-cloud.dirtrab.cl/blue/organizations/jenkins/pipelines-qa%2Fpipelines-qa-csr0002-cargaarchivosmall/detail/pipelines-qa-csr0002-cargaarchivosmall/19/
      openshift.io/jenkins-build-uri: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0002-cargaarchivosmall/19/
      openshift.io/jenkins-console-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0002-cargaarchivosmall/19/console
      openshift.io/jenkins-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0002-cargaarchivosmall/19/consoleText
      openshift.io/jenkins-status-json: '{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0002-cargaarchivosmall/19/wfapi/describe"}},"id":"19","name":"#19","status":"SUCCESS","startTimeMillis":1697486596455,"endTimeMillis":1697486867001,"durationMillis":270546,"queueDurationMillis":5,"pauseDurationMillis":0,"stages":[{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0002-cargaarchivosmall/19/execution/node/6/wfapi/describe"}},"id":"6","name":"Clonando
        repo y Compilando","execNode":"","status":"SUCCESS","startTimeMillis":1697486611368,"durationMillis":162257,"pauseDurationMillis":0},{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0002-cargaarchivosmall/19/execution/node/28/wfapi/describe"}},"id":"28","name":"Construyendo
        imagen","execNode":"","status":"SUCCESS","startTimeMillis":1697486775627,"durationMillis":52765,"pauseDurationMillis":0},{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0002-cargaarchivosmall/19/execution/node/51/wfapi/describe"}},"id":"51","name":"Desplegando
        en QA","execNode":"","status":"SUCCESS","startTimeMillis":1697486828831,"durationMillis":38102,"pauseDurationMillis":0}]}'
    creationTimestamp: "2023-10-16T20:03:16Z"
    generation: 1
    labels:
      app: cicd-pipeline
      buildconfig: csr0002-cargaarchivosmall
      group: cicd
      migration.openshift.io/migrated-by-migmigration: 83812283-da61-428b-8d35-e15d91aa764d
      migration.openshift.io/migrated-by-migplan: 6b6402c2-9258-443b-83f4-8bb51f1d90f8
      name: cicd-pipeline
      openshift.io/build-config.name: csr0002-cargaarchivosmall
      openshift.io/build.start-policy: Serial
      template: cicd
      velero.io/backup-name: migration-8d005-initial-6s92c
      velero.io/restore-name: migration-8d005-final-jj2bc
    name: csr0002-cargaarchivosmall-1
    namespace: pipelines-qa
    ownerReferences:
    - apiVersion: build.openshift.io/v1
      controller: true
      kind: BuildConfig
      name: csr0002-cargaarchivosmall
      uid: 7bb3c371-a35a-40ba-8e52-5b92c8922bfd
    resourceVersion: "136554211"
    uid: 499e4cd5-c949-49ff-b2c1-b422d927ce26
  spec:
    nodeSelector: {}
    output: {}
    postCommit: {}
    resources: {}
    serviceAccount: builder
    source:
      type: None
    strategy:
      jenkinsPipelineStrategy:
        env:
        - name: DEV_PROJECT
          value: api-fiscalizacion-dev
        - name: QA_PROJECT
          value: api-fiscalizacion-qa
        - name: ENABLE_QUAY
          value: "false"
        jenkinsfile: |
          pipeline {
            agent {
              label 'maven'
            }
            stages {
              stage('Clonando repo y Compilando') {
                  steps {
                      git([url: 'https://dirtrab.visualstudio.com/Libro%20Remuneraciones%20Electronico/_git/CSR0002-CargaArchivoDeclaracion',
                      branch: 'feature/sin_movimiento',
                      credentialsId: 'azure_credenciales_id'])
                  script {
                      def pom = readMavenPom file: 'pom.xml'
                      version = pom.version
                  }
                  sh "mvn -s configuration/settings.xml install -DskipTests=true"
                }
              }
              stage('Creando Image Builder') {
                when {
                  expression {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        return !openshift.selector("bc", "csr0002-cargaarchivosmall").exists();
                      }
                    }
                  }
                }
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.newBuild("--name=csr0002-cargaarchivosmall", "--image-stream=redhat-openjdk18-openshift:1.4", "--binary=true")
                      }
                    }
                  }
                }
              }
              stage('Construyendo imagen') {
                steps {
                  sh "rm -rf oc-build && mkdir -p oc-build/deployments"
                  sh "cp target/CSR0002-CargaArchivoDeclaracion-1.0.jar oc-build/deployments/CSR0002-CargaArchivoDeclaracion.jar"

                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.selector("bc", "csr0002-cargaarchivosmall").startBuild("--from-dir=oc-build", "--wait=true")
                      }
                    }
                  }
                  sh "sleep 10"
                }
              }
              stage('Creando en QA') {
                when {
                  expression {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        return !openshift.selector('dc', 'csr0002-cargaarchivosmall').exists()
                      }
                    }
                  }
                }
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        def app = openshift.newApp("csr0002-cargaarchivosmall:latest")
                        app.narrow("svc").expose();
                        def dc = openshift.selector("dc", "csr0002-cargaarchivosmall")
                        while (dc.object().spec.replicas != dc.object().status.availableReplicas) {
                            sleep 10
                        }
                        openshift.set("triggers", "dc/csr0002-cargaarchivosmall", "--manual")
                      }
                      sh "sleep 40"
                    }
                  }
                }
              }
              stage('Desplegando en QA') {
                steps {
                sh "sleep 20"
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.selector("dc", "csr0002-cargaarchivosmall").rollout().latest();
                      }
                      sh "sleep 15"
                    }
                  }
                }
              }
            }
          }
      type: JenkinsPipeline
    triggeredBy:
    - message: Triggered by Jenkins job at http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0002-cargaarchivosmall/
  status:
    completionTimestamp: "2023-10-16T20:07:47Z"
    conditions:
    - lastTransitionTime: "2023-10-16T20:03:16Z"
      lastUpdateTime: "2023-10-16T20:03:16Z"
      status: "False"
      type: New
    - lastTransitionTime: "2023-10-16T20:03:19Z"
      lastUpdateTime: "2023-10-16T20:03:19Z"
      status: "False"
      type: Pending
    - lastTransitionTime: "2023-10-16T20:07:47Z"
      lastUpdateTime: "2023-10-16T20:07:47Z"
      status: "False"
      type: Running
    - lastTransitionTime: "2023-10-16T20:07:47Z"
      lastUpdateTime: "2023-10-16T20:07:47Z"
      status: "True"
      type: Complete
    config:
      kind: BuildConfig
      name: csr0002-cargaarchivosmall
      namespace: pipelines-qa
    output: {}
    phase: Complete
    startTimestamp: "2023-10-16T20:03:16Z"
- apiVersion: build.openshift.io/v1
  kind: Build
  metadata:
    annotations:
      openshift.io/jenkins-blueocean-log-url: /http://jenkins-cicd.api-cloud.dirtrab.cl/blue/organizations/jenkins/pipelines-qa%2Fpipelines-qa-csr0003-envioarchivodeclaracion/detail/pipelines-qa-csr0003-envioarchivodeclaracion/83/
      openshift.io/jenkins-build-uri: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0003-envioarchivodeclaracion/83/
      openshift.io/jenkins-console-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0003-envioarchivodeclaracion/83/console
      openshift.io/jenkins-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0003-envioarchivodeclaracion/83/consoleText
      openshift.io/jenkins-status-json: '{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0003-envioarchivodeclaracion/83/wfapi/describe"}},"id":"83","name":"#83","status":"SUCCESS","startTimeMillis":1697488126995,"endTimeMillis":1697488396871,"durationMillis":269876,"queueDurationMillis":5,"pauseDurationMillis":0,"stages":[{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0003-envioarchivodeclaracion/83/execution/node/6/wfapi/describe"}},"id":"6","name":"Clonando
        repo y Compilando","execNode":"","status":"SUCCESS","startTimeMillis":1697488144836,"durationMillis":158220,"pauseDurationMillis":0},{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0003-envioarchivodeclaracion/83/execution/node/28/wfapi/describe"}},"id":"28","name":"Construyendo
        imagen","execNode":"","status":"SUCCESS","startTimeMillis":1697488305409,"durationMillis":52993,"pauseDurationMillis":0},{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0003-envioarchivodeclaracion/83/execution/node/51/wfapi/describe"}},"id":"51","name":"Desplegando
        en QA","execNode":"","status":"SUCCESS","startTimeMillis":1697488358820,"durationMillis":37994,"pauseDurationMillis":0}]}'
    creationTimestamp: "2023-10-16T20:28:46Z"
    generation: 1
    labels:
      app: cicd-pipeline
      buildconfig: csr0003-envioarchivodeclaracion
      group: cicd
      migration.openshift.io/migrated-by-migmigration: 83812283-da61-428b-8d35-e15d91aa764d
      migration.openshift.io/migrated-by-migplan: 6b6402c2-9258-443b-83f4-8bb51f1d90f8
      name: cicd-pipeline
      openshift.io/build-config.name: csr0003-envioarchivodeclaracion
      openshift.io/build.start-policy: Serial
      template: cicd
      velero.io/backup-name: migration-8d005-initial-6s92c
      velero.io/restore-name: migration-8d005-final-jj2bc
    name: csr0003-envioarchivodeclaracion-1
    namespace: pipelines-qa
    ownerReferences:
    - apiVersion: build.openshift.io/v1
      controller: true
      kind: BuildConfig
      name: csr0003-envioarchivodeclaracion
      uid: 02a1cc3e-fb7b-4ee0-bb37-62a875610b62
    resourceVersion: "136569349"
    uid: fa979c80-2e6c-4e96-82bd-49f015c25a43
  spec:
    nodeSelector: {}
    output: {}
    postCommit: {}
    resources: {}
    serviceAccount: builder
    source:
      type: None
    strategy:
      jenkinsPipelineStrategy:
        env:
        - name: QA_PROJECT
          value: api-fiscalizacion-qa
        - name: ENABLE_QUAY
          value: "false"
        jenkinsfile: |
          pipeline {
            agent {
              label 'maven'
            }
            stages {
              stage('Clonando repo y Compilando') {
                  steps {
                      git([url: 'https://dirtrab.visualstudio.com/Libro%20Remuneraciones%20Electronico/_git/CSR0003-EnvioArchivoDeclaracion',
                      branch: 'feature/test_restTemplate',
                      credentialsId: 'azure_credenciales_id'])
                  script {
                      def pom = readMavenPom file: 'pom.xml'
                      version = pom.version
                  }
                  sh "mvn -s configuration/settings.xml install -DskipTests=true"
                }
              }
              stage('Creando Image Builder') {
                when {
                  expression {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        return !openshift.selector("bc", "csr0003-envioarchivodecl").exists();
                      }
                    }
                  }
                }
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.newBuild("--name=csr0003-envioarchivodecl", "--image-stream=redhat-openjdk18-openshift:1.4", "--binary=true")
                      }
                    }
                  }
                }
              }
              stage('Construyendo imagen') {
                steps {
                  sh "rm -rf oc-build && mkdir -p oc-build/deployments"
                  sh "cp target/CSR0003-EnvioArchivoDeclaracion-1.0.jar oc-build/deployments/CSR0003-EnvioArchivoDeclaracion.jar"

                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.selector("bc", "csr0003-envioarchivodecl").startBuild("--from-dir=oc-build", "--wait=true")
                      }
                    }
                  }
                  sh "sleep 10"
                }
              }
              stage('Creando en QA') {
                when {
                  expression {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        return !openshift.selector('dc', 'csr0003-envioarchivodecl').exists()
                      }
                    }
                  }
                }
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        def app = openshift.newApp("csr0003-envioarchivodecl:latest")
                        app.narrow("svc").expose();
                        def dc = openshift.selector("dc", "csr0003-envioarchivodecl")
                        while (dc.object().spec.replicas != dc.object().status.availableReplicas) {
                            sleep 10
                        }
                        openshift.set("triggers", "dc/csr0003-envioarchivodecl", "--manual")
                      }
                      sh "sleep 40"
                    }
                  }
                }
              }
              stage('Desplegando en QA') {
                steps {
                sh "sleep 20"
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.selector("dc", "csr0003-envioarchivodecl").rollout().latest();
                      }
                      sh "sleep 15"
                    }
                  }
                }
              }
            }
          }
      type: JenkinsPipeline
    triggeredBy:
    - message: Triggered by Jenkins job at http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0003-envioarchivodeclaracion/
  status:
    completionTimestamp: "2023-10-16T20:33:16Z"
    conditions:
    - lastTransitionTime: "2023-10-16T20:28:47Z"
      lastUpdateTime: "2023-10-16T20:28:47Z"
      status: "False"
      type: New
    - lastTransitionTime: "2023-10-16T20:28:49Z"
      lastUpdateTime: "2023-10-16T20:28:49Z"
      status: "False"
      type: Pending
    - lastTransitionTime: "2023-10-16T20:33:16Z"
      lastUpdateTime: "2023-10-16T20:33:16Z"
      status: "False"
      type: Running
    - lastTransitionTime: "2023-10-16T20:33:16Z"
      lastUpdateTime: "2023-10-16T20:33:16Z"
      status: "True"
      type: Complete
    config:
      kind: BuildConfig
      name: csr0003-envioarchivodeclaracion
      namespace: pipelines-qa
    output: {}
    phase: Complete
    startTimestamp: "2023-10-16T20:28:46Z"
- apiVersion: build.openshift.io/v1
  kind: Build
  metadata:
    annotations:
      openshift.io/jenkins-blueocean-log-url: /http://jenkins-cicd.api-cloud.dirtrab.cl/blue/organizations/jenkins/pipelines-qa%2Fpipelines-qa-csr0004-notificacioniteraciones/detail/pipelines-qa-csr0004-notificacioniteraciones/12/
      openshift.io/jenkins-build-uri: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0004-notificacioniteraciones/12/
      openshift.io/jenkins-console-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0004-notificacioniteraciones/12/console
      openshift.io/jenkins-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0004-notificacioniteraciones/12/consoleText
      openshift.io/jenkins-status-json: '{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0004-notificacioniteraciones/12/wfapi/describe"}},"id":"12","name":"#12","status":"SUCCESS","startTimeMillis":1697489018593,"endTimeMillis":1697489287396,"durationMillis":268803,"queueDurationMillis":5,"pauseDurationMillis":0,"stages":[{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0004-notificacioniteraciones/12/execution/node/6/wfapi/describe"}},"id":"6","name":"Clonando
        repo y Compilando","execNode":"","status":"SUCCESS","startTimeMillis":1697489032222,"durationMillis":168939,"pauseDurationMillis":0},{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0004-notificacioniteraciones/12/execution/node/28/wfapi/describe"}},"id":"28","name":"Construyendo
        imagen","execNode":"","status":"SUCCESS","startTimeMillis":1697489203373,"durationMillis":50398,"pauseDurationMillis":0},{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0004-notificacioniteraciones/12/execution/node/51/wfapi/describe"}},"id":"51","name":"Desplegando
        en QA","execNode":"","status":"SUCCESS","startTimeMillis":1697489254238,"durationMillis":33099,"pauseDurationMillis":0}]}'
    creationTimestamp: "2023-10-16T20:43:38Z"
    generation: 1
    labels:
      app: cicd-pipeline
      buildconfig: csr0004-notificacioniteraciones
      group: cicd
      migration.openshift.io/migrated-by-migmigration: 83812283-da61-428b-8d35-e15d91aa764d
      migration.openshift.io/migrated-by-migplan: 6b6402c2-9258-443b-83f4-8bb51f1d90f8
      name: cicd-pipeline
      openshift.io/build-config.name: csr0004-notificacioniteraciones
      openshift.io/build.start-policy: Serial
      template: cicd
      velero.io/backup-name: migration-8d005-initial-6s92c
      velero.io/restore-name: migration-8d005-final-jj2bc
    name: csr0004-notificacioniteraciones-1
    namespace: pipelines-qa
    ownerReferences:
    - apiVersion: build.openshift.io/v1
      controller: true
      kind: BuildConfig
      name: csr0004-notificacioniteraciones
      uid: 700180c9-ec49-4a7f-a9b9-78c5ce2f13e2
    resourceVersion: "136578209"
    uid: e17ae0e3-33d6-4d8c-bb3a-dad14837ba74
  spec:
    nodeSelector: {}
    output: {}
    postCommit: {}
    resources: {}
    serviceAccount: builder
    source:
      type: None
    strategy:
      jenkinsPipelineStrategy:
        env:
        - name: QA_PROJECT
          value: api-fiscalizacion-qa
        - name: ENABLE_QUAY
          value: "false"
        jenkinsfile: |
          pipeline {
            agent {
              label 'maven'
            }
            stages {
              stage('Clonando repo y Compilando') {
                  steps {
                      git([url: 'https://dirtrab.visualstudio.com/Libro%20Remuneraciones%20Electronico/_git/CSR0004-NotificacionIteraciones',
                      branch: 'develop',
                      credentialsId: 'azure_credenciales_id'])
                  script {
                      def pom = readMavenPom file: 'pom.xml'
                      version = pom.version
                  }
                  sh "mvn -s configuration/settings.xml install -DskipTests=true"
                }
              }
              stage('Creando Image Builder') {
                when {
                  expression {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        return !openshift.selector("bc", "csr0004-notificacioniter").exists();
                      }
                    }
                  }
                }
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.newBuild("--name=csr0004-notificacioniter", "--image-stream=redhat-openjdk18-openshift:1.4", "--binary=true")
                      }
                    }
                  }
                }
              }
              stage('Construyendo imagen') {
                steps {
                  sh "rm -rf oc-build && mkdir -p oc-build/deployments"
                  sh "cp target/CSR0004-NotificacionIteraciones-1.0.jar oc-build/deployments/CSR0004-NotificacionIteraciones.jar"

                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.selector("bc", "csr0004-notificacioniter").startBuild("--from-dir=oc-build", "--wait=true")
                      }
                    }
                  }
                  sh "sleep 10"
                }
              }
              stage('Creando en QA') {
                when {
                  expression {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        return !openshift.selector('dc', 'csr0004-notificacioniter').exists()
                      }
                    }
                  }
                }
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        def app = openshift.newApp("csr0004-notificacioniter:latest")
                        app.narrow("svc").expose();
                        def dc = openshift.selector("dc", "csr0004-notificacioniter")
                        while (dc.object().spec.replicas != dc.object().status.availableReplicas) {
                            sleep 10
                        }
                        openshift.set("triggers", "dc/csr0004-notificacioniter", "--manual")
                      }
                      sh "sleep 140"
                    }
                  }
                }
              }
              stage('Desplegando en QA') {
                steps {
                sh "sleep 20"
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.selector("dc", "csr0004-notificacioniter").rollout().latest();
                      }
                      sh "sleep 10"
                    }
                  }
                }
              }
            }
          }
      type: JenkinsPipeline
    triggeredBy:
    - message: Triggered by Jenkins job at http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0004-notificacioniteraciones/
  status:
    completionTimestamp: "2023-10-16T20:48:07Z"
    conditions:
    - lastTransitionTime: "2023-10-16T20:43:38Z"
      lastUpdateTime: "2023-10-16T20:43:38Z"
      status: "False"
      type: New
    - lastTransitionTime: "2023-10-16T20:43:39Z"
      lastUpdateTime: "2023-10-16T20:43:39Z"
      status: "False"
      type: Pending
    - lastTransitionTime: "2023-10-16T20:48:07Z"
      lastUpdateTime: "2023-10-16T20:48:07Z"
      status: "False"
      type: Running
    - lastTransitionTime: "2023-10-16T20:48:07Z"
      lastUpdateTime: "2023-10-16T20:48:07Z"
      status: "True"
      type: Complete
    config:
      kind: BuildConfig
      name: csr0004-notificacioniteraciones
      namespace: pipelines-qa
    output: {}
    phase: Complete
    startTimestamp: "2023-10-16T20:43:38Z"
- apiVersion: build.openshift.io/v1
  kind: Build
  metadata:
    annotations:
      openshift.io/jenkins-blueocean-log-url: /http://jenkins-cicd.api-cloud.dirtrab.cl/blue/organizations/jenkins/pipelines-qa%2Fpipelines-qa-csr0005-manager/detail/pipelines-qa-csr0005-manager/12/
      openshift.io/jenkins-build-uri: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0005-manager/12/
      openshift.io/jenkins-console-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0005-manager/12/console
      openshift.io/jenkins-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0005-manager/12/consoleText
      openshift.io/jenkins-status-json: '{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0005-manager/12/wfapi/describe"}},"id":"12","name":"#12","status":"SUCCESS","startTimeMillis":1697488750551,"endTimeMillis":1697489001407,"durationMillis":250856,"queueDurationMillis":5,"pauseDurationMillis":0,"stages":[{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0005-manager/12/execution/node/6/wfapi/describe"}},"id":"6","name":"Clonando
        repo y Compilando","execNode":"","status":"SUCCESS","startTimeMillis":1697488757748,"durationMillis":156943,"pauseDurationMillis":0},{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0005-manager/12/execution/node/28/wfapi/describe"}},"id":"28","name":"Construyendo
        imagen","execNode":"","status":"SUCCESS","startTimeMillis":1697488916810,"durationMillis":50936,"pauseDurationMillis":0},{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0005-manager/12/execution/node/51/wfapi/describe"}},"id":"51","name":"Desplegando
        en QA","execNode":"","status":"SUCCESS","startTimeMillis":1697488968140,"durationMillis":33189,"pauseDurationMillis":0}]}'
    creationTimestamp: "2023-10-16T20:39:10Z"
    generation: 1
    labels:
      app: cicd-pipeline
      buildconfig: csr0005-manager
      group: cicd
      migration.openshift.io/migrated-by-migmigration: 83812283-da61-428b-8d35-e15d91aa764d
      migration.openshift.io/migrated-by-migplan: 6b6402c2-9258-443b-83f4-8bb51f1d90f8
      name: cicd-pipeline
      openshift.io/build-config.name: csr0005-manager
      openshift.io/build.start-policy: Serial
      template: cicd
      velero.io/backup-name: migration-8d005-initial-6s92c
      velero.io/restore-name: migration-8d005-final-jj2bc
    name: csr0005-manager-1
    namespace: pipelines-qa
    ownerReferences:
    - apiVersion: build.openshift.io/v1
      controller: true
      kind: BuildConfig
      name: csr0005-manager
      uid: ca4a0d2e-bce3-4789-baea-8504962b418b
    resourceVersion: "136575230"
    uid: e9490d61-533f-4ea8-8d07-1004495a27c5
  spec:
    nodeSelector: {}
    output: {}
    postCommit: {}
    resources: {}
    serviceAccount: builder
    source:
      type: None
    strategy:
      jenkinsPipelineStrategy:
        env:
        - name: QA_PROJECT
          value: api-fiscalizacion-qa
        - name: ENABLE_QUAY
          value: "false"
        jenkinsfile: |
          pipeline {
            agent {
              label 'maven'
            }
            stages {
              stage('Clonando repo y Compilando') {
                  steps {
                      git([url: 'https://dirtrab.visualstudio.com/Libro%20Remuneraciones%20Electronico/_git/CSR0005-ManagerDeclaracion',
                      branch: 'bugfix/quitar_consulta_costosa',
                      credentialsId: 'azure_credenciales_id'])
                  script {
                      def pom = readMavenPom file: 'pom.xml'
                      version = pom.version
                  }
                  sh "mvn -s configuration/settings.xml install -DskipTests=true"
                }
              }
              stage('Creando Image Builder') {
                when {
                  expression {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        return !openshift.selector("bc", "csr0005-manager").exists();
                      }
                    }
                  }
                }
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.newBuild("--name=csr0005-manager", "--image-stream=redhat-openjdk18-openshift:1.4", "--binary=true")
                      }
                    }
                  }
                }
              }
              stage('Construyendo imagen') {
                steps {
                  sh "rm -rf oc-build && mkdir -p oc-build/deployments"
                  sh "cp target/CSR0005-ManagerDeclaracion-1.0.jar oc-build/deployments/CSR0005-ManagerDeclaracion.jar"

                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.selector("bc", "csr0005-manager").startBuild("--from-dir=oc-build", "--wait=true")
                      }
                    }
                  }
                  sh "sleep 10"
                }
              }
              stage('Creando en QA') {
                when {
                  expression {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        return !openshift.selector('dc', 'csr0005-manager').exists()
                      }
                    }
                  }
                }
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        def app = openshift.newApp("csr0005-manager:latest")
                        app.narrow("svc").expose();
                        def dc = openshift.selector("dc", "csr0005-manager")
                        while (dc.object().spec.replicas != dc.object().status.availableReplicas) {
                            sleep 10
                        }
                        openshift.set("triggers", "dc/csr0005-manager", "--manual")
                      }
                      sh "sleep 40"
                    }
                  }
                }
              }
              stage('Desplegando en QA') {
                steps {
                sh "sleep 20"
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.selector("dc", "csr0005-manager").rollout().latest();
                      }
                      sh "sleep 10"
                    }
                  }
                }
              }
            }
          }
      type: JenkinsPipeline
    triggeredBy:
    - message: Triggered by Jenkins job at http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0005-manager/
  status:
    completionTimestamp: "2023-10-16T20:43:21Z"
    conditions:
    - lastTransitionTime: "2023-10-16T20:39:10Z"
      lastUpdateTime: "2023-10-16T20:39:10Z"
      status: "False"
      type: New
    - lastTransitionTime: "2023-10-16T20:39:14Z"
      lastUpdateTime: "2023-10-16T20:39:14Z"
      status: "False"
      type: Pending
    - lastTransitionTime: "2023-10-16T20:43:21Z"
      lastUpdateTime: "2023-10-16T20:43:21Z"
      status: "False"
      type: Running
    - lastTransitionTime: "2023-10-16T20:43:21Z"
      lastUpdateTime: "2023-10-16T20:43:21Z"
      status: "True"
      type: Complete
    config:
      kind: BuildConfig
      name: csr0005-manager
      namespace: pipelines-qa
    output: {}
    phase: Complete
    startTimestamp: "2023-10-16T20:39:10Z"
- apiVersion: build.openshift.io/v1
  kind: Build
  metadata:
    annotations:
      openshift.io/jenkins-blueocean-log-url: /http://jenkins-cicd.api-cloud.dirtrab.cl/blue/organizations/jenkins/pipelines-qa%2Fpipelines-qa-csr0006-excepciones/detail/pipelines-qa-csr0006-excepciones/3/
      openshift.io/jenkins-build-uri: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0006-excepciones/3/
      openshift.io/jenkins-console-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0006-excepciones/3/console
      openshift.io/jenkins-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0006-excepciones/3/consoleText
      openshift.io/jenkins-status-json: '{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0006-excepciones/3/wfapi/describe"}},"id":"3","name":"#3","status":"SUCCESS","startTimeMillis":1697488481116,"endTimeMillis":1697488737812,"durationMillis":256696,"queueDurationMillis":5,"pauseDurationMillis":0,"stages":[{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0006-excepciones/3/execution/node/6/wfapi/describe"}},"id":"6","name":"Clonando
        repo y Compilando","execNode":"","status":"SUCCESS","startTimeMillis":1697488493568,"durationMillis":157613,"pauseDurationMillis":0},{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0006-excepciones/3/execution/node/28/wfapi/describe"}},"id":"28","name":"Construyendo
        imagen","execNode":"","status":"SUCCESS","startTimeMillis":1697488653069,"durationMillis":51164,"pauseDurationMillis":0},{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0006-excepciones/3/execution/node/51/wfapi/describe"}},"id":"51","name":"Desplegando
        en QA","execNode":"","status":"SUCCESS","startTimeMillis":1697488704639,"durationMillis":33106,"pauseDurationMillis":0}]}'
    creationTimestamp: "2023-10-16T20:34:41Z"
    generation: 1
    labels:
      app: cicd-pipeline
      buildconfig: csr0006-excepciones
      group: cicd
      migration.openshift.io/migrated-by-migmigration: 83812283-da61-428b-8d35-e15d91aa764d
      migration.openshift.io/migrated-by-migplan: 6b6402c2-9258-443b-83f4-8bb51f1d90f8
      name: cicd-pipeline
      openshift.io/build-config.name: csr0006-excepciones
      openshift.io/build.start-policy: Serial
      template: cicd
      velero.io/backup-name: migration-8d005-initial-6s92c
      velero.io/restore-name: migration-8d005-final-jj2bc
    name: csr0006-excepciones-1
    namespace: pipelines-qa
    ownerReferences:
    - apiVersion: build.openshift.io/v1
      controller: true
      kind: BuildConfig
      name: csr0006-excepciones
      uid: 1b12d3fe-c86f-4f21-bb43-d4384aa3e722
    resourceVersion: "136572634"
    uid: 6fd0518e-90f5-47e7-a3bf-f073c633e602
  spec:
    nodeSelector: {}
    output: {}
    postCommit: {}
    resources: {}
    serviceAccount: builder
    source:
      type: None
    strategy:
      jenkinsPipelineStrategy:
        env:
        - name: QA_PROJECT
          value: api-fiscalizacion-qa
        - name: ENABLE_QUAY
          value: "false"
        jenkinsfile: |
          pipeline {
            agent {
              label 'maven'
            }
            stages {
              stage('Clonando repo y Compilando') {
                  steps {
                      git([url: 'https://dirtrab.visualstudio.com/Libro%20Remuneraciones%20Electronico/_git/CSR0006-Excepciones',
                      branch: 'develop',
                      credentialsId: 'azure_credenciales_id'])
                  script {
                      def pom = readMavenPom file: 'pom.xml'
                      version = pom.version
                  }
                  sh "mvn -s configuration/settings.xml install -DskipTests=true"
                }
              }
              stage('Creando Image Builder') {
                when {
                  expression {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        return !openshift.selector("bc", "csr0006-excepciones").exists();
                      }
                    }
                  }
                }
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.newBuild("--name=csr0006-excepciones", "--image-stream=redhat-openjdk18-openshift:1.4", "--binary=true")
                      }
                    }
                  }
                }
              }
              stage('Construyendo imagen') {
                steps {
                  sh "rm -rf oc-build && mkdir -p oc-build/deployments"
                  sh "cp target/CSR0006-Excepciones-1.0.jar oc-build/deployments/CSR0006-Excepciones.jar"

                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.selector("bc", "csr0006-excepciones").startBuild("--from-dir=oc-build", "--wait=true")
                      }
                    }
                  }
                  sh "sleep 10"
                }
              }
              stage('Creando en QA') {
                when {
                  expression {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        return !openshift.selector('dc', 'csr0006-excepciones').exists()
                      }
                    }
                  }
                }
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        def app = openshift.newApp("csr0006-excepciones:latest")
                        app.narrow("svc").expose();
                        def dc = openshift.selector("dc", "csr0006-excepciones")
                        while (dc.object().spec.replicas != dc.object().status.availableReplicas) {
                            sleep 10
                        }
                        openshift.set("triggers", "dc/csr0006-excepciones", "--manual")
                      }
                      sh "sleep 40"
                    }
                  }
                }
              }
              stage('Desplegando en QA') {
                steps {
                sh "sleep 20"
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.selector("dc", "csr0006-excepciones").rollout().latest();
                      }
                      sh "sleep 10"
                    }
                  }
                }
              }
            }
          }
      type: JenkinsPipeline
    triggeredBy:
    - message: Triggered by Jenkins job at http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-csr0006-excepciones/
  status:
    completionTimestamp: "2023-10-16T20:38:57Z"
    conditions:
    - lastTransitionTime: "2023-10-16T20:34:41Z"
      lastUpdateTime: "2023-10-16T20:34:41Z"
      status: "False"
      type: New
    - lastTransitionTime: "2023-10-16T20:34:44Z"
      lastUpdateTime: "2023-10-16T20:34:44Z"
      status: "False"
      type: Pending
    - lastTransitionTime: "2023-10-16T20:38:57Z"
      lastUpdateTime: "2023-10-16T20:38:57Z"
      status: "False"
      type: Running
    - lastTransitionTime: "2023-10-16T20:38:57Z"
      lastUpdateTime: "2023-10-16T20:38:57Z"
      status: "True"
      type: Complete
    config:
      kind: BuildConfig
      name: csr0006-excepciones
      namespace: pipelines-qa
    output: {}
    phase: Complete
    startTimestamp: "2023-10-16T20:34:41Z"
- apiVersion: build.openshift.io/v1
  kind: Build
  metadata:
    annotations:
      openshift.io/jenkins-blueocean-log-url: /http://jenkins-cicd.api-cloud.dirtrab.cl/blue/organizations/jenkins/pipelines-qa%2Fpipelines-qa-product-lre/detail/pipelines-qa-product-lre/151/
      openshift.io/jenkins-build-uri: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-product-lre/151/
      openshift.io/jenkins-console-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-product-lre/151/console
      openshift.io/jenkins-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-product-lre/151/consoleText
      openshift.io/jenkins-status-json: '{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-product-lre/151/wfapi/describe"}},"id":"151","name":"#151","status":"SUCCESS","startTimeMillis":1697548413059,"endTimeMillis":1697551347452,"durationMillis":2934393,"queueDurationMillis":5,"pauseDurationMillis":0,"stages":[{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-product-lre/151/execution/node/6/wfapi/describe"}},"id":"6","name":"Clonando
        repo y Compilando","execNode":"","status":"SUCCESS","startTimeMillis":1697548422402,"durationMillis":20902,"pauseDurationMillis":0},{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-product-lre/151/execution/node/22/wfapi/describe"}},"id":"22","name":"Construyendo
        imagen","execNode":"","status":"SUCCESS","startTimeMillis":1697548445866,"durationMillis":2658093,"pauseDurationMillis":0},{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-product-lre/151/execution/node/43/wfapi/describe"}},"id":"43","name":"Desplegando
        en qa","execNode":"","status":"SUCCESS","startTimeMillis":1697551104373,"durationMillis":243014,"pauseDurationMillis":0}]}'
    creationTimestamp: "2023-10-17T13:13:33Z"
    generation: 1
    labels:
      app: cicd-pipeline
      buildconfig: product-lre
      group: cicd
      migration.openshift.io/migrated-by-migmigration: 83812283-da61-428b-8d35-e15d91aa764d
      migration.openshift.io/migrated-by-migplan: 6b6402c2-9258-443b-83f4-8bb51f1d90f8
      name: cicd-pipeline
      openshift.io/build-config.name: product-lre
      openshift.io/build.start-policy: Serial
      template: cicd
      velero.io/backup-name: migration-8d005-initial-6s92c
      velero.io/restore-name: migration-8d005-final-jj2bc
    name: product-lre-1
    namespace: pipelines-qa
    ownerReferences:
    - apiVersion: build.openshift.io/v1
      controller: true
      kind: BuildConfig
      name: product-lre
      uid: e5c2dd26-4d00-4a0b-bd36-3b05268a33d6
    resourceVersion: "137183006"
    uid: f59582b0-4b36-4d97-8328-fbc071f51a94
  spec:
    nodeSelector: {}
    output: {}
    postCommit: {}
    resources: {}
    serviceAccount: builder
    source:
      type: None
    strategy:
      jenkinsPipelineStrategy:
        env:
        - name: QA_PROJECT
          value: lre-qa
        - name: ENABLE_QUAY
          value: "false"
        jenkinsfile: "pipeline {\n  agent {\n    label 'nodejs'\n  }\n  stages {\n
          \   stage('Clonando repo y Compilando') {\n      steps {\n          git([url:
          'https://dirtrab.visualstudio.com/Libro%20Remuneraciones%20Electronico/_git/product-lre',\n
          \         branch: 'feature/sin_movimiento',\n          credentialsId: 'vsts'])\n
          \     }\n    }\n    stage('Creando Image Builder') {\n      when {\n        expression
          {\n          openshift.withCluster() {\n            openshift.withProject(env.QA_PROJECT)
          {\n              return !openshift.selector(\"bc\", \"product-lre\").exists();\n
          \           }\n          }\n        }\n      }\n      steps {\n        script
          {\n          openshift.withCluster() {\n            openshift.withProject(env.QA_PROJECT)
          {\n              openshift.newBuild(\"--name=product-lre\", \"--image-stream=nodejs:10\",
          \"--binary=true\")\n            }\n          }\n        }\n      }\n    }\n
          \   stage('Construyendo imagen') {\n      steps {\n        script {\n          openshift.withCluster()
          {\n            openshift.withProject(env.QA_PROJECT) {\n              openshift.selector(\"bc\",
          \"product-lre\").startBuild(\"--from-dir=./\", \"--wait=true\")\n            }\n
          \         }\n        }\n        sh \"sleep 10\"\n      }\n    }\n    stage('Creando
          en qa') {\n      when {\n        expression {\n          openshift.withCluster()
          {\n            openshift.withProject(env.QA_PROJECT) {\n              return
          !openshift.selector('dc', 'product-lre').exists()\n            }\n          }\n
          \       }\n      }\n      steps {\n        script {\n          openshift.withCluster()
          {\n            openshift.withProject(env.QA_PROJECT) {\n              def
          app = openshift.newApp(\"product-lre:latest\")\n              app.narrow(\"svc\").expose();\n
          \             def dc = openshift.selector(\"dc\", \"product-lre\")\n              while
          (dc.object().spec.replicas != dc.object().status.availableReplicas) {\n
          \                 sleep 10\n              }\n              openshift.set(\"triggers\",
          \"dc/product-lre\", \"--manual\")\n            }\n            sh \"sleep
          30\"\n          }\n        }\n      }\n    }\n    stage('Desplegando en
          qa') {\n      steps {\n        echo \"Deploy imagen\"\n        script {\n
          \         openshift.withCluster() {\n            openshift.withProject(env.QA_PROJECT)
          {\n            sh \"sleep 30\"\n              def rm = openshift.selector(\"dc\",
          \"product-lre\").rollout().latest();\n              sh \"sleep 180\"\n              openshift.selector(\"dc\",
          \"product-lre\").rollout().latest();\n              echo \"Deploy generado\"
          \n            }\n            sh \"sleep 20\"\n          }\n        }\n      }\n
          \   }\n  }\n}\n"
      type: JenkinsPipeline
    triggeredBy:
    - message: Triggered by Jenkins job at http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-product-lre/
  status:
    completionTimestamp: "2023-10-17T14:02:27Z"
    conditions:
    - lastTransitionTime: "2023-10-17T13:13:33Z"
      lastUpdateTime: "2023-10-17T13:13:33Z"
      status: "False"
      type: New
    - lastTransitionTime: "2023-10-17T13:13:34Z"
      lastUpdateTime: "2023-10-17T13:13:34Z"
      status: "False"
      type: Pending
    - lastTransitionTime: "2023-10-17T14:02:27Z"
      lastUpdateTime: "2023-10-17T14:02:27Z"
      status: "False"
      type: Running
    - lastTransitionTime: "2023-10-17T14:02:27Z"
      lastUpdateTime: "2023-10-17T14:02:27Z"
      status: "True"
      type: Complete
    config:
      kind: BuildConfig
      name: product-lre
      namespace: pipelines-qa
    output: {}
    phase: Complete
    startTimestamp: "2023-10-17T13:13:33Z"
- apiVersion: build.openshift.io/v1
  kind: Build
  metadata:
    annotations:
      openshift.io/jenkins-blueocean-log-url: /http://jenkins-cicd.api-cloud.dirtrab.cl/blue/organizations/jenkins/pipelines-qa%2Fpipelines-qa-prox0001-registralibrorem/detail/pipelines-qa-prox0001-registralibrorem/37/
      openshift.io/jenkins-build-uri: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prox0001-registralibrorem/37/
      openshift.io/jenkins-console-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prox0001-registralibrorem/37/console
      openshift.io/jenkins-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prox0001-registralibrorem/37/consoleText
      openshift.io/jenkins-status-json: '{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prox0001-registralibrorem/37/wfapi/describe"}},"id":"37","name":"#37","status":"FAILED","startTimeMillis":1697466872862,"endTimeMillis":1697467041217,"durationMillis":168355,"queueDurationMillis":4,"pauseDurationMillis":0,"stages":[{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prox0001-registralibrorem/37/execution/node/6/wfapi/describe"}},"id":"6","name":"Clonando
        repo y Compilando","execNode":"","status":"FAILED","error":{"message":"script
        returned exit code 1","type":"hudson.AbortException"},"startTimeMillis":1697466885231,"durationMillis":155524,"pauseDurationMillis":0}]}'
    creationTimestamp: "2023-10-16T14:34:32Z"
    generation: 1
    labels:
      app: cicd-pipeline
      buildconfig: prox0001-registralibrorem
      group: cicd
      migration.openshift.io/migrated-by-migmigration: 83812283-da61-428b-8d35-e15d91aa764d
      migration.openshift.io/migrated-by-migplan: 6b6402c2-9258-443b-83f4-8bb51f1d90f8
      name: cicd-pipeline
      openshift.io/build-config.name: prox0001-registralibrorem
      openshift.io/build.start-policy: Serial
      template: cicd
      velero.io/backup-name: migration-8d005-initial-6s92c
      velero.io/restore-name: migration-8d005-final-jj2bc
    name: prox0001-registralibrorem-1
    namespace: pipelines-qa
    ownerReferences:
    - apiVersion: build.openshift.io/v1
      controller: true
      kind: BuildConfig
      name: prox0001-registralibrorem
      uid: 4477d2d6-b29a-4a14-9b60-a4529d3b7d36
    resourceVersion: "136361595"
    uid: 62e13fb0-aed5-4d64-832e-6344b2a3fc3f
  spec:
    nodeSelector: {}
    output: {}
    postCommit: {}
    resources: {}
    serviceAccount: builder
    source:
      type: None
    strategy:
      jenkinsPipelineStrategy:
        env:
        - name: QA_PROJECT
          value: api-fiscalizacion-qa
        - name: ENABLE_QUAY
          value: "false"
        jenkinsfile: |
          pipeline {
            agent {
              label 'maven'
            }
            stages {
              stage('Clonando repo y Compilando') {
                  steps {
                      git([url: 'https://dirtrab.visualstudio.com/Libro%20Remuneraciones%20Electronico/_git/PRX0001-RegistraLibroRemumeracion',
                      branch: 'feature/prueba_logs',
                      credentialsId: 'azure_credenciales_id'])
                  script {
                      def pom = readMavenPom file: 'pom.xml'
                      version = pom.version
                  }
                  sh "mvn -s configuration/settings.xml install -DskipTests=true"
                }
              }
              stage('Creando Image Builder') {
                when {
                  expression {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        return !openshift.selector("bc", "prox0001-registralibrore").exists();
                      }
                    }
                  }
                }
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.newBuild("--name=prox0001-registralibrore", "--image-stream=fuse7-java-openshift:1.3", "--binary=true")
                      }
                    }
                  }
                }
              }
              stage('Construyendo imagen') {
                steps {
                  sh "rm -rf oc-build && mkdir -p oc-build/deployments"
                  sh "cp target/PRX0001-RegistraLibroRemumeracion-1.0.jar oc-build/deployments/PRX0001-RegistraLibroRemumeracion.jar"

                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.selector("bc", "prox0001-registralibrore").startBuild("--from-dir=oc-build", "--wait=true")
                      }
                    }
                  }
                  sh "sleep 10"
                }
              }
              stage('Creando en QA') {
                when {
                  expression {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        return !openshift.selector('dc', 'prox0001-registralibrore').exists()
                      }
                    }
                  }
                }
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        def app = openshift.newApp("prox0001-registralibrore:latest")
                        app.narrow("svc").expose();
                        def dc = openshift.selector("dc", "prox0001-registralibrore")
                        while (dc.object().spec.replicas != dc.object().status.availableReplicas) {
                            sleep 10
                        }
                        openshift.set("triggers", "dc/prox0001-registralibrore", "--manual")
                      }
                      sh "sleep 15"
                    }
                  }
                }
              }
              stage('Desplegando en QA') {
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.selector("dc", "prox0001-registralibrore").rollout().latest();
                      }
                      sh "sleep 5"
                    }
                  }
                }
              }
            }
          }
      type: JenkinsPipeline
    triggeredBy:
    - message: Triggered by Jenkins job at http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prox0001-registralibrorem/
  status:
    completionTimestamp: "2023-10-16T14:37:21Z"
    conditions:
    - lastTransitionTime: "2023-10-16T14:34:32Z"
      lastUpdateTime: "2023-10-16T14:34:32Z"
      status: "False"
      type: New
    - lastTransitionTime: "2023-10-16T14:34:34Z"
      lastUpdateTime: "2023-10-16T14:34:34Z"
      status: "False"
      type: Pending
    - lastTransitionTime: "2023-10-16T14:37:21Z"
      lastUpdateTime: "2023-10-16T14:37:21Z"
      status: "False"
      type: Running
    - lastTransitionTime: "2023-10-16T14:37:21Z"
      lastUpdateTime: "2023-10-16T14:37:21Z"
      status: "True"
      type: Failed
    config:
      kind: BuildConfig
      name: prox0001-registralibrorem
      namespace: pipelines-qa
    output: {}
    phase: Failed
    startTimestamp: "2023-10-16T14:34:32Z"
- apiVersion: build.openshift.io/v1
  kind: Build
  metadata:
    annotations:
      openshift.io/jenkins-blueocean-log-url: /http://jenkins-cicd.api-cloud.dirtrab.cl/blue/organizations/jenkins/pipelines-qa%2Fpipelines-qa-prox0001-registralibrorem/detail/pipelines-qa-prox0001-registralibrorem/38/
      openshift.io/jenkins-build-uri: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prox0001-registralibrorem/38/
      openshift.io/jenkins-console-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prox0001-registralibrorem/38/console
      openshift.io/jenkins-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prox0001-registralibrorem/38/consoleText
      openshift.io/jenkins-status-json: '{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prox0001-registralibrorem/38/wfapi/describe"}},"id":"38","name":"#38","status":"FAILED","startTimeMillis":1697467285099,"endTimeMillis":1697467446264,"durationMillis":161165,"queueDurationMillis":4,"pauseDurationMillis":0,"stages":[{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prox0001-registralibrorem/38/execution/node/6/wfapi/describe"}},"id":"6","name":"Clonando
        repo y Compilando","execNode":"","status":"FAILED","error":{"message":"script
        returned exit code 1","type":"hudson.AbortException"},"startTimeMillis":1697467302074,"durationMillis":143739,"pauseDurationMillis":0}]}'
    creationTimestamp: "2023-10-16T14:41:25Z"
    generation: 1
    labels:
      app: cicd-pipeline
      buildconfig: prox0001-registralibrorem
      group: cicd
      migration.openshift.io/migrated-by-migmigration: 83812283-da61-428b-8d35-e15d91aa764d
      migration.openshift.io/migrated-by-migplan: 6b6402c2-9258-443b-83f4-8bb51f1d90f8
      name: cicd-pipeline
      openshift.io/build-config.name: prox0001-registralibrorem
      openshift.io/build.start-policy: Serial
      template: cicd
      velero.io/backup-name: migration-8d005-initial-6s92c
      velero.io/restore-name: migration-8d005-final-jj2bc
    name: prox0001-registralibrorem-2
    namespace: pipelines-qa
    ownerReferences:
    - apiVersion: build.openshift.io/v1
      controller: true
      kind: BuildConfig
      name: prox0001-registralibrorem
      uid: 4477d2d6-b29a-4a14-9b60-a4529d3b7d36
    resourceVersion: "136365340"
    uid: 8a90740c-a38d-4877-889c-0680fa4d1c35
  spec:
    nodeSelector: {}
    output: {}
    postCommit: {}
    resources: {}
    serviceAccount: builder
    source:
      type: None
    strategy:
      jenkinsPipelineStrategy:
        env:
        - name: QA_PROJECT
          value: api-fiscalizacion-qa
        - name: ENABLE_QUAY
          value: "false"
        jenkinsfile: |
          pipeline {
            agent {
              label 'maven'
            }
            stages {
              stage('Clonando repo y Compilando') {
                  steps {
                      git([url: 'https://dirtrab.visualstudio.com/Libro%20Remuneraciones%20Electronico/_git/PRX0001-RegistraLibroRemumeracion',
                      branch: 'feature/update_ws1_sii_202310',
                      credentialsId: 'azure_credenciales_id'])
                  script {
                      def pom = readMavenPom file: 'pom.xml'
                      version = pom.version
                  }
                  sh "mvn -s configuration/settings.xml install -DskipTests=true"
                }
              }
              stage('Creando Image Builder') {
                when {
                  expression {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        return !openshift.selector("bc", "prox0001-registralibrore").exists();
                      }
                    }
                  }
                }
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.newBuild("--name=prox0001-registralibrore", "--image-stream=fuse7-java-openshift:1.3", "--binary=true")
                      }
                    }
                  }
                }
              }
              stage('Construyendo imagen') {
                steps {
                  sh "rm -rf oc-build && mkdir -p oc-build/deployments"
                  sh "cp target/PRX0001-RegistraLibroRemumeracion-1.0.jar oc-build/deployments/PRX0001-RegistraLibroRemumeracion.jar"

                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.selector("bc", "prox0001-registralibrore").startBuild("--from-dir=oc-build", "--wait=true")
                      }
                    }
                  }
                  sh "sleep 10"
                }
              }
              stage('Creando en QA') {
                when {
                  expression {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        return !openshift.selector('dc', 'prox0001-registralibrore').exists()
                      }
                    }
                  }
                }
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        def app = openshift.newApp("prox0001-registralibrore:latest")
                        app.narrow("svc").expose();
                        def dc = openshift.selector("dc", "prox0001-registralibrore")
                        while (dc.object().spec.replicas != dc.object().status.availableReplicas) {
                            sleep 10
                        }
                        openshift.set("triggers", "dc/prox0001-registralibrore", "--manual")
                      }
                      sh "sleep 15"
                    }
                  }
                }
              }
              stage('Desplegando en QA') {
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.selector("dc", "prox0001-registralibrore").rollout().latest();
                      }
                      sh "sleep 5"
                    }
                  }
                }
              }
            }
          }
      type: JenkinsPipeline
    triggeredBy:
    - message: Triggered by Jenkins job at http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prox0001-registralibrorem/
  status:
    completionTimestamp: "2023-10-16T14:44:06Z"
    conditions:
    - lastTransitionTime: "2023-10-16T14:41:25Z"
      lastUpdateTime: "2023-10-16T14:41:25Z"
      status: "False"
      type: New
    - lastTransitionTime: "2023-10-16T14:41:29Z"
      lastUpdateTime: "2023-10-16T14:41:29Z"
      status: "False"
      type: Pending
    - lastTransitionTime: "2023-10-16T14:44:06Z"
      lastUpdateTime: "2023-10-16T14:44:06Z"
      status: "False"
      type: Running
    - lastTransitionTime: "2023-10-16T14:44:06Z"
      lastUpdateTime: "2023-10-16T14:44:06Z"
      status: "True"
      type: Failed
    config:
      kind: BuildConfig
      name: prox0001-registralibrorem
      namespace: pipelines-qa
    output: {}
    phase: Failed
    startTimestamp: "2023-10-16T14:41:25Z"
- apiVersion: build.openshift.io/v1
  kind: Build
  metadata:
    annotations:
      openshift.io/jenkins-blueocean-log-url: /http://jenkins-cicd.api-cloud.dirtrab.cl/blue/organizations/jenkins/pipelines-qa%2Fpipelines-qa-prx0002-validareglas/detail/pipelines-qa-prx0002-validareglas/32/
      openshift.io/jenkins-build-uri: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prx0002-validareglas/32/
      openshift.io/jenkins-console-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prx0002-validareglas/32/console
      openshift.io/jenkins-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prx0002-validareglas/32/consoleText
      openshift.io/jenkins-status-json: '{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prx0002-validareglas/32/wfapi/describe"}},"id":"32","name":"#32","status":"SUCCESS","startTimeMillis":1697481913339,"endTimeMillis":1697482179917,"durationMillis":266578,"queueDurationMillis":5,"pauseDurationMillis":0,"stages":[{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prx0002-validareglas/32/execution/node/6/wfapi/describe"}},"id":"6","name":"Clonando
        repo y Compilando","execNode":"","status":"SUCCESS","startTimeMillis":1697481922714,"durationMillis":171963,"pauseDurationMillis":0},{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prx0002-validareglas/32/execution/node/28/wfapi/describe"}},"id":"28","name":"Construyendo
        imagen","execNode":"","status":"SUCCESS","startTimeMillis":1697482097225,"durationMillis":49062,"pauseDurationMillis":0},{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prx0002-validareglas/32/execution/node/51/wfapi/describe"}},"id":"51","name":"Desplegando
        en QA","execNode":"","status":"SUCCESS","startTimeMillis":1697482146706,"durationMillis":33151,"pauseDurationMillis":0}]}'
    creationTimestamp: "2023-10-16T18:45:13Z"
    generation: 1
    labels:
      app: cicd-pipeline
      buildconfig: prx0002-validareglas
      group: cicd
      migration.openshift.io/migrated-by-migmigration: 83812283-da61-428b-8d35-e15d91aa764d
      migration.openshift.io/migrated-by-migplan: 6b6402c2-9258-443b-83f4-8bb51f1d90f8
      name: cicd-pipeline
      openshift.io/build-config.name: prx0002-validareglas
      openshift.io/build.start-policy: Serial
      template: cicd
      velero.io/backup-name: migration-8d005-initial-6s92c
      velero.io/restore-name: migration-8d005-final-jj2bc
    name: prx0002-validareglas-1
    namespace: pipelines-qa
    ownerReferences:
    - apiVersion: build.openshift.io/v1
      controller: true
      kind: BuildConfig
      name: prx0002-validareglas
      uid: 4477ce5e-7bc2-4d1e-940b-f02f359c646e
    resourceVersion: "136506520"
    uid: 4748d4e1-6a55-4a7d-892c-985aa415b415
  spec:
    nodeSelector: {}
    output: {}
    postCommit: {}
    resources: {}
    serviceAccount: builder
    source:
      type: None
    strategy:
      jenkinsPipelineStrategy:
        env:
        - name: QA_PROJECT
          value: api-fiscalizacion-qa
        - name: ENABLE_QUAY
          value: "false"
        jenkinsfile: |
          pipeline {
            agent {
              label 'maven'
            }
            stages {
              stage('Clonando repo y Compilando') {
                  steps {
                      git([url: 'https://dirtrab.visualstudio.com/Libro%20Remuneraciones%20Electronico/_git/PRX0002-ValidaReglasLRE',
                      branch: 'feature/desarrollo_2022',
                      credentialsId: 'vsts'])
                  script {
                      def pom = readMavenPom file: 'pom.xml'
                      version = pom.version
                  }
                  sh "mvn -s configuration/settings.xml install -DskipTests=true"
                }
              }
              stage('Creando Image Builder') {
                when {
                  expression {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        return !openshift.selector("bc", "prx0002-validareglas").exists();
                      }
                    }
                  }
                }
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.newBuild("--name=prx0002-validareglas", "--image-stream=fuse7-java-openshift:1.3", "--binary=true")
                      }
                    }
                  }
                }
              }
              stage('Construyendo imagen') {
                steps {
                  sh "rm -rf oc-build && mkdir -p oc-build/deployments"
                  sh "cp target/PRX0002-ValidaReglasLRE-1.0.jar oc-build/deployments/PRX0002-ValidaReglasLRE.jar"

                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.selector("bc", "prx0002-validareglas").startBuild("--from-dir=oc-build", "--wait=true")
                      }
                    }
                  }
                  sh "sleep 10"
                }
              }
              stage('Creando en QA') {
                when {
                  expression {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        return !openshift.selector('dc', 'prx0002-validareglas').exists()
                      }
                    }
                  }
                }
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        def app = openshift.newApp("prx0002-validareglas:latest")
                        app.narrow("svc").expose();
                        def dc = openshift.selector("dc", "prx0002-validareglas")
                        while (dc.object().spec.replicas != dc.object().status.availableReplicas) {
                            sleep 10
                        }
                        openshift.set("triggers", "dc/prx0002-validareglas", "--manual")
                      }
                      sh "sleep 40"
                    }
                  }
                }
              }
              stage('Desplegando en QA') {
                steps {
                sh "sleep 20"
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.selector("dc", "prx0002-validareglas").rollout().latest();
                      }
                      sh "sleep 10"
                    }
                  }
                }
              }
            }
          }
      type: JenkinsPipeline
    triggeredBy:
    - message: Triggered by Jenkins job at http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prx0002-validareglas/
  status:
    completionTimestamp: "2023-10-16T18:49:39Z"
    conditions:
    - lastTransitionTime: "2023-10-16T18:45:13Z"
      lastUpdateTime: "2023-10-16T18:45:13Z"
      status: "False"
      type: New
    - lastTransitionTime: "2023-10-16T18:45:14Z"
      lastUpdateTime: "2023-10-16T18:45:14Z"
      status: "False"
      type: Pending
    - lastTransitionTime: "2023-10-16T18:49:39Z"
      lastUpdateTime: "2023-10-16T18:49:39Z"
      status: "False"
      type: Running
    - lastTransitionTime: "2023-10-16T18:49:39Z"
      lastUpdateTime: "2023-10-16T18:49:39Z"
      status: "True"
      type: Complete
    config:
      kind: BuildConfig
      name: prx0002-validareglas
      namespace: pipelines-qa
    output: {}
    phase: Complete
    startTimestamp: "2023-10-16T18:45:13Z"
- apiVersion: build.openshift.io/v1
  kind: Build
  metadata:
    annotations:
      openshift.io/jenkins-blueocean-log-url: /http://jenkins-cicd.api-cloud.dirtrab.cl/blue/organizations/jenkins/pipelines-qa%2Fpipelines-qa-prx0003-datospersonas/detail/pipelines-qa-prx0003-datospersonas/17/
      openshift.io/jenkins-build-uri: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prx0003-datospersonas/17/
      openshift.io/jenkins-console-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prx0003-datospersonas/17/console
      openshift.io/jenkins-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prx0003-datospersonas/17/consoleText
      openshift.io/jenkins-status-json: '{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prx0003-datospersonas/17/wfapi/describe"}},"id":"17","name":"#17","status":"SUCCESS","startTimeMillis":1697484765880,"endTimeMillis":1697485060057,"durationMillis":294177,"queueDurationMillis":5,"pauseDurationMillis":0,"stages":[{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prx0003-datospersonas/17/execution/node/6/wfapi/describe"}},"id":"6","name":"Clonando
        repo y Compilando","execNode":"","status":"SUCCESS","startTimeMillis":1697484774780,"durationMillis":218970,"pauseDurationMillis":0},{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prx0003-datospersonas/17/execution/node/28/wfapi/describe"}},"id":"28","name":"Construyendo
        imagen","execNode":"","status":"SUCCESS","startTimeMillis":1697484995837,"durationMillis":47346,"pauseDurationMillis":0},{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prx0003-datospersonas/17/execution/node/51/wfapi/describe"}},"id":"51","name":"Desplegando
        en QA","execNode":"","status":"SUCCESS","startTimeMillis":1697485043587,"durationMillis":16407,"pauseDurationMillis":0}]}'
    creationTimestamp: "2023-10-16T19:32:45Z"
    generation: 1
    labels:
      app: cicd-pipeline
      buildconfig: prx0003-datospersonas
      group: cicd
      migration.openshift.io/migrated-by-migmigration: 83812283-da61-428b-8d35-e15d91aa764d
      migration.openshift.io/migrated-by-migplan: 6b6402c2-9258-443b-83f4-8bb51f1d90f8
      name: cicd-pipeline
      openshift.io/build-config.name: prx0003-datospersonas
      openshift.io/build.start-policy: Serial
      template: cicd
      velero.io/backup-name: migration-8d005-initial-6s92c
      velero.io/restore-name: migration-8d005-final-jj2bc
    name: prx0003-datospersonas-1
    namespace: pipelines-qa
    ownerReferences:
    - apiVersion: build.openshift.io/v1
      controller: true
      kind: BuildConfig
      name: prx0003-datospersonas
      uid: 0581ccfb-9db9-4bcb-8aff-ba8e189d3413
    resourceVersion: "136536204"
    uid: 2e4ef090-424b-4c5a-a032-a96091136e34
  spec:
    nodeSelector: {}
    output: {}
    postCommit: {}
    resources: {}
    serviceAccount: builder
    source:
      type: None
    strategy:
      jenkinsPipelineStrategy:
        env:
        - name: QA_PROJECT
          value: api-fiscalizacion-qa
        - name: ENABLE_QUAY
          value: "false"
        jenkinsfile: |
          pipeline {
            agent {
              label 'maven'
            }
            stages {
              stage('Clonando repo y Compilando') {
                  steps {
                      git([url: 'https://dirtrab.visualstudio.com/Libro%20Remuneraciones%20Electronico/_git/PRX0003-DatosPersona',
                      branch: 'develop',
                      credentialsId: 'azure_credenciales_id'])
                  script {
                      def pom = readMavenPom file: 'pom.xml'
                      version = pom.version
                  }
                  sh "mvn -s configuration/settings.xml install -DskipTests=true"
                }
              }
              stage('Creando Image Builder') {
                when {
                  expression {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        return !openshift.selector("bc", "prx0003-datosperson").exists();
                      }
                    }
                  }
                }
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.newBuild("--name=prx0003-datosperson", "--image-stream=fuse7-java-openshift:1.3", "--binary=true")
                      }
                    }
                  }
                }
              }
              stage('Construyendo imagen') {
                steps {
                  sh "rm -rf oc-build && mkdir -p oc-build/deployments"
                  sh "cp target/PRX0003-DatosPersona-1.0.jar oc-build/deployments/PRX0003-DatosPersona.jar"

                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.selector("bc", "prx0003-datosperson").startBuild("--from-dir=oc-build", "--wait=true")
                      }
                    }
                  }
                  sh "sleep 10"
                }
              }
              stage('Creando en QA') {
                when {
                  expression {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        return !openshift.selector('dc', 'prx0003-datosperson').exists()
                      }
                    }
                  }
                }
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        def app = openshift.newApp("prx0003-datosperson:latest")
                        app.narrow("svc").expose();
                        def dc = openshift.selector("dc", "prx0003-datosperson")
                        while (dc.object().spec.replicas != dc.object().status.availableReplicas) {
                            sleep 10
                        }
                        openshift.set("triggers", "dc/prx0003-datosperson", "--manual")
                      }
                      sh "sleep 40"
                    }
                  }
                }
              }
              stage('Desplegando en QA') {
                steps {
                sh "sleep 10"
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.selector("dc", "prx0003-datosperson").rollout().latest();
                      }
                      sh "sleep 5"
                    }
                  }
                }
              }
            }
          }
      type: JenkinsPipeline
    triggeredBy:
    - message: Triggered by Jenkins job at http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prx0003-datospersonas/
  status:
    completionTimestamp: "2023-10-16T19:37:40Z"
    conditions:
    - lastTransitionTime: "2023-10-16T19:32:45Z"
      lastUpdateTime: "2023-10-16T19:32:45Z"
      status: "False"
      type: New
    - lastTransitionTime: "2023-10-16T19:32:49Z"
      lastUpdateTime: "2023-10-16T19:32:49Z"
      status: "False"
      type: Pending
    - lastTransitionTime: "2023-10-16T19:37:40Z"
      lastUpdateTime: "2023-10-16T19:37:40Z"
      status: "False"
      type: Running
    - lastTransitionTime: "2023-10-16T19:37:40Z"
      lastUpdateTime: "2023-10-16T19:37:40Z"
      status: "True"
      type: Complete
    config:
      kind: BuildConfig
      name: prx0003-datospersonas
      namespace: pipelines-qa
    output: {}
    phase: Complete
    startTimestamp: "2023-10-16T19:32:45Z"
- apiVersion: build.openshift.io/v1
  kind: Build
  metadata:
    annotations:
      openshift.io/jenkins-blueocean-log-url: /http://jenkins-cicd.api-cloud.dirtrab.cl/blue/organizations/jenkins/pipelines-qa%2Fpipelines-qa-prx0003-datospersonas-datagrid/detail/pipelines-qa-prx0003-datospersonas-datagrid/5/
      openshift.io/jenkins-build-uri: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prx0003-datospersonas-datagrid/5/
      openshift.io/jenkins-console-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prx0003-datospersonas-datagrid/5/console
      openshift.io/jenkins-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prx0003-datospersonas-datagrid/5/consoleText
      openshift.io/jenkins-status-json: '{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prx0003-datospersonas-datagrid/5/wfapi/describe"}},"id":"5","name":"#5","status":"SUCCESS","startTimeMillis":1697484416889,"endTimeMillis":1697484754387,"durationMillis":337498,"queueDurationMillis":5,"pauseDurationMillis":0,"stages":[{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prx0003-datospersonas-datagrid/5/execution/node/6/wfapi/describe"}},"id":"6","name":"Clonando
        repo y Compilando","execNode":"","status":"SUCCESS","startTimeMillis":1697484426074,"durationMillis":258999,"pauseDurationMillis":0},{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prx0003-datospersonas-datagrid/5/execution/node/28/wfapi/describe"}},"id":"28","name":"Construyendo
        imagen","execNode":"","status":"SUCCESS","startTimeMillis":1697484687454,"durationMillis":50045,"pauseDurationMillis":0},{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prx0003-datospersonas-datagrid/5/execution/node/51/wfapi/describe"}},"id":"51","name":"Desplegando
        en QA","execNode":"","status":"SUCCESS","startTimeMillis":1697484737896,"durationMillis":16432,"pauseDurationMillis":0}]}'
    creationTimestamp: "2023-10-16T19:26:56Z"
    generation: 1
    labels:
      app: cicd-pipeline
      buildconfig: prx0003-datospersonas-datagrid
      group: cicd
      migration.openshift.io/migrated-by-migmigration: 83812283-da61-428b-8d35-e15d91aa764d
      migration.openshift.io/migrated-by-migplan: 6b6402c2-9258-443b-83f4-8bb51f1d90f8
      name: cicd-pipeline
      openshift.io/build-config.name: prx0003-datospersonas-datagrid
      openshift.io/build.start-policy: Serial
      template: cicd
      velero.io/backup-name: migration-8d005-initial-6s92c
      velero.io/restore-name: migration-8d005-final-jj2bc
    name: prx0003-datospersonas-datagrid-1
    namespace: pipelines-qa
    ownerReferences:
    - apiVersion: build.openshift.io/v1
      controller: true
      kind: BuildConfig
      name: prx0003-datospersonas-datagrid
      uid: e40cd01c-09e7-4d88-b192-072e30debd8b
    resourceVersion: "136532313"
    uid: 8ab64cee-5d47-499c-8b48-bd8c7bf76945
  spec:
    nodeSelector: {}
    output: {}
    postCommit: {}
    resources: {}
    serviceAccount: builder
    source:
      type: None
    strategy:
      jenkinsPipelineStrategy:
        env:
        - name: QA_PROJECT
          value: api-fiscalizacion-qa
        - name: ENABLE_QUAY
          value: "false"
        jenkinsfile: |
          pipeline {
            agent {
              label 'maven'
            }
            stages {
              stage('Clonando repo y Compilando') {
                  steps {
                      git([url: 'https://dirtrab.visualstudio.com/Libro%20Remuneraciones%20Electronico/_git/PRX0003-DatosPersona-Datagrid',
                      branch: 'develop',
                      credentialsId: 'azure_credenciales_id'])
                  script {
                      def pom = readMavenPom file: 'pom.xml'
                      version = pom.version
                  }
                  sh "mvn -s configuration/settings.xml install -DskipTests=true"
                }
              }
              stage('Creando Image Builder') {
                when {
                  expression {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        return !openshift.selector("bc", "prx0003-datospersona-datagrid").exists();
                      }
                    }
                  }
                }
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.newBuild("--name=prx0003-datospersona-datagrid", "--image-stream=fuse7-java-openshift:1.3", "--binary=true")
                      }
                    }
                  }
                }
              }
              stage('Construyendo imagen') {
                steps {
                  sh "rm -rf oc-build && mkdir -p oc-build/deployments"
                  sh "cp target/PRX0003-DatosPersona-Datagrid-1.0.jar oc-build/deployments/PRX0003-DatosPersona-Datagrid.jar"

                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.selector("bc", "prx0003-datospersona-datagrid").startBuild("--from-dir=oc-build", "--wait=true")
                      }
                    }
                  }
                  sh "sleep 10"
                }
              }
              stage('Creando en QA') {
                when {
                  expression {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        return !openshift.selector('dc', 'prx0003-datospersona-datagrid').exists()
                      }
                    }
                  }
                }
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        def app = openshift.newApp("prx0003-datospersona-datagrid:latest")
                        app.narrow("svc").expose();
                        def dc = openshift.selector("dc", "prx0003-datospersona-datagrid")
                        while (dc.object().spec.replicas != dc.object().status.availableReplicas) {
                            sleep 10
                        }
                        openshift.set("triggers", "dc/prx0003-datospersona-datagrid", "--manual")
                      }
                      sh "sleep 40"
                    }
                  }
                }
              }
              stage('Desplegando en QA') {
                steps {
                sh "sleep 10"
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.selector("dc", "prx0003-datospersona-datagrid").rollout().latest();
                      }
                      sh "sleep 5"
                    }
                  }
                }
              }
            }
          }
      type: JenkinsPipeline
    triggeredBy:
    - message: Triggered by Jenkins job at http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prx0003-datospersonas-datagrid/
  status:
    completionTimestamp: "2023-10-16T19:32:34Z"
    conditions:
    - lastTransitionTime: "2023-10-16T19:26:56Z"
      lastUpdateTime: "2023-10-16T19:26:56Z"
      status: "False"
      type: New
    - lastTransitionTime: "2023-10-16T19:26:59Z"
      lastUpdateTime: "2023-10-16T19:26:59Z"
      status: "False"
      type: Pending
    - lastTransitionTime: "2023-10-16T19:32:34Z"
      lastUpdateTime: "2023-10-16T19:32:34Z"
      status: "False"
      type: Running
    - lastTransitionTime: "2023-10-16T19:32:34Z"
      lastUpdateTime: "2023-10-16T19:32:34Z"
      status: "True"
      type: Complete
    config:
      kind: BuildConfig
      name: prx0003-datospersonas-datagrid
      namespace: pipelines-qa
    output: {}
    phase: Complete
    startTimestamp: "2023-10-16T19:26:56Z"
- apiVersion: build.openshift.io/v1
  kind: Build
  metadata:
    annotations:
      openshift.io/jenkins-blueocean-log-url: /http://jenkins-cicd.api-cloud.dirtrab.cl/blue/organizations/jenkins/pipelines-qa%2Fpipelines-qa-prx0004-enviarnotificacion/detail/pipelines-qa-prx0004-enviarnotificacion/5/
      openshift.io/jenkins-build-uri: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prx0004-enviarnotificacion/5/
      openshift.io/jenkins-console-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prx0004-enviarnotificacion/5/console
      openshift.io/jenkins-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prx0004-enviarnotificacion/5/consoleText
      openshift.io/jenkins-status-json: '{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prx0004-enviarnotificacion/5/wfapi/describe"}},"id":"5","name":"#5","status":"FAILED","startTimeMillis":1697485092194,"endTimeMillis":1697485276152,"durationMillis":183958,"queueDurationMillis":5,"pauseDurationMillis":0,"stages":[{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prx0004-enviarnotificacion/5/execution/node/6/wfapi/describe"}},"id":"6","name":"Clonando
        repo y Compilando","execNode":"","status":"SUCCESS","startTimeMillis":1697485101102,"durationMillis":171758,"pauseDurationMillis":0},{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prx0004-enviarnotificacion/5/execution/node/28/wfapi/describe"}},"id":"28","name":"Construyendo
        imagen","execNode":"","status":"FAILED","error":{"message":"script returned
        exit code 1","type":"hudson.AbortException"},"startTimeMillis":1697485275220,"durationMillis":695,"pauseDurationMillis":0}]}'
    creationTimestamp: "2023-10-16T19:38:12Z"
    generation: 1
    labels:
      app: cicd-pipeline
      buildconfig: prx0004-enviarnotificacion
      group: cicd
      migration.openshift.io/migrated-by-migmigration: 83812283-da61-428b-8d35-e15d91aa764d
      migration.openshift.io/migrated-by-migplan: 6b6402c2-9258-443b-83f4-8bb51f1d90f8
      name: cicd-pipeline
      openshift.io/build-config.name: prx0004-enviarnotificacion
      openshift.io/build.start-policy: Serial
      template: cicd
      velero.io/backup-name: migration-8d005-initial-6s92c
      velero.io/restore-name: migration-8d005-final-jj2bc
    name: prx0004-enviarnotificacion-1
    namespace: pipelines-qa
    ownerReferences:
    - apiVersion: build.openshift.io/v1
      controller: true
      kind: BuildConfig
      name: prx0004-enviarnotificacion
      uid: 1eaf0d58-73f8-460a-89d5-af1d1accd632
    resourceVersion: "136538285"
    uid: 52a9abce-821a-4cb7-ac05-6cae634bca62
  spec:
    nodeSelector: {}
    output: {}
    postCommit: {}
    resources: {}
    serviceAccount: builder
    source:
      type: None
    strategy:
      jenkinsPipelineStrategy:
        env:
        - name: QA_PROJECT
          value: api-fiscalizacion-qa
        - name: ENABLE_QUAY
          value: "false"
        jenkinsfile: |
          pipeline {
            agent {
              label 'maven'
            }
            stages {
              stage('Clonando repo y Compilando') {
                  steps {
                      git([url: 'https://dirtrab.visualstudio.com/Libro%20Remuneraciones%20Electronico/_git/PRX0002-ValidaReglasLRE',
                      branch: 'develop',
                      credentialsId: 'azure_credenciales_id'])
                  script {
                      def pom = readMavenPom file: 'pom.xml'
                      version = pom.version
                  }
                  sh "mvn -s configuration/settings.xml install -DskipTests=true"
                }
              }
              stage('Creando Image Builder') {
                when {
                  expression {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        return !openshift.selector("bc", "prx0004-enviarnotificaci").exists();
                      }
                    }
                  }
                }
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.newBuild("--name=prx0004-enviarnotificaci", "--image-stream=fuse7-java-openshift:1.3", "--binary=true")
                      }
                    }
                  }
                }
              }
              stage('Construyendo imagen') {
                steps {
                  sh "rm -rf oc-build && mkdir -p oc-build/deployments"
                  sh "cp target/PRX0004-EnviarNotificacion-1.0.0.jar oc-build/deployments/PRX0004-EnviarNotificacion.jar"

                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.selector("bc", "prx0004-enviarnotificaci").startBuild("--from-dir=oc-build", "--wait=true")
                      }
                    }
                  }
                  sh "sleep 10"
                }
              }
              stage('Creando en QA') {
                when {
                  expression {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        return !openshift.selector('dc', 'prx0004-enviarnotificaci').exists()
                      }
                    }
                  }
                }
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        def app = openshift.newApp("prx0004-enviarnotificaci:latest")
                        app.narrow("svc").expose();
                        def dc = openshift.selector("dc", "prx0004-enviarnotificaci")
                        while (dc.object().spec.replicas != dc.object().status.availableReplicas) {
                            sleep 10
                        }
                        openshift.set("triggers", "dc/prx0004-enviarnotificaci", "--manual")
                      }
                      sh "sleep 40"
                    }
                  }
                }
              }
              stage('Desplegando en QA') {
                steps {
                sh "sleep 10"
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.selector("dc", "prx0004-enviarnotificaci").rollout().latest();
                      }
                      sh "sleep 15"
                    }
                  }
                }
              }
            }
          }
      type: JenkinsPipeline
    triggeredBy:
    - message: Triggered by Jenkins job at http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prx0004-enviarnotificacion/
  status:
    completionTimestamp: "2023-10-16T19:41:16Z"
    conditions:
    - lastTransitionTime: "2023-10-16T19:38:12Z"
      lastUpdateTime: "2023-10-16T19:38:12Z"
      status: "False"
      type: New
    - lastTransitionTime: "2023-10-16T19:38:14Z"
      lastUpdateTime: "2023-10-16T19:38:14Z"
      status: "False"
      type: Pending
    - lastTransitionTime: "2023-10-16T19:41:16Z"
      lastUpdateTime: "2023-10-16T19:41:16Z"
      status: "False"
      type: Running
    - lastTransitionTime: "2023-10-16T19:41:16Z"
      lastUpdateTime: "2023-10-16T19:41:16Z"
      status: "True"
      type: Failed
    config:
      kind: BuildConfig
      name: prx0004-enviarnotificacion
      namespace: pipelines-qa
    output: {}
    phase: Failed
    startTimestamp: "2023-10-16T19:38:12Z"
- apiVersion: build.openshift.io/v1
  kind: Build
  metadata:
    annotations:
      openshift.io/jenkins-blueocean-log-url: /http://jenkins-cicd.api-cloud.dirtrab.cl/blue/organizations/jenkins/pipelines-qa%2Fpipelines-qa-prx0005-validartoken/detail/pipelines-qa-prx0005-validartoken/3/
      openshift.io/jenkins-build-uri: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prx0005-validartoken/3/
      openshift.io/jenkins-console-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prx0005-validartoken/3/console
      openshift.io/jenkins-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prx0005-validartoken/3/consoleText
      openshift.io/jenkins-status-json: '{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prx0005-validartoken/3/wfapi/describe"}},"id":"3","name":"#3","status":"FAILED","startTimeMillis":1697482210204,"endTimeMillis":1697482229795,"durationMillis":19591,"queueDurationMillis":7,"pauseDurationMillis":0,"stages":[{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prx0005-validartoken/3/execution/node/6/wfapi/describe"}},"id":"6","name":"Clonando
        repo y Compilando","execNode":"","status":"FAILED","error":{"message":"Error
        cloning remote repo ''origin''","type":"hudson.AbortException"},"startTimeMillis":1697482222055,"durationMillis":7278,"pauseDurationMillis":0}]}'
    creationTimestamp: "2023-10-16T18:50:10Z"
    generation: 1
    labels:
      app: cicd-pipeline
      buildconfig: prx0005-validartoken
      group: cicd
      migration.openshift.io/migrated-by-migmigration: 83812283-da61-428b-8d35-e15d91aa764d
      migration.openshift.io/migrated-by-migplan: 6b6402c2-9258-443b-83f4-8bb51f1d90f8
      name: cicd-pipeline
      openshift.io/build-config.name: prx0005-validartoken
      openshift.io/build.start-policy: Serial
      template: cicd
      velero.io/backup-name: migration-8d005-initial-6s92c
      velero.io/restore-name: migration-8d005-final-jj2bc
    name: prx0005-validartoken-1
    namespace: pipelines-qa
    ownerReferences:
    - apiVersion: build.openshift.io/v1
      controller: true
      kind: BuildConfig
      name: prx0005-validartoken
      uid: ef5f0efb-6d08-48e9-baec-efaa53267e8e
    resourceVersion: "136507000"
    uid: aacfdf29-7f83-456a-b95c-5ef11585f583
  spec:
    nodeSelector: {}
    output: {}
    postCommit: {}
    resources: {}
    serviceAccount: builder
    source:
      type: None
    strategy:
      jenkinsPipelineStrategy:
        env:
        - name: QA_PROJECT
          value: api-fiscalizacion-qa
        - name: ENABLE_QUAY
          value: "false"
        jenkinsfile: |
          pipeline {
            agent {
              label 'maven'
            }
            stages {
              stage('Clonando repo y Compilando') {
                  steps {
                      git([url: 'https://dirtrab@dev.azure.com/dirtrab/Libro%20Remuneraciones%20Electronico/_git/PRX0005-validarToken',
                      branch: 'develop',
                      credentialsId: 'azure_credenciales_id'])
                  script {
                      def pom = readMavenPom file: 'pom.xml'
                      version = pom.version
                  }
                  sh "mvn -s configuration/settings.xml install -DskipTests=true"
                }
              }
              stage('Creando Image Builder') {
                when {
                  expression {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        return !openshift.selector("bc", "prx0005-validartoken").exists();
                      }
                    }
                  }
                }
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.newBuild("--name=prx0005-validartoken", "--image-stream=fuse7-java-openshift:1.3", "--binary=true")
                      }
                    }
                  }
                }
              }
              stage('Construyendo imagen') {
                steps {
                  sh "rm -rf oc-build && mkdir -p oc-build/deployments"
                  sh "cp target/PRX0005-validarToken-1.0.jar oc-build/deployments/PRX0005-validarToken.jar"

                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.selector("bc", "prx0005-validartoken").startBuild("--from-dir=oc-build", "--wait=true")
                      }
                    }
                  }
                  sh "sleep 10"
                }
              }
              stage('Creando en QA') {
                when {
                  expression {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        return !openshift.selector('dc', 'prx0005-validartoken').exists()
                      }
                    }
                  }
                }
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        def app = openshift.newApp("prx0005-validartoken:latest")
                        app.narrow("svc").expose();
                        def dc = openshift.selector("dc", "prx0005-validartoken")
                        while (dc.object().spec.replicas != dc.object().status.availableReplicas) {
                            sleep 10
                        }
                        openshift.set("triggers", "dc/prx0005-validartoken", "--manual")
                      }
                      sh "sleep 40"
                    }
                  }
                }
              }
              stage('Desplegando en QA') {
                steps {
                sh "sleep 10"
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.selector("dc", "prx0005-validartoken").rollout().latest();
                      }
                      sh "sleep 15"
                    }
                  }
                }
              }
            }
          }
      type: JenkinsPipeline
    triggeredBy:
    - message: Triggered by Jenkins job at http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prx0005-validartoken/
  status:
    completionTimestamp: "2023-10-16T18:50:29Z"
    conditions:
    - lastTransitionTime: "2023-10-16T18:50:10Z"
      lastUpdateTime: "2023-10-16T18:50:10Z"
      status: "False"
      type: New
    - lastTransitionTime: "2023-10-16T18:50:14Z"
      lastUpdateTime: "2023-10-16T18:50:14Z"
      status: "False"
      type: Pending
    - lastTransitionTime: "2023-10-16T18:50:29Z"
      lastUpdateTime: "2023-10-16T18:50:29Z"
      status: "False"
      type: Running
    - lastTransitionTime: "2023-10-16T18:50:29Z"
      lastUpdateTime: "2023-10-16T18:50:29Z"
      status: "True"
      type: Failed
    config:
      kind: BuildConfig
      name: prx0005-validartoken
      namespace: pipelines-qa
    output: {}
    phase: Failed
    startTimestamp: "2023-10-16T18:50:10Z"
- apiVersion: build.openshift.io/v1
  kind: Build
  metadata:
    annotations:
      openshift.io/jenkins-blueocean-log-url: /http://jenkins-cicd.api-cloud.dirtrab.cl/blue/organizations/jenkins/pipelines-qa%2Fpipelines-qa-prx0005-validartoken/detail/pipelines-qa-prx0005-validartoken/4/
      openshift.io/jenkins-build-uri: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prx0005-validartoken/4/
      openshift.io/jenkins-console-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prx0005-validartoken/4/console
      openshift.io/jenkins-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prx0005-validartoken/4/consoleText
      openshift.io/jenkins-status-json: '{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prx0005-validartoken/4/wfapi/describe"}},"id":"4","name":"#4","status":"FAILED","startTimeMillis":1697482302546,"endTimeMillis":1697482319795,"durationMillis":17249,"queueDurationMillis":5,"pauseDurationMillis":0,"stages":[{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prx0005-validartoken/4/execution/node/6/wfapi/describe"}},"id":"6","name":"Clonando
        repo y Compilando","execNode":"","status":"FAILED","error":{"message":"Error
        cloning remote repo ''origin''","type":"hudson.AbortException"},"startTimeMillis":1697482311667,"durationMillis":7681,"pauseDurationMillis":0}]}'
    creationTimestamp: "2023-10-16T18:51:42Z"
    generation: 1
    labels:
      app: cicd-pipeline
      buildconfig: prx0005-validartoken
      group: cicd
      migration.openshift.io/migrated-by-migmigration: 83812283-da61-428b-8d35-e15d91aa764d
      migration.openshift.io/migrated-by-migplan: 6b6402c2-9258-443b-83f4-8bb51f1d90f8
      name: cicd-pipeline
      openshift.io/build-config.name: prx0005-validartoken
      openshift.io/build.start-policy: Serial
      template: cicd
      velero.io/backup-name: migration-8d005-initial-6s92c
      velero.io/restore-name: migration-8d005-final-jj2bc
    name: prx0005-validartoken-2
    namespace: pipelines-qa
    ownerReferences:
    - apiVersion: build.openshift.io/v1
      controller: true
      kind: BuildConfig
      name: prx0005-validartoken
      uid: ef5f0efb-6d08-48e9-baec-efaa53267e8e
    resourceVersion: "136507842"
    uid: 6c34a1e4-1c87-4803-820e-a4d7b4b49863
  spec:
    nodeSelector: {}
    output: {}
    postCommit: {}
    resources: {}
    serviceAccount: builder
    source:
      type: None
    strategy:
      jenkinsPipelineStrategy:
        env:
        - name: QA_PROJECT
          value: api-fiscalizacion-qa
        - name: ENABLE_QUAY
          value: "false"
        jenkinsfile: |
          pipeline {
            agent {
              label 'maven'
            }
            stages {
              stage('Clonando repo y Compilando') {
                  steps {
                      git([url: 'https://dirtrab@dev.azure.com/dirtrab/Libro%20Remuneraciones%20Electronico/_git/PRX0005-validarToken',
                      branch: 'develop',
                      credentialsId: 'vsts'])
                  script {
                      def pom = readMavenPom file: 'pom.xml'
                      version = pom.version
                  }
                  sh "mvn -s configuration/settings.xml install -DskipTests=true"
                }
              }
              stage('Creando Image Builder') {
                when {
                  expression {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        return !openshift.selector("bc", "prx0005-validartoken").exists();
                      }
                    }
                  }
                }
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.newBuild("--name=prx0005-validartoken", "--image-stream=fuse7-java-openshift:1.3", "--binary=true")
                      }
                    }
                  }
                }
              }
              stage('Construyendo imagen') {
                steps {
                  sh "rm -rf oc-build && mkdir -p oc-build/deployments"
                  sh "cp target/PRX0005-validarToken-1.0.jar oc-build/deployments/PRX0005-validarToken.jar"

                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.selector("bc", "prx0005-validartoken").startBuild("--from-dir=oc-build", "--wait=true")
                      }
                    }
                  }
                  sh "sleep 10"
                }
              }
              stage('Creando en QA') {
                when {
                  expression {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        return !openshift.selector('dc', 'prx0005-validartoken').exists()
                      }
                    }
                  }
                }
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        def app = openshift.newApp("prx0005-validartoken:latest")
                        app.narrow("svc").expose();
                        def dc = openshift.selector("dc", "prx0005-validartoken")
                        while (dc.object().spec.replicas != dc.object().status.availableReplicas) {
                            sleep 10
                        }
                        openshift.set("triggers", "dc/prx0005-validartoken", "--manual")
                      }
                      sh "sleep 40"
                    }
                  }
                }
              }
              stage('Desplegando en QA') {
                steps {
                sh "sleep 10"
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.selector("dc", "prx0005-validartoken").rollout().latest();
                      }
                      sh "sleep 15"
                    }
                  }
                }
              }
            }
          }
      type: JenkinsPipeline
    triggeredBy:
    - message: Triggered by Jenkins job at http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prx0005-validartoken/
  status:
    completionTimestamp: "2023-10-16T18:51:59Z"
    conditions:
    - lastTransitionTime: "2023-10-16T18:51:42Z"
      lastUpdateTime: "2023-10-16T18:51:42Z"
      status: "False"
      type: New
    - lastTransitionTime: "2023-10-16T18:51:44Z"
      lastUpdateTime: "2023-10-16T18:51:44Z"
      status: "False"
      type: Pending
    - lastTransitionTime: "2023-10-16T18:51:59Z"
      lastUpdateTime: "2023-10-16T18:51:59Z"
      status: "False"
      type: Running
    - lastTransitionTime: "2023-10-16T18:51:59Z"
      lastUpdateTime: "2023-10-16T18:51:59Z"
      status: "True"
      type: Failed
    config:
      kind: BuildConfig
      name: prx0005-validartoken
      namespace: pipelines-qa
    output: {}
    phase: Failed
    startTimestamp: "2023-10-16T18:51:42Z"
- apiVersion: build.openshift.io/v1
  kind: Build
  metadata:
    annotations:
      openshift.io/jenkins-blueocean-log-url: /http://jenkins-cicd.api-cloud.dirtrab.cl/blue/organizations/jenkins/pipelines-qa%2Fpipelines-qa-prx0005-validartoken/detail/pipelines-qa-prx0005-validartoken/5/
      openshift.io/jenkins-build-uri: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prx0005-validartoken/5/
      openshift.io/jenkins-console-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prx0005-validartoken/5/console
      openshift.io/jenkins-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prx0005-validartoken/5/consoleText
      openshift.io/jenkins-status-json: '{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prx0005-validartoken/5/wfapi/describe"}},"id":"5","name":"#5","status":"FAILED","startTimeMillis":1697550408237,"endTimeMillis":1697550446961,"durationMillis":38724,"queueDurationMillis":7,"pauseDurationMillis":0,"stages":[{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prx0005-validartoken/5/execution/node/6/wfapi/describe"}},"id":"6","name":"Clonando
        repo y Compilando","execNode":"","status":"FAILED","error":{"message":"Error
        cloning remote repo ''origin''","type":"hudson.AbortException"},"startTimeMillis":1697550440737,"durationMillis":5781,"pauseDurationMillis":0}]}'
    creationTimestamp: "2023-10-17T13:46:48Z"
    generation: 1
    labels:
      app: cicd-pipeline
      buildconfig: prx0005-validartoken
      group: cicd
      migration.openshift.io/migrated-by-migmigration: 83812283-da61-428b-8d35-e15d91aa764d
      migration.openshift.io/migrated-by-migplan: 6b6402c2-9258-443b-83f4-8bb51f1d90f8
      name: cicd-pipeline
      openshift.io/build-config.name: prx0005-validartoken
      openshift.io/build.start-policy: Serial
      template: cicd
      velero.io/backup-name: migration-8d005-initial-6s92c
      velero.io/restore-name: migration-8d005-final-jj2bc
    name: prx0005-validartoken-3
    namespace: pipelines-qa
    ownerReferences:
    - apiVersion: build.openshift.io/v1
      controller: true
      kind: BuildConfig
      name: prx0005-validartoken
      uid: ef5f0efb-6d08-48e9-baec-efaa53267e8e
    resourceVersion: "137174060"
    uid: 4c993ec2-beab-491b-870f-65f21e6b08a9
  spec:
    nodeSelector: {}
    output: {}
    postCommit: {}
    resources: {}
    serviceAccount: builder
    source:
      type: None
    strategy:
      jenkinsPipelineStrategy:
        env:
        - name: QA_PROJECT
          value: api-fiscalizacion-qa
        - name: ENABLE_QUAY
          value: "false"
        jenkinsfile: |
          pipeline {
            agent {
              label 'maven'
            }
            stages {
              stage('Clonando repo y Compilando') {
                  steps {
                      git([url: 'https://dirtrab@dev.azure.com/dirtrab/Libro%20Remuneraciones%20Electronico/_git/PRX0005-validarToken',
                      branch: 'develop',
                      credentialsId: 'azure_credenciales_id_2'])
                  script {
                      def pom = readMavenPom file: 'pom.xml'
                      version = pom.version
                  }
                  sh "mvn -s configuration/settings.xml install -DskipTests=true"
                }
              }
              stage('Creando Image Builder') {
                when {
                  expression {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        return !openshift.selector("bc", "prx0005-validartoken").exists();
                      }
                    }
                  }
                }
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.newBuild("--name=prx0005-validartoken", "--image-stream=fuse7-java-openshift:1.3", "--binary=true")
                      }
                    }
                  }
                }
              }
              stage('Construyendo imagen') {
                steps {
                  sh "rm -rf oc-build && mkdir -p oc-build/deployments"
                  sh "cp target/PRX0005-validarToken-1.0.jar oc-build/deployments/PRX0005-validarToken.jar"

                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.selector("bc", "prx0005-validartoken").startBuild("--from-dir=oc-build", "--wait=true")
                      }
                    }
                  }
                  sh "sleep 10"
                }
              }
              stage('Creando en QA') {
                when {
                  expression {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        return !openshift.selector('dc', 'prx0005-validartoken').exists()
                      }
                    }
                  }
                }
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        def app = openshift.newApp("prx0005-validartoken:latest")
                        app.narrow("svc").expose();
                        def dc = openshift.selector("dc", "prx0005-validartoken")
                        while (dc.object().spec.replicas != dc.object().status.availableReplicas) {
                            sleep 10
                        }
                        openshift.set("triggers", "dc/prx0005-validartoken", "--manual")
                      }
                      sh "sleep 40"
                    }
                  }
                }
              }
              stage('Desplegando en QA') {
                steps {
                sh "sleep 10"
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.selector("dc", "prx0005-validartoken").rollout().latest();
                      }
                      sh "sleep 15"
                    }
                  }
                }
              }
            }
          }
      type: JenkinsPipeline
    triggeredBy:
    - message: Triggered by Jenkins job at http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prx0005-validartoken/
  status:
    completionTimestamp: "2023-10-17T13:47:26Z"
    conditions:
    - lastTransitionTime: "2023-10-17T13:46:48Z"
      lastUpdateTime: "2023-10-17T13:46:48Z"
      status: "False"
      type: New
    - lastTransitionTime: "2023-10-17T13:46:49Z"
      lastUpdateTime: "2023-10-17T13:46:49Z"
      status: "False"
      type: Pending
    - lastTransitionTime: "2023-10-17T13:47:26Z"
      lastUpdateTime: "2023-10-17T13:47:26Z"
      status: "False"
      type: Running
    - lastTransitionTime: "2023-10-17T13:47:26Z"
      lastUpdateTime: "2023-10-17T13:47:26Z"
      status: "True"
      type: Failed
    config:
      kind: BuildConfig
      name: prx0005-validartoken
      namespace: pipelines-qa
    output: {}
    phase: Failed
    startTimestamp: "2023-10-17T13:46:48Z"
- apiVersion: build.openshift.io/v1
  kind: Build
  metadata:
    annotations:
      openshift.io/jenkins-blueocean-log-url: /http://jenkins-cicd.api-cloud.dirtrab.cl/blue/organizations/jenkins/pipelines-qa%2Fpipelines-qa-prx0005-validartoken/detail/pipelines-qa-prx0005-validartoken/6/
      openshift.io/jenkins-build-uri: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prx0005-validartoken/6/
      openshift.io/jenkins-console-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prx0005-validartoken/6/console
      openshift.io/jenkins-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prx0005-validartoken/6/consoleText
      openshift.io/jenkins-status-json: '{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prx0005-validartoken/6/wfapi/describe"}},"id":"6","name":"#6","status":"SUCCESS","startTimeMillis":1697550685191,"endTimeMillis":1697550949810,"durationMillis":264619,"queueDurationMillis":9,"pauseDurationMillis":0,"stages":[{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prx0005-validartoken/6/execution/node/6/wfapi/describe"}},"id":"6","name":"Clonando
        repo y Compilando","execNode":"","status":"SUCCESS","startTimeMillis":1697550700968,"durationMillis":170778,"pauseDurationMillis":0},{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prx0005-validartoken/6/execution/node/28/wfapi/describe"}},"id":"28","name":"Construyendo
        imagen","execNode":"","status":"SUCCESS","startTimeMillis":1697550874060,"durationMillis":49328,"pauseDurationMillis":0},{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prx0005-validartoken/6/execution/node/51/wfapi/describe"}},"id":"51","name":"Desplegando
        en QA","execNode":"","status":"SUCCESS","startTimeMillis":1697550923800,"durationMillis":25953,"pauseDurationMillis":0}]}'
    creationTimestamp: "2023-10-17T13:51:25Z"
    generation: 1
    labels:
      app: cicd-pipeline
      buildconfig: prx0005-validartoken
      group: cicd
      migration.openshift.io/migrated-by-migmigration: 83812283-da61-428b-8d35-e15d91aa764d
      migration.openshift.io/migrated-by-migplan: 6b6402c2-9258-443b-83f4-8bb51f1d90f8
      name: cicd-pipeline
      openshift.io/build-config.name: prx0005-validartoken
      openshift.io/build.start-policy: Serial
      template: cicd
      velero.io/backup-name: migration-8d005-initial-6s92c
      velero.io/restore-name: migration-8d005-final-jj2bc
    name: prx0005-validartoken-4
    namespace: pipelines-qa
    ownerReferences:
    - apiVersion: build.openshift.io/v1
      controller: true
      kind: BuildConfig
      name: prx0005-validartoken
      uid: ef5f0efb-6d08-48e9-baec-efaa53267e8e
    resourceVersion: "137178994"
    uid: 815b7437-ee79-47b4-9cac-3c66e2832df2
  spec:
    nodeSelector: {}
    output: {}
    postCommit: {}
    resources: {}
    serviceAccount: builder
    source:
      type: None
    strategy:
      jenkinsPipelineStrategy:
        env:
        - name: QA_PROJECT
          value: api-fiscalizacion-qa
        - name: ENABLE_QUAY
          value: "false"
        jenkinsfile: |
          pipeline {
            agent {
              label 'maven'
            }
            stages {
              stage('Clonando repo y Compilando') {
                  steps {
                      git([url: 'https://dirtrab@dev.azure.com/dirtrab/Libro%20Remuneraciones%20Electronico/_git/PRX0005-validarToken',
                      branch: 'develop',
                      credentialsId: '27ef6ef6-5f08-4d8a-88a5-9aef52f2105d'])
                  script {
                      def pom = readMavenPom file: 'pom.xml'
                      version = pom.version
                  }
                  sh "mvn -s configuration/settings.xml install -DskipTests=true"
                }
              }
              stage('Creando Image Builder') {
                when {
                  expression {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        return !openshift.selector("bc", "prx0005-validartoken").exists();
                      }
                    }
                  }
                }
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.newBuild("--name=prx0005-validartoken", "--image-stream=fuse7-java-openshift:1.3", "--binary=true")
                      }
                    }
                  }
                }
              }
              stage('Construyendo imagen') {
                steps {
                  sh "rm -rf oc-build && mkdir -p oc-build/deployments"
                  sh "cp target/PRX0005-validarToken-1.0.jar oc-build/deployments/PRX0005-validarToken.jar"

                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.selector("bc", "prx0005-validartoken").startBuild("--from-dir=oc-build", "--wait=true")
                      }
                    }
                  }
                  sh "sleep 10"
                }
              }
              stage('Creando en QA') {
                when {
                  expression {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        return !openshift.selector('dc', 'prx0005-validartoken').exists()
                      }
                    }
                  }
                }
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        def app = openshift.newApp("prx0005-validartoken:latest")
                        app.narrow("svc").expose();
                        def dc = openshift.selector("dc", "prx0005-validartoken")
                        while (dc.object().spec.replicas != dc.object().status.availableReplicas) {
                            sleep 10
                        }
                        openshift.set("triggers", "dc/prx0005-validartoken", "--manual")
                      }
                      sh "sleep 40"
                    }
                  }
                }
              }
              stage('Desplegando en QA') {
                steps {
                sh "sleep 10"
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.selector("dc", "prx0005-validartoken").rollout().latest();
                      }
                      sh "sleep 15"
                    }
                  }
                }
              }
            }
          }
      type: JenkinsPipeline
    triggeredBy:
    - message: Triggered by Jenkins job at http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-prx0005-validartoken/
  status:
    completionTimestamp: "2023-10-17T13:55:49Z"
    conditions:
    - lastTransitionTime: "2023-10-17T13:51:25Z"
      lastUpdateTime: "2023-10-17T13:51:25Z"
      status: "False"
      type: New
    - lastTransitionTime: "2023-10-17T13:51:29Z"
      lastUpdateTime: "2023-10-17T13:51:29Z"
      status: "False"
      type: Pending
    - lastTransitionTime: "2023-10-17T13:55:49Z"
      lastUpdateTime: "2023-10-17T13:55:49Z"
      status: "False"
      type: Running
    - lastTransitionTime: "2023-10-17T13:55:49Z"
      lastUpdateTime: "2023-10-17T13:55:49Z"
      status: "True"
      type: Complete
    config:
      kind: BuildConfig
      name: prx0005-validartoken
      namespace: pipelines-qa
    output: {}
    phase: Complete
    startTimestamp: "2023-10-17T13:51:25Z"
- apiVersion: build.openshift.io/v1
  kind: Build
  metadata:
    annotations:
      openshift.io/jenkins-blueocean-log-url: /http://jenkins-cicd.api-cloud.dirtrab.cl/blue/organizations/jenkins/pipelines-qa%2Fpipelines-qa-srv0001-declaracioneslibroremuneraciones/detail/pipelines-qa-srv0001-declaracioneslibroremuneraciones/104/
      openshift.io/jenkins-build-uri: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0001-declaracioneslibroremuneraciones/104/
      openshift.io/jenkins-console-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0001-declaracioneslibroremuneraciones/104/console
      openshift.io/jenkins-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0001-declaracioneslibroremuneraciones/104/consoleText
      openshift.io/jenkins-status-json: '{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0001-declaracioneslibroremuneraciones/104/wfapi/describe"}},"id":"104","name":"#104","status":"SUCCESS","startTimeMillis":1697481636480,"endTimeMillis":1697481894619,"durationMillis":258139,"queueDurationMillis":4,"pauseDurationMillis":0,"stages":[{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0001-declaracioneslibroremuneraciones/104/execution/node/6/wfapi/describe"}},"id":"6","name":"Clonando
        repo y Compilando","execNode":"","status":"SUCCESS","startTimeMillis":1697481644541,"durationMillis":166195,"pauseDurationMillis":0},{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0001-declaracioneslibroremuneraciones/104/execution/node/28/wfapi/describe"}},"id":"28","name":"Construyendo
        imagen","execNode":"","status":"SUCCESS","startTimeMillis":1697481812979,"durationMillis":55162,"pauseDurationMillis":0},{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0001-declaracioneslibroremuneraciones/104/execution/node/51/wfapi/describe"}},"id":"51","name":"Desplegando
        en QA","execNode":"","status":"SUCCESS","startTimeMillis":1697481868508,"durationMillis":26051,"pauseDurationMillis":0}]}'
    creationTimestamp: "2023-10-16T18:40:36Z"
    generation: 1
    labels:
      app: cicd-pipeline
      buildconfig: srv0001-declaracioneslibroremuneraciones
      group: cicd
      migration.openshift.io/migrated-by-migmigration: 83812283-da61-428b-8d35-e15d91aa764d
      migration.openshift.io/migrated-by-migplan: 6b6402c2-9258-443b-83f4-8bb51f1d90f8
      name: cicd-pipeline
      openshift.io/build-config.name: srv0001-declaracioneslibroremuneraciones
      openshift.io/build.start-policy: Serial
      template: cicd
      velero.io/backup-name: migration-8d005-initial-6s92c
      velero.io/restore-name: migration-8d005-final-jj2bc
    name: srv0001-declaracioneslibroremuneraciones-1
    namespace: pipelines-qa
    ownerReferences:
    - apiVersion: build.openshift.io/v1
      controller: true
      kind: BuildConfig
      name: srv0001-declaracioneslibroremuneraciones
      uid: c76573a6-d9ec-4be1-9763-710ab0921a8a
    resourceVersion: "136503533"
    uid: d000f48b-d6be-4d4b-b216-92e26a1345c8
  spec:
    nodeSelector: {}
    output: {}
    postCommit: {}
    resources: {}
    serviceAccount: builder
    source:
      type: None
    strategy:
      jenkinsPipelineStrategy:
        env:
        - name: QA_PROJECT
          value: api-fiscalizacion-qa
        - name: ENABLE_QUAY
          value: "false"
        jenkinsfile: |
          pipeline {
            agent {
              label 'maven'
            }
            stages {
              stage('Clonando repo y Compilando') {
                  steps {
                      git([url: 'https://dirtrab.visualstudio.com/Libro%20Remuneraciones%20Electronico/_git/SRV0001-DeclaracionLibroRemuneraciones',
                      branch: 'feature/sin_movimiento',
                      credentialsId: 'vsts'])
                  script {
                      def pom = readMavenPom file: 'pom.xml'
                      version = pom.version
                  }
                  sh "mvn -s configuration/settings.xml install -DskipTests=true"
                }
              }
              stage('Creando Image Builder') {
                when {
                  expression {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        return !openshift.selector("bc", "srv0001-v2").exists();
                      }
                    }
                  }
                }
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.newBuild("--name=srv0001-v2", "--image-stream=redhat-openjdk18-openshift:1.4", "--binary=true")
                      }
                    }
                  }
                }
              }
              stage('Construyendo imagen') {
                steps {
                  sh "rm -rf oc-build && mkdir -p oc-build/deployments"
                  sh "cp target/SRV0001-DeclaracionesLibroRemuneraciones-2.0.jar oc-build/deployments/SRV0001-DeclaracionesLibroRemuneraciones.jar"

                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.selector("bc", "srv0001-v2").startBuild("--from-dir=oc-build", "--wait=true")
                      }
                    }
                  }
                  sh "sleep 10"
                }
              }
              stage('Creando en QA') {
                when {
                  expression {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        return !openshift.selector('dc', 'srv0001-v2').exists()
                      }
                    }
                  }
                }
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        def app = openshift.newApp("srv0001-v2:latest")
                        app.narrow("svc").expose();
                        def dc = openshift.selector("dc", "srv0001-v2")
                        while (dc.object().spec.replicas != dc.object().status.availableReplicas) {
                            sleep 10
                        }
                        openshift.set("triggers", "dc/srv0001-v2", "--manual")
                      }
                      sh "sleep 40"
                    }
                  }
                }
              }
              stage('Desplegando en QA') {
                steps {
                sh "sleep 10"
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.selector("dc", "srv0001-v2").rollout().latest();
                      }
                      sh "sleep 15"
                    }
                  }
                }
              }
            }
          }
      type: JenkinsPipeline
    triggeredBy:
    - message: Triggered by Jenkins job at http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0001-declaracioneslibroremuneraciones/
  status:
    completionTimestamp: "2023-10-16T18:44:54Z"
    conditions:
    - lastTransitionTime: "2023-10-16T18:40:36Z"
      lastUpdateTime: "2023-10-16T18:40:36Z"
      status: "False"
      type: New
    - lastTransitionTime: "2023-10-16T18:40:39Z"
      lastUpdateTime: "2023-10-16T18:40:39Z"
      status: "False"
      type: Pending
    - lastTransitionTime: "2023-10-16T18:44:54Z"
      lastUpdateTime: "2023-10-16T18:44:54Z"
      status: "False"
      type: Running
    - lastTransitionTime: "2023-10-16T18:44:54Z"
      lastUpdateTime: "2023-10-16T18:44:54Z"
      status: "True"
      type: Complete
    config:
      kind: BuildConfig
      name: srv0001-declaracioneslibroremuneraciones
      namespace: pipelines-qa
    output: {}
    phase: Complete
    startTimestamp: "2023-10-16T18:40:36Z"
- apiVersion: build.openshift.io/v1
  kind: Build
  metadata:
    annotations:
      openshift.io/jenkins-blueocean-log-url: /http://jenkins-cicd.api-cloud.dirtrab.cl/blue/organizations/jenkins/pipelines-qa%2Fpipelines-qa-srv0002-obtenerdeclaracioneslre/detail/pipelines-qa-srv0002-obtenerdeclaracioneslre/32/
      openshift.io/jenkins-build-uri: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0002-obtenerdeclaracioneslre/32/
      openshift.io/jenkins-console-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0002-obtenerdeclaracioneslre/32/console
      openshift.io/jenkins-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0002-obtenerdeclaracioneslre/32/consoleText
      openshift.io/jenkins-status-json: '{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0002-obtenerdeclaracioneslre/32/wfapi/describe"}},"id":"32","name":"#32","status":"SUCCESS","startTimeMillis":1697482360838,"endTimeMillis":1697482602224,"durationMillis":241386,"queueDurationMillis":4,"pauseDurationMillis":0,"stages":[{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0002-obtenerdeclaracioneslre/32/execution/node/6/wfapi/describe"}},"id":"6","name":"Clonando
        repo y Compilando","execNode":"","status":"SUCCESS","startTimeMillis":1697482372812,"durationMillis":156399,"pauseDurationMillis":0},{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0002-obtenerdeclaracioneslre/32/execution/node/28/wfapi/describe"}},"id":"28","name":"Construyendo
        imagen","execNode":"","status":"SUCCESS","startTimeMillis":1697482531467,"durationMillis":53861,"pauseDurationMillis":0},{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0002-obtenerdeclaracioneslre/32/execution/node/51/wfapi/describe"}},"id":"51","name":"Desplegando
        en QA","execNode":"","status":"SUCCESS","startTimeMillis":1697482585732,"durationMillis":16431,"pauseDurationMillis":0}]}'
    creationTimestamp: "2023-10-16T18:52:40Z"
    generation: 1
    labels:
      app: cicd-pipeline
      buildconfig: srv0002-obtenerdeclaracioneslre
      group: cicd
      migration.openshift.io/migrated-by-migmigration: 83812283-da61-428b-8d35-e15d91aa764d
      migration.openshift.io/migrated-by-migplan: 6b6402c2-9258-443b-83f4-8bb51f1d90f8
      name: cicd-pipeline
      openshift.io/build-config.name: srv0002-obtenerdeclaracioneslre
      openshift.io/build.start-policy: Serial
      template: cicd
      velero.io/backup-name: migration-8d005-initial-6s92c
      velero.io/restore-name: migration-8d005-final-jj2bc
    name: srv0002-obtenerdeclaracioneslre-1
    namespace: pipelines-qa
    ownerReferences:
    - apiVersion: build.openshift.io/v1
      controller: true
      kind: BuildConfig
      name: srv0002-obtenerdeclaracioneslre
      uid: 4ed0fb7a-b16b-4761-bf98-14f875f6c66f
    resourceVersion: "136510621"
    uid: c4c9e56d-b326-4020-afe5-d39d97e6f738
  spec:
    nodeSelector: {}
    output: {}
    postCommit: {}
    resources: {}
    serviceAccount: builder
    source:
      type: None
    strategy:
      jenkinsPipelineStrategy:
        env:
        - name: QA_PROJECT
          value: api-fiscalizacion-qa
        - name: ENABLE_QUAY
          value: "false"
        jenkinsfile: |
          pipeline {
            agent {
              label 'maven'
            }
            stages {
              stage('Clonando repo y Compilando') {
                  steps {
                      git([url: 'https://dirtrab.visualstudio.com/Libro%20Remuneraciones%20Electronico/_git/SRV0002-ObtenerDeclaracionesLRE',
                      branch: 'feature/desarrollo_2022',
                      credentialsId: 'vsts'])
                  script {
                      def pom = readMavenPom file: 'pom.xml'
                      version = pom.version
                  }
                  sh "mvn -s configuration/settings.xml install -DskipTests=true"
                }
              }
              stage('Creando Image Builder') {
                when {
                  expression {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        return !openshift.selector("bc", "srv0002").exists();
                      }
                    }
                  }
                }
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.newBuild("--name=srv0002", "--image-stream=redhat-openjdk18-openshift:1.4", "--binary=true")
                      }
                    }
                  }
                }
              }
              stage('Construyendo imagen') {
                steps {
                  sh "rm -rf oc-build && mkdir -p oc-build/deployments"
                  sh "cp target/SRV0002-ObtenerDeclaracionesLRE-1.0.jar oc-build/deployments/SRV0002-ObtenerDeclaracionesLRE.jar"

                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.selector("bc", "srv0002").startBuild("--from-dir=oc-build", "--wait=true")
                      }
                    }
                  }
                  sh "sleep 10"
                }
              }
              stage('Creando en QA') {
                when {
                  expression {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        return !openshift.selector('dc', 'srv0002').exists()
                      }
                    }
                  }
                }
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        def app = openshift.newApp("srv0002:latest")
                        app.narrow("svc").expose();
                        def dc = openshift.selector("dc", "srv0002")
                        while (dc.object().spec.replicas != dc.object().status.availableReplicas) {
                            sleep 10
                        }
                        openshift.set("triggers", "dc/srv0002", "--manual")
                      }
                      sh "sleep 40"
                    }
                  }
                }
              }
              stage('Desplegando en QA') {
                steps {
                sh "sleep 10"
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.selector("dc", "srv0002").rollout().latest();
                      }
                      sh "sleep 5"
                    }
                  }
                }
              }
            }
          }
      type: JenkinsPipeline
    triggeredBy:
    - message: Triggered by Jenkins job at http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0002-obtenerdeclaracioneslre/
  status:
    completionTimestamp: "2023-10-16T18:56:42Z"
    conditions:
    - lastTransitionTime: "2023-10-16T18:52:40Z"
      lastUpdateTime: "2023-10-16T18:52:40Z"
      status: "False"
      type: New
    - lastTransitionTime: "2023-10-16T18:52:44Z"
      lastUpdateTime: "2023-10-16T18:52:44Z"
      status: "False"
      type: Pending
    - lastTransitionTime: "2023-10-16T18:56:42Z"
      lastUpdateTime: "2023-10-16T18:56:42Z"
      status: "False"
      type: Running
    - lastTransitionTime: "2023-10-16T18:56:42Z"
      lastUpdateTime: "2023-10-16T18:56:42Z"
      status: "True"
      type: Complete
    config:
      kind: BuildConfig
      name: srv0002-obtenerdeclaracioneslre
      namespace: pipelines-qa
    output: {}
    phase: Complete
    startTimestamp: "2023-10-16T18:52:40Z"
- apiVersion: build.openshift.io/v1
  kind: Build
  metadata:
    annotations:
      openshift.io/jenkins-blueocean-log-url: /http://jenkins-cicd.api-cloud.dirtrab.cl/blue/organizations/jenkins/pipelines-qa%2Fpipelines-qa-srv0003-empleadores/detail/pipelines-qa-srv0003-empleadores/38/
      openshift.io/jenkins-build-uri: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0003-empleadores/38/
      openshift.io/jenkins-console-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0003-empleadores/38/console
      openshift.io/jenkins-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0003-empleadores/38/consoleText
      openshift.io/jenkins-status-json: '{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0003-empleadores/38/wfapi/describe"}},"id":"38","name":"#38","status":"SUCCESS","startTimeMillis":1697482701961,"endTimeMillis":1697482949956,"durationMillis":247995,"queueDurationMillis":7,"pauseDurationMillis":0,"stages":[{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0003-empleadores/38/execution/node/6/wfapi/describe"}},"id":"6","name":"Clonando
        repo y Compilando","execNode":"","status":"SUCCESS","startTimeMillis":1697482712260,"durationMillis":153865,"pauseDurationMillis":0},{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0003-empleadores/38/execution/node/28/wfapi/describe"}},"id":"28","name":"Construyendo
        imagen","execNode":"","status":"SUCCESS","startTimeMillis":1697482867949,"durationMillis":55509,"pauseDurationMillis":0},{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0003-empleadores/38/execution/node/51/wfapi/describe"}},"id":"51","name":"Desplegando
        en QA","execNode":"","status":"SUCCESS","startTimeMillis":1697482923914,"durationMillis":25970,"pauseDurationMillis":0}]}'
    creationTimestamp: "2023-10-16T18:58:21Z"
    generation: 1
    labels:
      app: cicd-pipeline
      buildconfig: srv0003-empleadores
      group: cicd
      migration.openshift.io/migrated-by-migmigration: 83812283-da61-428b-8d35-e15d91aa764d
      migration.openshift.io/migrated-by-migplan: 6b6402c2-9258-443b-83f4-8bb51f1d90f8
      name: cicd-pipeline
      openshift.io/build-config.name: srv0003-empleadores
      openshift.io/build.start-policy: Serial
      template: cicd
      velero.io/backup-name: migration-8d005-initial-6s92c
      velero.io/restore-name: migration-8d005-final-jj2bc
    name: srv0003-empleadores-1
    namespace: pipelines-qa
    ownerReferences:
    - apiVersion: build.openshift.io/v1
      controller: true
      kind: BuildConfig
      name: srv0003-empleadores
      uid: 98df5c6a-f247-41af-abc1-c072f5f45ff7
    resourceVersion: "136514178"
    uid: ace0a894-4fb3-4fa0-b0e2-3d20dd9fb18b
  spec:
    nodeSelector: {}
    output: {}
    postCommit: {}
    resources: {}
    serviceAccount: builder
    source:
      type: None
    strategy:
      jenkinsPipelineStrategy:
        env:
        - name: QA_PROJECT
          value: api-fiscalizacion-qa
        - name: ENABLE_QUAY
          value: "false"
        jenkinsfile: |
          pipeline {
            agent {
              label 'maven'
            }
            stages {
              stage('Clonando repo y Compilando') {
                  steps {
                      git([url: 'https://dirtrab.visualstudio.com/Libro%20Remuneraciones%20Electronico/_git/SRV0003-Empleadores',
                      branch: 'develop',
                      credentialsId: 'vsts'])
                  script {
                      def pom = readMavenPom file: 'pom.xml'
                      version = pom.version
                  }
                  sh "mvn -s configuration/settings.xml install -DskipTests=true"
                }
              }
              stage('Creando Image Builder') {
                when {
                  expression {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        return !openshift.selector("bc", "srv0003").exists();
                      }
                    }
                  }
                }
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.newBuild("--name=srv0003", "--image-stream=redhat-openjdk18-openshift:1.4", "--binary=true")
                      }
                    }
                  }
                }
              }
              stage('Construyendo imagen') {
                steps {
                  sh "rm -rf oc-build && mkdir -p oc-build/deployments"
                  sh "cp target/SRV0003-Empleadores-1.0.jar oc-build/deployments/SRV0003-Empleadores.jar"

                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.selector("bc", "srv0003").startBuild("--from-dir=oc-build", "--wait=true")
                      }
                    }
                  }
                  sh "sleep 10"
                }
              }
              stage('Creando en QA') {
                when {
                  expression {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        return !openshift.selector('dc', 'srv0003').exists()
                      }
                    }
                  }
                }
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        def app = openshift.newApp("srv0003:latest")
                        app.narrow("svc").expose();
                        def dc = openshift.selector("dc", "srv0003")
                        while (dc.object().spec.replicas != dc.object().status.availableReplicas) {
                            sleep 10
                        }
                        openshift.set("triggers", "dc/srv0003", "--manual")
                      }
                      sh "sleep 40"
                    }
                  }
                }
              }
              stage('Desplegando en QA') {
                steps {
                sh "sleep 10"
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.selector("dc", "srv0003").rollout().latest();
                      }
                      sh "sleep 15"
                    }
                  }
                }
              }
            }
          }
      type: JenkinsPipeline
    triggeredBy:
    - message: Triggered by Jenkins job at http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0003-empleadores/
  status:
    completionTimestamp: "2023-10-16T19:02:29Z"
    conditions:
    - lastTransitionTime: "2023-10-16T18:58:21Z"
      lastUpdateTime: "2023-10-16T18:58:21Z"
      status: "False"
      type: New
    - lastTransitionTime: "2023-10-16T18:58:24Z"
      lastUpdateTime: "2023-10-16T18:58:24Z"
      status: "False"
      type: Pending
    - lastTransitionTime: "2023-10-16T19:02:29Z"
      lastUpdateTime: "2023-10-16T19:02:29Z"
      status: "False"
      type: Running
    - lastTransitionTime: "2023-10-16T19:02:29Z"
      lastUpdateTime: "2023-10-16T19:02:29Z"
      status: "True"
      type: Complete
    config:
      kind: BuildConfig
      name: srv0003-empleadores
      namespace: pipelines-qa
    output: {}
    phase: Complete
    startTimestamp: "2023-10-16T18:58:21Z"
- apiVersion: build.openshift.io/v1
  kind: Build
  metadata:
    annotations:
      openshift.io/jenkins-blueocean-log-url: /http://jenkins-cicd.api-cloud.dirtrab.cl/blue/organizations/jenkins/pipelines-qa%2Fpipelines-qa-srv0003-empleadores/detail/pipelines-qa-srv0003-empleadores/39/
      openshift.io/jenkins-build-uri: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0003-empleadores/39/
      openshift.io/jenkins-console-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0003-empleadores/39/console
      openshift.io/jenkins-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0003-empleadores/39/consoleText
      openshift.io/jenkins-status-json: '{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0003-empleadores/39/wfapi/describe"}},"id":"39","name":"#39","status":"FAILED","startTimeMillis":1711134096600,"endTimeMillis":1711134135543,"durationMillis":38943,"queueDurationMillis":10,"pauseDurationMillis":0,"stages":[{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0003-empleadores/39/execution/node/6/wfapi/describe"}},"id":"6","name":"Clonando
        repo y Compilando","execNode":"","status":"FAILED","error":{"message":"Error
        cloning remote repo ''origin''","type":"hudson.AbortException"},"startTimeMillis":1711134130447,"durationMillis":4591,"pauseDurationMillis":0}]}'
    creationTimestamp: "2024-03-22T19:01:36Z"
    generation: 1
    labels:
      app: cicd-pipeline
      buildconfig: srv0003-empleadores
      group: cicd
      migration.openshift.io/migrated-by-migmigration: 83812283-da61-428b-8d35-e15d91aa764d
      migration.openshift.io/migrated-by-migplan: 6b6402c2-9258-443b-83f4-8bb51f1d90f8
      name: cicd-pipeline
      openshift.io/build-config.name: srv0003-empleadores
      openshift.io/build.start-policy: Serial
      template: cicd
      velero.io/backup-name: migration-8d005-initial-6s92c
      velero.io/restore-name: migration-8d005-final-jj2bc
    name: srv0003-empleadores-2
    namespace: pipelines-qa
    ownerReferences:
    - apiVersion: build.openshift.io/v1
      controller: true
      kind: BuildConfig
      name: srv0003-empleadores
      uid: 98df5c6a-f247-41af-abc1-c072f5f45ff7
    resourceVersion: "271812980"
    uid: 68e6e570-9813-47e3-b166-e43606119955
  spec:
    nodeSelector: {}
    output: {}
    postCommit: {}
    resources: {}
    serviceAccount: builder
    source:
      type: None
    strategy:
      jenkinsPipelineStrategy:
        env:
        - name: QA_PROJECT
          value: api-fiscalizacion-qa
        - name: ENABLE_QUAY
          value: "false"
        jenkinsfile: |
          pipeline {
            agent {
              label 'maven'
            }
            stages {
              stage('Clonando repo y Compilando') {
                  steps {
                      git([url: 'https://dirtrab.visualstudio.com/Libro%20Remuneraciones%20Electronico/_git/SRV0003-Empleadores',
                      branch: 'develop',
                      credentialsId: 'vsts'])
                  script {
                      def pom = readMavenPom file: 'pom.xml'
                      version = pom.version
                  }
                  sh "mvn -s configuration/settings.xml install -DskipTests=true"
                }
              }
              stage('Creando Image Builder') {
                when {
                  expression {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        return !openshift.selector("bc", "srv0003").exists();
                      }
                    }
                  }
                }
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.newBuild("--name=srv0003", "--image-stream=redhat-openjdk18-openshift:1.4", "--binary=true")
                      }
                    }
                  }
                }
              }
              stage('Construyendo imagen') {
                steps {
                  sh "rm -rf oc-build && mkdir -p oc-build/deployments"
                  sh "cp target/SRV0003-Empleadores-1.0.jar oc-build/deployments/SRV0003-Empleadores.jar"

                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.selector("bc", "srv0003").startBuild("--from-dir=oc-build", "--wait=true")
                      }
                    }
                  }
                  sh "sleep 10"
                }
              }
              stage('Creando en QA') {
                when {
                  expression {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        return !openshift.selector('dc', 'srv0003').exists()
                      }
                    }
                  }
                }
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        def app = openshift.newApp("srv0003:latest")
                        app.narrow("svc").expose();
                        def dc = openshift.selector("dc", "srv0003")
                        while (dc.object().spec.replicas != dc.object().status.availableReplicas) {
                            sleep 10
                        }
                        openshift.set("triggers", "dc/srv0003", "--manual")
                      }
                      sh "sleep 40"
                    }
                  }
                }
              }
              stage('Desplegando en QA') {
                steps {
                sh "sleep 10"
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.selector("dc", "srv0003").rollout().latest();
                      }
                      sh "sleep 15"
                    }
                  }
                }
              }
            }
          }
      type: JenkinsPipeline
    triggeredBy:
    - message: Triggered by Jenkins job at http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0003-empleadores/
  status:
    completionTimestamp: "2024-03-22T19:02:15Z"
    conditions:
    - lastTransitionTime: "2024-03-22T19:01:36Z"
      lastUpdateTime: "2024-03-22T19:01:36Z"
      status: "False"
      type: New
    - lastTransitionTime: "2024-03-22T19:01:39Z"
      lastUpdateTime: "2024-03-22T19:01:39Z"
      status: "False"
      type: Pending
    - lastTransitionTime: "2024-03-22T19:02:15Z"
      lastUpdateTime: "2024-03-22T19:02:15Z"
      status: "False"
      type: Running
    - lastTransitionTime: "2024-03-22T19:02:15Z"
      lastUpdateTime: "2024-03-22T19:02:15Z"
      status: "True"
      type: Failed
    config:
      kind: BuildConfig
      name: srv0003-empleadores
      namespace: pipelines-qa
    output: {}
    phase: Failed
    startTimestamp: "2024-03-22T19:01:36Z"
- apiVersion: build.openshift.io/v1
  kind: Build
  metadata:
    annotations:
      openshift.io/jenkins-blueocean-log-url: /http://jenkins-cicd.api-cloud.dirtrab.cl/blue/organizations/jenkins/pipelines-qa%2Fpipelines-qa-srv0004-declaraciontransferencia/detail/pipelines-qa-srv0004-declaraciontransferencia/32/
      openshift.io/jenkins-build-uri: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0004-declaraciontransferencia/32/
      openshift.io/jenkins-console-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0004-declaraciontransferencia/32/console
      openshift.io/jenkins-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0004-declaraciontransferencia/32/consoleText
      openshift.io/jenkins-status-json: '{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0004-declaraciontransferencia/32/wfapi/describe"}},"id":"32","name":"#32","status":"SUCCESS","startTimeMillis":1697483017372,"endTimeMillis":1697483291816,"durationMillis":274444,"queueDurationMillis":5,"pauseDurationMillis":0,"stages":[{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0004-declaraciontransferencia/32/execution/node/6/wfapi/describe"}},"id":"6","name":"Clonando
        repo y Compilando","execNode":"","status":"SUCCESS","startTimeMillis":1697483025714,"durationMillis":178038,"pauseDurationMillis":0},{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0004-declaraciontransferencia/32/execution/node/28/wfapi/describe"}},"id":"28","name":"Construyendo
        imagen","execNode":"","status":"SUCCESS","startTimeMillis":1697483206127,"durationMillis":59116,"pauseDurationMillis":0},{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0004-declaraciontransferencia/32/execution/node/51/wfapi/describe"}},"id":"51","name":"Desplegando
        en QA","execNode":"","status":"SUCCESS","startTimeMillis":1697483265672,"durationMillis":26084,"pauseDurationMillis":0}]}'
    creationTimestamp: "2023-10-16T19:03:37Z"
    generation: 1
    labels:
      app: cicd-pipeline
      buildconfig: srv0004-declaraciontransferencia
      group: cicd
      migration.openshift.io/migrated-by-migmigration: 83812283-da61-428b-8d35-e15d91aa764d
      migration.openshift.io/migrated-by-migplan: 6b6402c2-9258-443b-83f4-8bb51f1d90f8
      name: cicd-pipeline
      openshift.io/build-config.name: srv0004-declaraciontransferencia
      openshift.io/build.start-policy: Serial
      template: cicd
      velero.io/backup-name: migration-8d005-initial-6s92c
      velero.io/restore-name: migration-8d005-final-jj2bc
    name: srv0004-declaraciontransferencia-1
    namespace: pipelines-qa
    ownerReferences:
    - apiVersion: build.openshift.io/v1
      controller: true
      kind: BuildConfig
      name: srv0004-declaraciontransferencia
      uid: 4f943725-d497-4d12-bfa0-e90746a3d77e
    resourceVersion: "136517840"
    uid: 2a881386-2202-49d3-a3af-1787a3b1125e
  spec:
    nodeSelector: {}
    output: {}
    postCommit: {}
    resources: {}
    serviceAccount: builder
    source:
      type: None
    strategy:
      jenkinsPipelineStrategy:
        env:
        - name: QA_PROJECT
          value: api-fiscalizacion-qa
        - name: ENABLE_QUAY
          value: "false"
        jenkinsfile: |
          pipeline {
            agent {
              label 'maven'
            }
            stages {
              stage('Clonando repo y Compilando') {
                  steps {
                      git([url: 'https://dirtrab.visualstudio.com/Libro%20Remuneraciones%20Electronico/_git/SRV0004-DeclaracionTransferencia',
                      branch: 'develop',
                      credentialsId: 'azure_credenciales_id'])
                  script {
                      def pom = readMavenPom file: 'pom.xml'
                      version = pom.version
                  }
                  sh "mvn -s configuration/settings.xml install -DskipTests=true"
                }
              }
              stage('Creando Image Builder') {
                when {
                  expression {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        return !openshift.selector("bc", "srv0004-declaraciontrans").exists();
                      }
                    }
                  }
                }
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.newBuild("--name=srv0004-declaraciontrans", "--image-stream=redhat-openjdk18-openshift:1.4", "--binary=true")
                      }
                    }
                  }
                }
              }
              stage('Construyendo imagen') {
                steps {
                  sh "rm -rf oc-build && mkdir -p oc-build/deployments"
                  sh "cp target/SRV0004-DeclaracionTransferencia-2.0.jar oc-build/deployments/SRV0004-DeclaracionTransferencia.jar"

                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.selector("bc", "srv0004-declaraciontrans").startBuild("--from-dir=oc-build", "--wait=true")
                      }
                    }
                  }
                  sh "sleep 10"
                }
              }
              stage('Creando en QA') {
                when {
                  expression {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        return !openshift.selector('dc', 'srv0004-declaraciontrans').exists()
                      }
                    }
                  }
                }
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        def app = openshift.newApp("srv0004-declaraciontrans:latest")
                        app.narrow("svc").expose();
                        def dc = openshift.selector("dc", "srv0004-declaraciontrans")
                        while (dc.object().spec.replicas != dc.object().status.availableReplicas) {
                            sleep 10
                        }
                        openshift.set("triggers", "dc/srv0004-declaraciontrans", "--manual")
                      }
                      sh "sleep 40"
                    }
                  }
                }
              }
              stage('Desplegando en QA') {
                steps {
                sh "sleep 10"
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.selector("dc", "srv0004-declaraciontrans").rollout().latest();
                      }
                      sh "sleep 15"
                    }
                  }
                }
              }
            }
          }
      type: JenkinsPipeline
    triggeredBy:
    - message: Triggered by Jenkins job at http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0004-declaraciontransferencia/
  status:
    completionTimestamp: "2023-10-16T19:08:11Z"
    conditions:
    - lastTransitionTime: "2023-10-16T19:03:37Z"
      lastUpdateTime: "2023-10-16T19:03:37Z"
      status: "False"
      type: New
    - lastTransitionTime: "2023-10-16T19:03:39Z"
      lastUpdateTime: "2023-10-16T19:03:39Z"
      status: "False"
      type: Pending
    - lastTransitionTime: "2023-10-16T19:08:11Z"
      lastUpdateTime: "2023-10-16T19:08:11Z"
      status: "False"
      type: Running
    - lastTransitionTime: "2023-10-16T19:08:11Z"
      lastUpdateTime: "2023-10-16T19:08:11Z"
      status: "True"
      type: Complete
    config:
      kind: BuildConfig
      name: srv0004-declaraciontransferencia
      namespace: pipelines-qa
    output: {}
    phase: Complete
    startTimestamp: "2023-10-16T19:03:37Z"
- apiVersion: build.openshift.io/v1
  kind: Build
  metadata:
    annotations:
      openshift.io/jenkins-blueocean-log-url: /http://jenkins-cicd.api-cloud.dirtrab.cl/blue/organizations/jenkins/pipelines-qa%2Fpipelines-qa-srv0005-descargalre/detail/pipelines-qa-srv0005-descargalre/20/
      openshift.io/jenkins-build-uri: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0005-descargalre/20/
      openshift.io/jenkins-console-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0005-descargalre/20/console
      openshift.io/jenkins-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0005-descargalre/20/consoleText
      openshift.io/jenkins-status-json: '{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0005-descargalre/20/wfapi/describe"}},"id":"20","name":"#20","status":"SUCCESS","startTimeMillis":1697483327300,"endTimeMillis":1697483568458,"durationMillis":241158,"queueDurationMillis":4,"pauseDurationMillis":0,"stages":[{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0005-descargalre/20/execution/node/6/wfapi/describe"}},"id":"6","name":"Clonando
        repo y Compilando","execNode":"","status":"SUCCESS","startTimeMillis":1697483336500,"durationMillis":154452,"pauseDurationMillis":0},{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0005-descargalre/20/execution/node/28/wfapi/describe"}},"id":"28","name":"Construyendo
        imagen","execNode":"","status":"SUCCESS","startTimeMillis":1697483492698,"durationMillis":49253,"pauseDurationMillis":0},{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0005-descargalre/20/execution/node/51/wfapi/describe"}},"id":"51","name":"Desplegando
        en QA","execNode":"","status":"SUCCESS","startTimeMillis":1697483542359,"durationMillis":26041,"pauseDurationMillis":0}]}'
    creationTimestamp: "2023-10-16T19:08:47Z"
    generation: 1
    labels:
      app: cicd-pipeline
      buildconfig: srv0005-descargalre
      group: cicd
      migration.openshift.io/migrated-by-migmigration: 83812283-da61-428b-8d35-e15d91aa764d
      migration.openshift.io/migrated-by-migplan: 6b6402c2-9258-443b-83f4-8bb51f1d90f8
      name: cicd-pipeline
      openshift.io/build-config.name: srv0005-descargalre
      openshift.io/build.start-policy: Serial
      template: cicd
      velero.io/backup-name: migration-8d005-initial-6s92c
      velero.io/restore-name: migration-8d005-final-jj2bc
    name: srv0005-descargalre-1
    namespace: pipelines-qa
    ownerReferences:
    - apiVersion: build.openshift.io/v1
      controller: true
      kind: BuildConfig
      name: srv0005-descargalre
      uid: c20908d4-cabb-47fc-8e08-e23e711d9522
    resourceVersion: "136520600"
    uid: 8e810015-bade-496a-b23f-b42ea43649b6
  spec:
    nodeSelector: {}
    output: {}
    postCommit: {}
    resources: {}
    serviceAccount: builder
    source:
      type: None
    strategy:
      jenkinsPipelineStrategy:
        env:
        - name: QA_PROJECT
          value: api-fiscalizacion-qa
        - name: ENABLE_QUAY
          value: "false"
        jenkinsfile: |
          pipeline {
            agent {
              label 'maven'
            }
            stages {
              stage('Clonando repo y Compilando') {
                  steps {
                      git([url: 'https://dirtrab.visualstudio.com/Libro%20Remuneraciones%20Electronico/_git/SRV0005-DescargaLRE',
                      branch: 'develop',
                      credentialsId: 'azure_credenciales_id'])
                  script {
                      def pom = readMavenPom file: 'pom.xml'
                      version = pom.version
                  }
                  sh "mvn -s configuration/settings.xml install -DskipTests=true"
                }
              }
              stage('Creando Image Builder') {
                when {
                  expression {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        return !openshift.selector("bc", "srv0005-descargalre").exists();
                      }
                    }
                  }
                }
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.newBuild("--name=srv0005-descargalre", "--image-stream=redhat-openjdk18-openshift:1.4", "--binary=true")
                      }
                    }
                  }
                }
              }
              stage('Construyendo imagen') {
                steps {
                  sh "rm -rf oc-build && mkdir -p oc-build/deployments"
                  sh "cp target/SRV0005-DescargaLRE-1.0.jar oc-build/deployments/SRV0005-DescargaLRE.jar"

                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.selector("bc", "srv0005-descargalre").startBuild("--from-dir=oc-build", "--wait=true")
                      }
                    }
                  }
                  sh "sleep 10"
                }
              }
              stage('Creando en QA') {
                when {
                  expression {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        return !openshift.selector('dc', 'srv0005-descargalre').exists()
                      }
                    }
                  }
                }
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        def app = openshift.newApp("srv0005-descargalre:latest")
                        app.narrow("svc").expose();
                        def dc = openshift.selector("dc", "srv0005-descargalre")
                        while (dc.object().spec.replicas != dc.object().status.availableReplicas) {
                            sleep 10
                        }
                        openshift.set("triggers", "dc/srv0005-descargalre", "--manual")
                      }
                      sh "sleep 40"
                    }
                  }
                }
              }
              stage('Desplegando en QA') {
                steps {
                sh "sleep 10"
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.selector("dc", "srv0005-descargalre").rollout().latest();
                      }
                      sh "sleep 15"
                    }
                  }
                }
              }
            }
          }
      type: JenkinsPipeline
    triggeredBy:
    - message: Triggered by Jenkins job at http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0005-descargalre/
  status:
    completionTimestamp: "2023-10-16T19:12:48Z"
    conditions:
    - lastTransitionTime: "2023-10-16T19:08:47Z"
      lastUpdateTime: "2023-10-16T19:08:47Z"
      status: "False"
      type: New
    - lastTransitionTime: "2023-10-16T19:08:49Z"
      lastUpdateTime: "2023-10-16T19:08:49Z"
      status: "False"
      type: Pending
    - lastTransitionTime: "2023-10-16T19:12:48Z"
      lastUpdateTime: "2023-10-16T19:12:48Z"
      status: "False"
      type: Running
    - lastTransitionTime: "2023-10-16T19:12:48Z"
      lastUpdateTime: "2023-10-16T19:12:48Z"
      status: "True"
      type: Complete
    config:
      kind: BuildConfig
      name: srv0005-descargalre
      namespace: pipelines-qa
    output: {}
    phase: Complete
    startTimestamp: "2023-10-16T19:08:47Z"
- apiVersion: build.openshift.io/v1
  kind: Build
  metadata:
    annotations:
      openshift.io/jenkins-blueocean-log-url: /http://jenkins-cicd.api-cloud.dirtrab.cl/blue/organizations/jenkins/pipelines-qa%2Fpipelines-qa-srv0006-apimetadata/detail/pipelines-qa-srv0006-apimetadata/16/
      openshift.io/jenkins-build-uri: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0006-apimetadata/16/
      openshift.io/jenkins-console-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0006-apimetadata/16/console
      openshift.io/jenkins-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0006-apimetadata/16/consoleText
      openshift.io/jenkins-status-json: '{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0006-apimetadata/16/wfapi/describe"}},"id":"16","name":"#16","status":"SUCCESS","startTimeMillis":1697483599932,"endTimeMillis":1697483857381,"durationMillis":257449,"queueDurationMillis":9,"pauseDurationMillis":0,"stages":[{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0006-apimetadata/16/execution/node/6/wfapi/describe"}},"id":"6","name":"Clonando
        repo y Compilando","execNode":"","status":"SUCCESS","startTimeMillis":1697483612637,"durationMillis":160434,"pauseDurationMillis":0},{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0006-apimetadata/16/execution/node/28/wfapi/describe"}},"id":"28","name":"Construyendo
        imagen","execNode":"","status":"SUCCESS","startTimeMillis":1697483775947,"durationMillis":54867,"pauseDurationMillis":0},{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0006-apimetadata/16/execution/node/51/wfapi/describe"}},"id":"51","name":"Desplegando
        en QA","execNode":"","status":"SUCCESS","startTimeMillis":1697483831229,"durationMillis":26089,"pauseDurationMillis":0}]}'
    creationTimestamp: "2023-10-16T19:13:19Z"
    generation: 1
    labels:
      app: cicd-pipeline
      buildconfig: srv0006-apimetadata
      group: cicd
      migration.openshift.io/migrated-by-migmigration: 83812283-da61-428b-8d35-e15d91aa764d
      migration.openshift.io/migrated-by-migplan: 6b6402c2-9258-443b-83f4-8bb51f1d90f8
      name: cicd-pipeline
      openshift.io/build-config.name: srv0006-apimetadata
      openshift.io/build.start-policy: Serial
      template: cicd
      velero.io/backup-name: migration-8d005-initial-6s92c
      velero.io/restore-name: migration-8d005-final-jj2bc
    name: srv0006-apimetadata-1
    namespace: pipelines-qa
    ownerReferences:
    - apiVersion: build.openshift.io/v1
      controller: true
      kind: BuildConfig
      name: srv0006-apimetadata
      uid: 0c4cec38-c136-4917-8742-8093ce7a15ee
    resourceVersion: "136523604"
    uid: 0699a21a-8880-4c2d-96c9-1ca51c1b2504
  spec:
    nodeSelector: {}
    output: {}
    postCommit: {}
    resources: {}
    serviceAccount: builder
    source:
      type: None
    strategy:
      jenkinsPipelineStrategy:
        env:
        - name: QA_PROJECT
          value: api-fiscalizacion-qa
        - name: ENABLE_QUAY
          value: "false"
        jenkinsfile: |
          pipeline {
            agent {
              label 'maven'
            }
            stages {
              stage('Clonando repo y Compilando') {
                  steps {
                      git([url: 'https://dirtrab.visualstudio.com/Libro%20Remuneraciones%20Electronico/_git/SRV0006-ApiMetadata',
                      branch: 'develop',
                      credentialsId: 'azure_credenciales_id'])
                  script {
                      def pom = readMavenPom file: 'pom.xml'
                      version = pom.version
                  }
                  sh "mvn -s configuration/settings.xml install -DskipTests=true"
                }
              }
              stage('Creando Image Builder') {
                when {
                  expression {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        return !openshift.selector("bc", "srv0006-apimetadata").exists();
                      }
                    }
                  }
                }
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.newBuild("--name=srv0006-apimetadata", "--image-stream=redhat-openjdk18-openshift:1.4", "--binary=true")
                      }
                    }
                  }
                }
              }
              stage('Construyendo imagen') {
                steps {
                  sh "rm -rf oc-build && mkdir -p oc-build/deployments"
                  sh "cp target/SRV0006-ApiMetadata-1.0.jar oc-build/deployments/SRV0006-ApiMetadata.jar"

                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.selector("bc", "srv0006-apimetadata").startBuild("--from-dir=oc-build", "--wait=true")
                      }
                    }
                  }
                  sh "sleep 10"
                }
              }
              stage('Creando en QA') {
                when {
                  expression {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        return !openshift.selector('dc', 'srv0006-apimetadata').exists()
                      }
                    }
                  }
                }
                steps {
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        def app = openshift.newApp("srv0006-apimetadata:latest")
                        app.narrow("svc").expose();
                        def dc = openshift.selector("dc", "srv0006-apimetadata")
                        while (dc.object().spec.replicas != dc.object().status.availableReplicas) {
                            sleep 10
                        }
                        openshift.set("triggers", "dc/srv0006-apimetadata", "--manual")
                      }
                      sh "sleep 40"
                    }
                  }
                }
              }
              stage('Desplegando en QA') {
                steps {
                sh "sleep 10"
                  script {
                    openshift.withCluster() {
                      openshift.withProject(env.QA_PROJECT) {
                        openshift.selector("dc", "srv0006-apimetadata").rollout().latest();
                      }
                      sh "sleep 15"
                    }
                  }
                }
              }
            }
          }
      type: JenkinsPipeline
    triggeredBy:
    - message: Triggered by Jenkins job at http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0006-apimetadata/
  status:
    completionTimestamp: "2023-10-16T19:17:37Z"
    conditions:
    - lastTransitionTime: "2023-10-16T19:13:19Z"
      lastUpdateTime: "2023-10-16T19:13:19Z"
      status: "False"
      type: New
    - lastTransitionTime: "2023-10-16T19:13:24Z"
      lastUpdateTime: "2023-10-16T19:13:24Z"
      status: "False"
      type: Pending
    - lastTransitionTime: "2023-10-16T19:17:37Z"
      lastUpdateTime: "2023-10-16T19:17:37Z"
      status: "False"
      type: Running
    - lastTransitionTime: "2023-10-16T19:17:37Z"
      lastUpdateTime: "2023-10-16T19:17:37Z"
      status: "True"
      type: Complete
    config:
      kind: BuildConfig
      name: srv0006-apimetadata
      namespace: pipelines-qa
    output: {}
    phase: Complete
    startTimestamp: "2023-10-16T19:13:19Z"
- apiVersion: build.openshift.io/v1
  kind: Build
  metadata:
    annotations:
      openshift.io/jenkins-blueocean-log-url: /http://jenkins-cicd.api-cloud.dirtrab.cl/blue/organizations/jenkins/pipelines-qa%2Fpipelines-qa-srv0007-bff/detail/pipelines-qa-srv0007-bff/30/
      openshift.io/jenkins-build-uri: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0007-bff/30/
      openshift.io/jenkins-console-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0007-bff/30/console
      openshift.io/jenkins-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0007-bff/30/consoleText
      openshift.io/jenkins-status-json: '{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0007-bff/30/wfapi/describe"}},"id":"30","name":"#30","status":"SUCCESS","startTimeMillis":1697483894044,"endTimeMillis":1697484119787,"durationMillis":225743,"queueDurationMillis":5,"pauseDurationMillis":0,"stages":[{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0007-bff/30/execution/node/8/wfapi/describe"}},"id":"8","name":"preparando
        pipeline","execNode":"","status":"SUCCESS","startTimeMillis":1697483923375,"durationMillis":1029,"pauseDurationMillis":0},{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0007-bff/30/execution/node/20/wfapi/describe"}},"id":"20","name":"cleanup","execNode":"","status":"SUCCESS","startTimeMillis":1697483924430,"durationMillis":5451,"pauseDurationMillis":0},{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0007-bff/30/execution/node/36/wfapi/describe"}},"id":"36","name":"build","execNode":"","status":"SUCCESS","startTimeMillis":1697483929905,"durationMillis":173663,"pauseDurationMillis":0},{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0007-bff/30/execution/node/52/wfapi/describe"}},"id":"52","name":"deploy","execNode":"","status":"SUCCESS","startTimeMillis":1697484103598,"durationMillis":16070,"pauseDurationMillis":0}]}'
    creationTimestamp: "2023-10-16T19:18:13Z"
    generation: 1
    labels:
      app: cicd-pipeline
      buildconfig: srv0007-bff
      group: cicd
      migration.openshift.io/migrated-by-migmigration: 83812283-da61-428b-8d35-e15d91aa764d
      migration.openshift.io/migrated-by-migplan: 6b6402c2-9258-443b-83f4-8bb51f1d90f8
      name: cicd-pipeline
      openshift.io/build-config.name: srv0007-bff
      openshift.io/build.start-policy: Serial
      template: cicd
      velero.io/backup-name: migration-8d005-initial-6s92c
      velero.io/restore-name: migration-8d005-final-jj2bc
    name: srv0007-bff-1
    namespace: pipelines-qa
    ownerReferences:
    - apiVersion: build.openshift.io/v1
      controller: true
      kind: BuildConfig
      name: srv0007-bff
      uid: c1c1cada-6496-442c-aca2-713bca29d6d3
    resourceVersion: "136526005"
    uid: 71138852-f4a1-4372-86fb-0adcd0ff338c
  spec:
    nodeSelector: {}
    output: {}
    postCommit: {}
    resources: {}
    serviceAccount: builder
    source:
      type: None
    strategy:
      jenkinsPipelineStrategy:
        env:
        - name: QA_PROJECT
          value: api-fiscalizacion-qa
        - name: ENABLE_QUAY
          value: "false"
        jenkinsfile: "def templateName = 'srv0007-bff' \npipeline {\n  agent {\n    label
          'nodejs'\n  }\n  options {\n    timeout(time: 20, unit: 'MINUTES') \n  }\n
          \ stages {\n    stage('preparando pipeline') {\n        steps {\n            script
          {\n                openshift.withCluster() {\n                    openshift.withProject(env.QA_PROJECT)
          {\n                        echo \"Using project: ${openshift.project()}\"\n
          \                   }\n                }\n            }\n        }\n    }\n
          \   stage('cleanup') {\n      steps {\n        script {\n            openshift.withCluster()
          {\n                openshift.withProject(env.QA_PROJECT) {\n                  openshift.selector(\"all\",
          [ template : templateName ]).delete() \n                  if (openshift.selector(\"secrets\",
          templateName).exists()) { \n                    openshift.selector(\"secrets\",
          templateName).delete()\n                  }\n                }\n            }\n
          \       }\n      }\n    }\n    stage('build') {\n      steps {\n        script
          {\n            openshift.withCluster() {\n                openshift.withProject(env.QA_PROJECT)
          {\n                  def builds = openshift.selector(\"bc\", templateName)\n
          \                 builds.startBuild()\n                  builds.logs(\"-f\")\n
          \                 echo \"build terminado\"\n                  echo \"comenzando
          deployment\"\n                }\n            }\n        }\n      }\n    }\n
          \   stage('deploy') {\n      steps {\n        script {\n            openshift.withCluster()
          {\n                openshift.withProject(env.QA_PROJECT) {\n                  //latest
          no es necesario porque el build trigger el deploy\n                  //def
          rm = openshift.selector(\"dc\", templateName).rollout().latest()\n                  //
          this will wait until the desired replicas are available\n                  sh
          \"sleep 15\"\n                  def dc = openshift.selector(\"dc\", templateName)\n
          \                 dc.rollout().status()\n                }\n            }\n
          \       }\n      }\n    }\n  }\n}\n"
      type: JenkinsPipeline
    triggeredBy:
    - message: Triggered by Jenkins job at http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0007-bff/
  status:
    completionTimestamp: "2023-10-16T19:21:59Z"
    conditions:
    - lastTransitionTime: "2023-10-16T19:18:14Z"
      lastUpdateTime: "2023-10-16T19:18:14Z"
      status: "False"
      type: New
    - lastTransitionTime: "2023-10-16T19:18:14Z"
      lastUpdateTime: "2023-10-16T19:18:14Z"
      status: "False"
      type: Pending
    - lastTransitionTime: "2023-10-16T19:21:59Z"
      lastUpdateTime: "2023-10-16T19:21:59Z"
      status: "False"
      type: Running
    - lastTransitionTime: "2023-10-16T19:21:59Z"
      lastUpdateTime: "2023-10-16T19:21:59Z"
      status: "True"
      type: Complete
    config:
      kind: BuildConfig
      name: srv0007-bff
      namespace: pipelines-qa
    output: {}
    phase: Complete
    startTimestamp: "2023-10-16T19:18:14Z"
- apiVersion: build.openshift.io/v1
  kind: Build
  metadata:
    annotations:
      openshift.io/jenkins-blueocean-log-url: /http://jenkins-cicd.api-cloud.dirtrab.cl/blue/organizations/jenkins/pipelines-qa%2Fpipelines-qa-srv0008-validaciones/detail/pipelines-qa-srv0008-validaciones/26/
      openshift.io/jenkins-build-uri: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0008-validaciones/26/
      openshift.io/jenkins-console-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0008-validaciones/26/console
      openshift.io/jenkins-log-url: http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0008-validaciones/26/consoleText
      openshift.io/jenkins-status-json: '{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0008-validaciones/26/wfapi/describe"}},"id":"26","name":"#26","status":"SUCCESS","startTimeMillis":1697484141440,"endTimeMillis":1697484343787,"durationMillis":202347,"queueDurationMillis":4,"pauseDurationMillis":0,"stages":[{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0008-validaciones/26/execution/node/8/wfapi/describe"}},"id":"8","name":"preparando
        pipeline","execNode":"","status":"SUCCESS","startTimeMillis":1697484152475,"durationMillis":1345,"pauseDurationMillis":0},{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0008-validaciones/26/execution/node/20/wfapi/describe"}},"id":"20","name":"cleanup","execNode":"","status":"SUCCESS","startTimeMillis":1697484153866,"durationMillis":5681,"pauseDurationMillis":0},{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0008-validaciones/26/execution/node/36/wfapi/describe"}},"id":"36","name":"build","execNode":"","status":"SUCCESS","startTimeMillis":1697484159582,"durationMillis":161059,"pauseDurationMillis":0},{"_links":{"self":{"href":"http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0008-validaciones/26/execution/node/52/wfapi/describe"}},"id":"52","name":"deploy","execNode":"","status":"SUCCESS","startTimeMillis":1697484320664,"durationMillis":23034,"pauseDurationMillis":0}]}'
    creationTimestamp: "2023-10-16T19:22:21Z"
    generation: 1
    labels:
      app: cicd-pipeline
      buildconfig: srv0008-validaciones
      group: cicd
      migration.openshift.io/migrated-by-migmigration: 83812283-da61-428b-8d35-e15d91aa764d
      migration.openshift.io/migrated-by-migplan: 6b6402c2-9258-443b-83f4-8bb51f1d90f8
      name: cicd-pipeline
      openshift.io/build-config.name: srv0008-validaciones
      openshift.io/build.start-policy: Serial
      template: cicd
      velero.io/backup-name: migration-8d005-initial-6s92c
      velero.io/restore-name: migration-8d005-final-jj2bc
    name: srv0008-validaciones-1
    namespace: pipelines-qa
    ownerReferences:
    - apiVersion: build.openshift.io/v1
      controller: true
      kind: BuildConfig
      name: srv0008-validaciones
      uid: ac577a6d-f0dc-4b61-905d-cd8756b074b0
    resourceVersion: "136528235"
    uid: e9eb5b3f-8991-4ee3-8389-e8e6f5370d3e
  spec:
    nodeSelector: {}
    output: {}
    postCommit: {}
    resources: {}
    serviceAccount: builder
    source:
      type: None
    strategy:
      jenkinsPipelineStrategy:
        env:
        - name: QA_PROJECT
          value: api-fiscalizacion-qa
        - name: ENABLE_QUAY
          value: "false"
        jenkinsfile: "def templateName = 'srv0008-validaciones' \npipeline {\n  agent
          {\n    label 'nodejs'\n  }\n  options {\n    timeout(time: 20, unit: 'MINUTES')
          \n  }\n  stages {\n    stage('preparando pipeline') {\n        steps {\n
          \           script {\n                openshift.withCluster() {\n                    openshift.withProject(env.QA_PROJECT)
          {\n                        echo \"Using project: ${openshift.project()}\"\n
          \                   }\n                }\n            }\n        }\n    }\n
          \   stage('cleanup') {\n      steps {\n        script {\n            openshift.withCluster()
          {\n                openshift.withProject(env.QA_PROJECT) {\n                  openshift.selector(\"all\",
          [ template : templateName ]).delete() \n                  if (openshift.selector(\"secrets\",
          templateName).exists()) { \n                    openshift.selector(\"secrets\",
          templateName).delete()\n                  }\n                }\n            }\n
          \       }\n      }\n    }\n    stage('build') {\n      steps {\n        script
          {\n            openshift.withCluster() {\n                openshift.withProject(env.QA_PROJECT)
          {\n                  def builds = openshift.selector(\"bc\", templateName)\n
          \                 builds.startBuild()\n                  builds.logs(\"-f\")\n
          \                 echo \"build terminado\"\n                  echo \"comenzando
          deployment\"\n                }\n            }\n        }\n      }\n    }\n
          \   stage('deploy') {\n      steps {\n        script {\n            openshift.withCluster()
          {\n                openshift.withProject(env.QA_PROJECT) {\n                  //latest
          no es necesario porque el build trigger el deploy\n                  //def
          rm = openshift.selector(\"dc\", templateName).rollout().latest()\n                  //
          this will wait until the desired replicas are available\n                  sh
          \"sleep 15\"\n                  def dc = openshift.selector(\"dc\", templateName)\n
          \                 dc.rollout().status()\n                }\n            }\n
          \       }\n      }\n    }\n  }\n}\n"
      type: JenkinsPipeline
    triggeredBy:
    - message: Triggered by Jenkins job at http://jenkins-cicd.api-cloud.dirtrab.cl/job/pipelines-qa/job/pipelines-qa-srv0008-validaciones/
  status:
    completionTimestamp: "2023-10-16T19:25:43Z"
    conditions:
    - lastTransitionTime: "2023-10-16T19:22:21Z"
      lastUpdateTime: "2023-10-16T19:22:21Z"
      status: "False"
      type: New
    - lastTransitionTime: "2023-10-16T19:22:24Z"
      lastUpdateTime: "2023-10-16T19:22:24Z"
      status: "False"
      type: Pending
    - lastTransitionTime: "2023-10-16T19:25:43Z"
      lastUpdateTime: "2023-10-16T19:25:43Z"
      status: "False"
      type: Running
    - lastTransitionTime: "2023-10-16T19:25:43Z"
      lastUpdateTime: "2023-10-16T19:25:43Z"
      status: "True"
      type: Complete
    config:
      kind: BuildConfig
      name: srv0008-validaciones
      namespace: pipelines-qa
    output: {}
    phase: Complete
    startTimestamp: "2023-10-16T19:22:21Z"
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
